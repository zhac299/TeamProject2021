var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddIngredientComponent.html",[0,0.053,1,0.519]],["body/components/AddIngredientComponent.html",[0,0.077,1,0.814,2,0.637,3,0.097,4,0.097,5,0.57,6,0.57,7,0.57,8,0.57,9,0.097,10,3.934,11,2.975,12,4.893,13,2.757,14,0.859,15,1.054,16,0.57,17,1.389,18,1.242,19,1.214,20,0.913,21,0.819,22,5.376,23,0.819,24,4.594,25,0.163,26,0.284,27,1.104,28,1.681,29,1.143,30,0.478,31,2.512,32,6.479,33,1.152,34,5.877,35,3.544,36,0.594,37,3.198,38,4.435,39,2.918,40,0.312,41,3.198,42,5.066,43,3.961,44,3.961,45,3.961,46,3.544,47,0.559,48,0.018,49,0.528,50,0.22,51,0.559,52,0.333,53,1.183,54,2.444,55,2.599,56,4.134,57,4.594,58,2.533,59,5.366,60,1.513,61,4.635,62,4.635,63,4.801,64,1.797,65,4.635,66,4.147,67,4.594,68,3.198,69,2.077,70,4.558,71,5.066,72,4.594,73,2.182,74,4.594,75,2.983,76,4.594,77,2.599,78,0.647,79,0.876,80,3.198,81,4.594,82,0.925,83,3.198,84,1.548,85,1.331,86,1.479,87,1.621,88,0.084,89,1.699,90,2.074,91,2.983,92,3.198,93,3.544,94,1.897,95,4.594,96,1.322,97,4.594,98,3.198,99,4.594,100,0.745,101,4.594,102,3.776,103,4.594,104,3.961,105,3.198,106,0.627,107,0.57,108,3.198,109,0.351,110,0.272,111,0.823,112,2.077,113,2.757,114,0.671,115,1.44,116,1.519,117,0.861,118,4.635,119,1.605,120,0.113,121,0.73,122,1.078,123,5.877,124,3.198,125,2.757,126,2.757,127,2.757,128,1.729,129,2.173,130,1.293,131,4.594,132,1.479,133,2.074,134,2.069,135,2.983,136,1.414,137,2.757,138,3.198,139,3.198,140,3.198,141,2.077,142,3.198,143,3.232,144,4.594,145,3.961,146,4.594,147,4.594,148,1.824,149,2.467,150,2.757,151,2.757,152,2.182,153,2.776,154,2.077,155,2.444,156,1.621,157,1.809,158,1.582,159,2.86,160,2.077,161,2.085,162,1.87,163,3.198,164,1.701,165,2.069,166,1.44,167,2.188,168,1.519,169,2.599,170,1.24,171,1.44,172,2.077,173,1.933,174,1.605,175,2.467,176,1.513,177,1.081,178,2.983,179,2.182,180,2.444,181,2.757,182,0.517,183,0.819,184,0.819,185,0.57,186,1.048,187,0.57,188,0.57,189,1.24,190,0.467,191,0.508,192,0.443,193,0.57,194,0.467,195,0.332,196,0.467,197,0.517,198,0.57,199,0.467,200,0.57,201,0.467,202,0.57,203,0.467,204,0.57,205,0.57,206,0.467,207,0.397,208,0.443,209,0.354,210,0.57,211,0.467,212,0.57,213,0.57,214,0.443,215,0.517,216,0.819,217,0.467,218,0.443,219,0.517,220,0.819,221,0.492,222,0.543,223,0.443,224,0.42,225,0.57,226,0.443,227,0.467,228,0.517,229,0.959,230,0.467,231,0.57,232,0.467,233,0.57,234,0.443,235,0.819,236,0.467,237,0.443,238,0.467,239,0.57,240,0.443,241,0.543,242,0.57,243,0.467,244,0.57,245,0.539,246,0.467,247,0.517,248,0.467,249,0.517,250,0.467,251,0.57,252,0.467,253,0.517,254,0.443,255,0.354,256,0.292,257,0.57,258,0.57,259,0.007,260,0.01,261,0.007]],["title/components/AddIngredientDialogComponent.html",[0,0.053,114,0.547]],["body/components/AddIngredientDialogComponent.html",[0,0.083,1,0.517,2,0.71,3,0.114,4,0.114,5,0.666,6,0.666,7,0.666,8,0.666,9,0.114,10,4.017,11,3.038,14,0.958,15,1.146,16,0.666,17,1.404,18,1.259,19,1.2,20,0.927,21,0.913,23,0.913,25,0.132,26,0.317,27,1.354,28,1.827,29,0.574,30,0.532,33,1.233,36,0.646,40,0.319,46,2.88,47,0.608,48,0.018,49,0.552,50,0.251,51,0.608,52,0.362,64,1.379,69,1.507,78,0.685,79,0.866,82,0.81,84,1.726,85,1.292,86,1.649,87,1.807,88,0.097,89,1.894,96,1.532,100,0.517,107,1.244,109,0.33,110,0.318,111,0.961,112,2.425,114,0.919,115,3.198,117,1.005,120,0.132,121,0.781,129,2.162,130,1.855,132,2.406,143,3.603,182,0.604,183,0.913,184,0.913,185,0.666,186,1.122,187,0.666,188,0.666,189,1.285,190,0.545,191,0.566,192,0.517,193,0.666,194,0.545,195,0.388,196,0.545,197,0.604,198,0.666,199,0.545,200,0.666,201,0.545,202,0.666,203,0.545,204,0.666,205,0.666,206,0.545,207,0.464,208,0.517,209,0.413,210,0.666,211,0.545,212,0.666,213,0.666,214,0.517,215,0.604,216,0.913,217,0.545,218,0.517,219,0.604,220,0.913,221,0.574,222,0.634,223,0.517,224,0.49,225,0.666,226,0.517,227,0.545,228,0.604,229,1.043,230,0.545,231,0.666,232,0.545,233,0.666,234,0.517,235,0.913,236,0.545,237,0.517,238,0.545,239,0.666,240,0.517,241,0.634,242,0.666,243,0.545,244,0.666,245,0.601,246,0.545,247,0.604,248,0.545,249,0.604,250,0.545,251,0.666,252,0.545,253,0.604,254,0.517,255,0.413,256,0.341,257,0.666,258,0.666,259,0.008,260,0.011,261,0.008,262,1.773,263,2.934,264,2.57,265,4.426,266,3.603,267,3.951,268,1.874,269,3.13,270,3.796,271,3.219,272,3.326,273,2.439,274,5.122,275,2.934,276,2.934,277,2.88,278,3.734,279,3.095,280,3.603,281,1.069,282,3.219,283,2.691,284,3.777,285,4.79,286,5.122,287,2.88,288,2.724,289,1.986,290,2.57,291,2.425,292,3.219,293,1.681,294,1.874,295,2.112,296,0.732,297,1.051,298,2.112,299,3.734,300,3.951,301,2.432,302,3.951,303,2.085,304,2.57,305,3.603]],["title/components/AddMenuDialogComponent.html",[0,0.053,190,0.547]],["body/components/AddMenuDialogComponent.html",[0,0.097,1,0.376,2,0.565,3,0.083,4,0.083,5,0.484,6,0.484,7,0.484,8,0.484,9,0.083,11,3.12,14,0.762,15,0.958,16,0.484,17,1.371,18,1.221,19,1.13,20,0.717,21,0.726,23,0.726,25,0.096,26,0.252,27,1.195,28,1.605,29,1.097,30,0.423,33,1.065,36,0.3,38,4.234,40,0.331,46,3.142,47,0.635,48,0.018,49,0.537,50,0.255,51,0.635,52,0.392,55,3.688,56,2.865,78,0.717,79,0.906,82,0.678,84,0.915,85,0.836,88,0.039,96,1.1,100,0.376,106,0.799,107,1.189,109,0.383,110,0.231,111,0.699,112,1.763,113,2.34,114,0.397,115,3.284,120,0.096,121,0.828,125,2.34,126,2.34,127,2.34,129,1.807,130,1.638,132,2.147,136,1.672,145,3.512,161,1.053,165,1.834,182,0.439,183,0.726,184,0.726,185,0.484,186,0.969,187,0.484,188,0.484,189,1.189,190,0.794,191,0.6,192,0.376,193,0.484,194,0.397,195,0.282,196,0.397,197,0.791,198,0.484,199,0.397,200,0.484,201,0.397,202,0.484,203,0.397,204,0.484,205,0.484,206,0.397,207,0.893,208,0.376,209,0.3,210,0.484,211,0.397,212,0.484,213,0.484,214,0.376,215,0.439,216,0.726,217,0.397,218,0.376,219,0.439,220,0.726,221,0.418,222,0.461,223,0.376,224,0.356,225,0.484,226,0.376,227,0.397,228,0.439,229,0.872,230,0.397,231,0.484,232,0.397,233,0.484,234,0.376,235,0.726,236,0.397,237,0.376,238,0.397,239,0.484,240,0.376,241,0.461,242,0.484,243,0.397,244,0.484,245,0.478,246,0.397,247,0.439,248,0.397,249,0.439,250,0.397,251,0.484,252,0.397,253,0.439,254,0.376,255,0.3,256,0.723,257,0.484,258,0.484,259,0.006,260,0.009,261,0.006,262,1.289,263,2.453,264,2.044,265,3.821,266,2.865,267,3.142,268,1.362,269,2.764,270,3.174,273,1.579,276,2.921,279,3.282,280,2.865,281,1.108,283,2.615,284,3.251,285,3.821,287,2.094,289,1.444,290,2.044,293,2.201,294,1.362,295,1.536,297,1.376,298,1.536,300,3.142,301,2.902,303,2.488,304,2.044,305,2.865,306,4.125,307,4.073,308,4.073,309,3.512,310,4.073,311,4.587,312,2.765,313,4.888,314,4.073,315,4.683,316,5.82,317,4.073,318,5.432,319,3.83,320,4.073,321,3.439,322,3.174,323,2.765,324,2.954,325,3.771,326,3.517,327,4.073,328,3.166,329,2.715,330,4.095,331,2.645,332,2.715,333,4.073,334,2.865,335,4.073,336,2.715,337,4.073,338,3.612,339,3.512,340,4.683,341,4.073,342,1.506,343,2.715,344,4.683,345,6.112,346,4.073,347,4.683,348,2.715,349,4.3,350,2.34,351,4.073,352,3.142,353,4.073,354,2.715,355,2.715,356,2.715,357,2.715,358,1.658,359,4.073,360,4.073,361,4.073,362,3.142,363,2.094,364,2.715,365,2.715,366,3.512,367,2.765,368,4.073,369,2.715,370,1.742,371,3.512,372,4.073,373,1.161,374,2.094,375,1.64,376,2.094,377,1.289,378,0.958,379,0.799,380,2.715,381,0.836,382,2.715,383,2.715,384,2.715,385,2.094,386,2.715,387,2.715,388,4.073,389,2.257,390,4.073,391,2.715,392,2.715,393,2.715,394,2.34,395,2.715,396,2.715,397,2.715,398,2.715,399,2.715,400,2.715,401,2.715,402,2.715,403,2.715,404,2.715,405,2.715,406,2.715,407,2.715,408,2.34,409,2.34,410,2.715,411,4.073,412,0.699,413,2.715,414,2.715,415,2.715,416,2.34,417,2.715,418,3.292,419,2.715,420,2.715,421,4.073,422,4.073,423,4.073,424,3.512,425,1.658,426,3.142,427,3.142,428,3.142,429,3.142,430,3.142,431,3.142,432,3.142,433,3.142,434,3.142,435,3.142,436,2.865,437,3.142,438,4.073]],["title/components/AddStaffComponent.html",[0,0.053,192,0.519]],["body/components/AddStaffComponent.html",[0,0.074,1,0.416,2,0.608,3,0.091,4,0.091,5,0.536,6,0.536,7,0.536,8,0.536,9,0.091,10,4.035,11,3.052,14,0.821,15,1.017,16,0.536,17,1.382,18,1.234,19,1.175,20,0.352,21,0.783,23,0.783,25,0.202,26,0.272,27,1.066,28,1.823,29,0.462,30,0.456,31,1.702,33,1.119,35,3.386,36,0.573,39,2.734,40,0.322,47,0.593,48,0.018,49,0.531,50,0.238,51,0.593,52,0.272,53,1.13,58,1.787,60,1.236,64,1.182,69,1.292,78,0.681,79,0.882,82,0.841,84,1.479,85,1.172,86,1.414,87,1.549,88,0.09,89,1.623,90,2.014,94,1.06,96,1.427,100,0.416,102,3.434,106,1.017,107,0.925,109,0.369,110,0.256,111,0.773,114,0.439,115,1.353,116,2.085,117,0.809,119,1.508,120,0.106,121,0.644,122,1.012,128,1.679,129,2.344,130,1.236,132,1.671,133,2.014,134,1.977,135,2.851,136,1.869,137,2.59,141,1.951,148,1.785,149,2.317,152,1.426,153,1.815,154,1.951,155,2.335,156,1.549,157,1.699,158,1.527,159,2.76,160,1.951,161,2.012,162,1.787,164,1.598,165,1.977,166,1.977,167,2.112,168,1.426,169,2.483,170,1.165,171,1.353,172,1.951,173,1.815,174,1.508,175,2.317,176,1.632,177,1.221,178,2.851,179,2.085,180,2.335,181,2.59,182,0.486,183,0.783,184,0.783,185,0.536,186,1.018,187,0.536,188,0.536,189,1.221,190,0.439,191,0.485,192,0.791,193,0.536,194,0.641,195,0.825,196,0.439,197,0.486,198,0.536,199,0.439,200,0.536,201,0.439,202,0.536,203,0.439,204,0.536,205,0.536,206,0.439,207,0.373,208,0.416,209,0.332,210,0.536,211,0.439,212,0.536,213,0.536,214,0.416,215,0.486,216,0.783,217,0.439,218,0.416,219,0.839,220,0.783,221,0.462,222,0.51,223,0.416,224,0.394,225,0.536,226,0.416,227,0.439,228,0.486,229,0.925,230,0.439,231,0.536,232,0.439,233,0.536,234,0.416,235,0.783,236,0.439,237,0.841,238,0.439,239,0.536,240,0.416,241,0.51,242,0.536,243,0.439,244,0.536,245,0.515,246,0.439,247,0.486,248,0.641,249,1.059,250,0.439,251,0.536,252,0.439,253,0.486,254,0.416,255,0.573,256,0.473,257,0.536,258,0.536,259,0.007,260,0.01,261,0.007,272,2.851,273,2.012,281,0.746,342,1.111,358,1.787,379,0.884,389,2.213,412,1.13,418,2.483,439,5.018,440,2.59,441,5.188,442,4.39,443,5.188,444,3.369,445,5.188,446,3.023,447,3.785,448,5.707,449,4.39,450,3.004,451,3.704,452,3.004,453,1.292,454,1.414,455,1.414,456,3.785,457,3.004,458,3.004,459,2.335,460,1.351,461,2.653,462,3.785,463,1.236,464,2.483,465,2.851,466,2.335,467,2.935,468,3.386,469,3.004,470,2.323,471,3.785,472,2.203,473,4.39,474,3.004,475,3.386,476,4.39,477,4.39,478,3.004,479,3.004,480,3.004,481,2.851,482,3.089,483,3.004,484,3.004,485,3.004,486,1.508,487,2.113,488,2.113,489,1.815,490,1.951,491,3.004,492,3.004,493,5.707,494,3.004,495,3.004,496,3.004,497,4.39,498,4.39,499,3.004,500,4.39,501,3.004,502,3.004,503,3.785,504,4.39,505,5.188,506,5.188,507,3.004,508,3.004,509,4.39,510,4.39,511,3.004,512,3.004,513,3.004,514,3.089,515,4.39,516,3.004,517,2.113,518,1.111,519,1.285,520,1.426,521,1.426,522,1.285,523,1.165,524,3.004,525,3.004]],["title/components/AddStaffDialogComponent.html",[0,0.053,194,0.547]],["body/components/AddStaffDialogComponent.html",[0,0.075,1,0.424,2,0.616,3,0.093,4,0.093,5,0.545,6,0.545,7,0.545,8,0.545,9,0.093,10,4.2,11,3.176,14,0.832,15,1.028,16,0.545,17,1.384,18,1.236,19,1.178,20,0.359,21,0.793,23,0.793,25,0.108,26,0.275,27,1.454,28,1.837,29,0.47,30,0.462,33,1.128,36,0.579,40,0.337,47,0.545,48,0.018,49,0.521,50,0.256,51,0.545,52,0.324,53,1.643,54,2.366,58,1.81,64,1.549,69,1.309,78,0.701,79,0.93,82,0.913,84,1.499,85,0.913,86,1.432,87,1.57,88,0.087,89,1.645,90,1.57,96,1.295,100,0.727,102,3.459,106,1.128,107,1.227,109,0.36,110,0.26,111,0.787,114,0.447,115,3.343,120,0.108,121,0.793,129,1.645,130,1.721,132,2.363,161,1.725,182,0.495,183,0.793,184,0.793,185,0.545,186,1.027,187,0.545,188,0.545,189,1.227,190,0.447,191,0.492,192,0.424,193,0.545,194,0.841,195,0.825,196,0.447,197,0.495,198,0.545,199,0.447,200,0.545,201,0.447,202,0.545,203,0.447,204,0.545,205,0.545,206,0.447,207,0.38,208,0.424,209,0.338,210,0.545,211,0.447,212,0.545,213,0.545,214,0.424,215,0.495,216,0.793,217,0.447,218,0.424,219,0.495,220,0.793,221,0.47,222,0.52,223,0.424,224,0.402,225,0.545,226,0.424,227,0.447,228,0.495,229,0.935,230,0.447,231,0.545,232,0.447,233,0.545,234,0.424,235,0.793,236,0.447,237,0.424,238,0.447,239,0.545,240,0.424,241,0.52,242,0.545,243,0.447,244,0.545,245,0.886,246,0.447,247,0.495,248,0.447,249,0.495,250,0.447,251,0.545,252,0.447,253,0.989,254,0.424,255,0.579,256,0.279,257,0.545,258,0.545,259,0.007,260,0.01,261,0.007,262,1.452,263,2.631,264,2.232,265,4.049,266,3.129,267,3.431,268,1.535,269,2.904,270,3.404,271,2.637,272,2.888,273,2.553,275,2.631,276,2.631,279,2.688,280,3.129,281,1.084,283,2.73,284,3.394,285,3.129,288,2.366,289,1.627,290,2.232,293,1.377,294,1.535,295,1.73,297,0.861,298,2.965,300,3.431,304,2.232,305,3.129,338,3.659,342,1.131,350,2.637,363,2.359,412,1.145,451,4.005,453,1.878,454,2.055,455,2.055,460,1.369,486,1.535,487,2.152,503,3.835,514,3.129,526,3.688,527,3.688,528,2.745,529,5.756,530,5.756,531,5.756,532,3.058,533,3.058,534,3.058,535,3.058,536,3.058,537,3.835,538,4.448,539,3.058,540,3.058,541,3.058,542,2.637,543,3.835,544,3.835,545,3.058,546,2.688,547,4.043,548,3.058,549,2.637,550,2.637,551,3.478,552,1.452,553,1.377,554,3.058,555,3.058,556,2.637,557,3.058,558,3.058,559,3.058,560,3.058,561,2.637,562,3.058,563,3.058,564,3.058,565,2.688,566,2.688]],["title/components/AllergensChipsComponent.html",[0,0.053,196,0.547]],["body/components/AllergensChipsComponent.html",[0,0.065,1,0.339,2,0.522,3,0.074,4,0.074,5,0.436,6,0.436,7,0.436,8,0.436,9,0.074,14,0.704,15,0.899,16,0.436,17,1.358,18,1.197,19,0.989,20,0.287,21,0.671,23,0.671,25,0.162,26,0.233,29,0.376,30,0.391,33,1.01,36,0.569,40,0.337,47,0.636,48,0.018,49,0.512,50,0.247,51,0.636,52,0.378,53,0.969,60,1.059,64,1.013,69,1.515,73,1.162,78,0.733,79,0.908,82,1.022,84,1.268,85,1.205,86,1.212,87,1.328,88,0.09,89,1.391,90,2.227,96,1.321,100,0.339,106,1.199,107,1.342,109,0.373,110,0.32,114,0.357,117,0.658,120,0.087,121,0.804,128,1.515,133,0.863,148,1.564,158,1.107,161,0.948,170,0.948,171,1.101,176,1.625,177,1.212,182,0.396,183,0.671,184,0.671,185,0.436,186,0.918,187,0.436,188,0.436,189,1.155,190,0.357,191,0.649,192,0.339,193,0.436,194,0.357,195,0.254,196,0.752,197,1.202,198,0.436,199,0.357,200,0.436,201,0.357,202,0.436,203,0.357,204,0.436,205,0.436,206,0.357,207,0.304,208,0.875,209,0.649,210,0.436,211,0.357,212,0.436,213,0.436,214,0.339,215,0.396,216,0.671,217,0.357,218,0.339,219,0.396,220,0.671,221,0.376,222,0.416,223,0.339,224,0.321,225,0.436,226,0.339,227,0.357,228,0.396,229,0.818,230,0.357,231,0.436,232,0.357,233,0.436,234,0.339,235,0.671,236,0.357,237,0.339,238,0.357,239,0.436,240,0.339,241,0.416,242,0.436,243,0.357,244,0.436,245,0.441,246,0.357,247,0.396,248,0.357,249,0.396,250,0.357,251,0.436,252,0.357,253,0.396,254,0.339,255,0.27,256,0.47,257,0.436,258,0.436,259,0.014,260,0.008,261,0.005,266,2.647,273,1.997,280,2.647,281,1.072,283,2.203,284,3.676,285,4.13,288,2.001,289,2.001,296,1.471,297,1.449,304,1.889,338,3.516,342,1.904,347,4.439,349,5.005,358,1.532,374,1.887,377,1.162,378,0.863,379,0.72,381,1.057,389,1.997,394,3.244,412,0.969,427,2.903,428,2.903,429,2.903,430,2.903,431,2.903,432,2.903,433,2.903,434,2.903,435,2.903,436,2.647,437,2.903,453,1.945,454,1.212,460,1.585,463,1.564,518,1.904,519,2.203,520,2.445,521,2.445,547,1.887,551,2.274,567,3.714,568,5.709,569,5.709,570,2.109,571,5.149,572,4.586,573,3.763,574,4.586,575,4.586,576,4.586,577,4.586,578,5.87,579,5.559,580,5.559,581,4.586,582,3.763,583,5.149,584,5.149,585,5.149,586,3.763,587,2.647,588,4.528,589,2.446,590,3.763,591,2.913,592,2.903,593,3.763,594,2.446,595,3.763,596,3.763,597,3.763,598,3.623,599,2.903,600,3.763,601,3.763,602,3.763,603,4.439,604,6.294,605,3.763,606,3.763,607,5.149,608,2.446,609,3.344,610,3.763,611,3.763,612,5.149,613,2.446,614,2.274,615,3.804,616,2.446,617,3.972,618,3.244,619,5.149,620,2.445,621,2.446,622,2.446,623,3.763,624,2.446,625,2.001,626,5.149,627,3.763,628,2.446,629,2.903,630,2.903,631,2.446,632,3.763,633,3.763,634,5.149,635,2.446,636,3.763,637,3.972,638,5.149,639,2.446,640,3.244,641,4.439,642,3.244,643,3.244,644,2.446,645,2.771,646,3.763,647,2.446,648,2.446,649,3.954,650,2.446,651,2.446,652,2.446,653,3.244,654,3.763,655,3.763,656,2.446,657,5.061,658,5.87,659,2.446,660,4.586,661,4.586,662,2.446,663,3.763,664,3.763,665,3.763,666,2.446,667,2.446,668,1.721,669,2.109,670,2.109,671,2.446,672,1.478,673,1.887,674,2.109,675,2.446,676,2.446,677,2.446,678,2.446,679,2.446,680,2.446,681,2.001,682,2.446,683,2.446,684,2.446,685,2.446,686,3.763,687,2.446,688,2.446,689,2.446,690,2.446,691,2.446,692,2.446,693,2.446,694,2.446,695,2.446,696,2.446,697,2.446,698,2.446,699,2.446,700,2.446,701,2.446,702,2.446,703,2.446,704,2.446,705,1.228,706,2.739,707,2.446,708,3.763,709,4.586,710,1.721,711,2.446]],["title/components/AppComponent.html",[0,0.053,199,0.547]],["body/components/AppComponent.html",[0,0.093,1,0.65,2,0.826,3,0.143,4,0.143,5,0.837,6,0.837,7,0.837,8,0.837,9,0.143,16,0.837,17,1.422,18,1.281,19,1.149,20,0.55,21,1.062,23,1.062,25,0.166,26,0.369,29,0.722,30,0.619,40,0.272,47,0.488,48,0.018,49,0.518,50,0.211,51,0.488,78,0.488,82,0.907,88,0.067,100,0.65,106,0.92,107,0.837,109,0.369,110,0.399,114,0.686,120,0.166,129,2.42,158,1.753,177,1.105,182,0.759,183,1.062,184,1.062,185,0.837,186,1.228,187,0.837,188,0.837,189,1.344,190,0.686,191,0.658,192,0.65,193,0.837,194,0.686,195,0.488,196,0.686,197,0.759,198,0.837,199,1.006,200,0.837,201,0.686,202,0.837,203,0.686,204,0.837,205,0.837,206,0.686,207,0.583,208,0.65,209,0.519,210,0.837,211,0.686,212,0.837,213,0.837,214,0.65,215,0.759,216,1.062,217,0.686,218,0.65,219,0.759,220,1.062,221,0.722,222,0.797,223,0.65,224,0.616,225,0.837,226,0.65,227,0.686,228,0.759,229,1.167,230,0.686,231,0.837,232,0.686,233,0.837,234,0.65,235,1.062,236,0.686,237,0.65,238,0.686,239,0.837,240,0.65,241,0.797,242,0.837,243,0.686,244,0.837,245,0.699,246,0.686,247,0.759,248,0.686,249,0.759,250,0.686,251,0.837,252,0.686,253,0.759,254,0.65,255,0.519,256,0.428,257,0.837,258,0.837,259,0.01,260,0.013,261,0.01,296,0.92,297,1.321,712,4.046,713,2.682,714,6.544,715,5.957,716,5.957,717,5.957,718,6.884,719,4.693,720,5.957,721,5.136,722,4.693,723,1.91,724,4.595,725,4.693,726,3.62,727,4.693,728,4.693,729,3.62,730,4.693,731,3.62]],["title/modules/AppModule.html",[732,2.633,733,2.633]],["body/modules/AppModule.html",[1,0.913,3,0.102,4,0.102,9,0.102,11,2.817,12,2.361,18,0.543,20,0.558,48,0.018,82,0.959,88,0.048,100,0.913,109,0.449,110,0.286,111,0.864,114,0.962,115,2.486,116,3.34,120,0.119,182,0.543,190,0.962,192,0.913,194,0.962,195,0.494,196,0.989,199,1.064,201,0.989,203,0.962,206,0.962,207,0.417,208,0.938,209,0.764,211,0.962,214,0.913,215,0.769,217,0.962,218,0.913,219,0.543,223,0.913,224,0.441,226,0.913,227,0.962,228,0.769,230,0.962,232,0.962,234,0.913,236,0.962,237,0.465,238,0.962,240,0.913,243,0.962,245,0.704,246,0.962,248,0.962,250,0.962,252,0.962,253,0.543,254,0.913,255,0.728,256,0.434,259,0.007,260,0.011,261,0.007,374,2.589,439,2.361,488,2.361,568,2.589,569,2.589,588,2.589,625,1.785,668,3.345,669,2.893,670,2.893,672,2.028,681,1.785,732,2.361,733,5.615,734,2.179,735,2.361,736,4.76,737,4.259,738,3.667,739,2.589,740,2.893,741,2.893,742,2.893,743,2.893,744,4.275,745,4.099,746,2.893,747,3.356,748,4.099,749,4.755,750,4.099,751,2.589,752,4.099,753,3.356,754,3.356,755,4.755,756,1.511,757,2.361,758,4.259,759,2.361,760,2.179,761,2.893,762,2.361,763,2.893,764,4.755,765,4.755,766,3.356,767,4.755,768,3.356,769,4.755,770,3.356,771,2.589,772,4.755,773,4.755,774,3.356,775,4.755,776,3.356,777,4.755,778,3.356,779,4.755,780,3.356,781,4.755,782,3.356,783,4.755,784,3.356,785,4.755,786,2.589,787,4.755,788,3.356,789,4.755,790,3.356,791,4.755,792,3.356,793,4.755,794,2.589,795,2.589,796,3.356,797,3.356,798,4.755,799,4.755,800,4.755,801,3.356,802,4.755,803,3.356,804,4.755,805,2.589,806,2.589,807,4.755,808,3.356,809,3.356,810,2.589,811,2.589,812,3.356,813,3.356,814,5.522,815,3.356,816,2.589,817,2.361,818,2.361,819,2.179,820,2.361,821,2.179,822,2.589,823,2.589,824,3.356,825,4.755,826,3.356,827,4.755,828,2.361,829,4.755,830,3.356,831,3.356,832,2.589,833,5.522,834,2.361,835,4.755,836,1.898,837,1.898,838,2.589,839,2.361,840,2.893,841,2.589,842,2.893,843,2.589,844,4.755,845,3.356,846,3.356,847,4.755,848,3.356,849,2.893,850,2.893,851,2.361,852,2.589,853,2.361,854,2.589]],["title/modules/AppRoutingModule.html",[732,2.633,744,2.43]],["body/modules/AppRoutingModule.html",[0,0.11,1,0.866,3,0.154,4,0.154,9,0.154,11,3.026,12,3.563,20,0.594,48,0.018,88,0.072,100,1.026,109,0.439,110,0.431,120,0.179,128,1.491,192,0.866,195,0.527,208,0.866,209,0.749,214,0.702,215,1.096,218,0.866,219,1.011,221,0.961,222,0.861,223,0.866,224,0.82,226,0.866,234,0.866,240,0.866,241,0.861,254,0.866,255,0.749,256,0.645,259,0.011,260,0.014,261,0.011,439,3.563,672,3.061,723,2.062,734,3.289,739,3.907,744,4.057,748,4.367,752,5.387,757,3.563,758,5.226,759,3.563,760,3.289,761,4.367,762,3.563,763,5.387,771,3.907,828,3.563,834,3.563,842,4.367,849,4.367,850,4.367,855,5.065,856,5.065,857,3.534,858,6.248,859,3.907,860,5.065,861,7.724,862,5.065,863,5.065,864,5.065,865,5.065,866,5.065,867,5.065,868,5.065,869,5.065,870,5.065]],["title/components/BasketComponent.html",[0,0.053,201,0.547]],["body/components/BasketComponent.html",[0,0.067,1,0.356,2,0.541,3,0.078,4,0.078,5,0.458,6,0.458,7,0.458,8,0.458,9,0.078,14,0.73,15,0.926,16,0.458,17,1.364,18,1.213,19,1.062,20,0.301,21,0.696,23,0.696,25,0.201,26,0.242,28,1.3,29,0.395,30,0.406,31,1.514,33,1.035,36,0.584,40,0.319,47,0.59,48,0.018,49,0.492,50,0.237,51,0.59,52,0.352,53,1.724,58,1.923,60,1.099,64,1.051,69,1.149,78,0.682,79,0.906,82,1.028,84,1.316,85,1.084,87,1.378,88,0.085,89,1.444,94,2.004,96,0.879,100,0.356,106,0.766,107,0.696,109,0.361,110,0.219,111,0.661,114,0.375,117,0.691,120,0.091,121,0.815,128,1.391,129,0.949,132,2.064,136,1.454,148,1.804,158,1.391,161,2.32,164,2.808,165,2.128,167,1.923,176,1.833,177,1.464,182,0.415,183,0.696,184,0.696,185,0.458,186,1.013,187,0.458,188,0.458,189,1.171,190,0.375,191,0.836,192,0.356,193,0.458,194,0.375,195,0.267,196,0.375,197,0.415,198,0.458,199,0.375,200,0.458,201,0.771,202,0.458,203,0.375,204,0.458,205,0.458,206,0.375,207,0.319,208,0.356,209,0.799,210,0.458,211,0.375,212,0.458,213,0.458,214,0.356,215,0.415,216,0.696,217,0.375,218,0.356,219,0.415,220,0.696,221,0.395,222,0.436,223,0.356,224,0.337,225,0.458,226,0.356,227,0.375,228,0.415,229,0.843,230,0.375,231,0.458,232,0.375,233,0.458,234,0.356,235,0.696,236,0.375,237,0.356,238,0.375,239,0.458,240,0.356,241,0.436,242,0.458,243,0.375,244,0.458,245,0.827,246,0.375,247,0.764,248,0.375,249,0.415,250,0.375,251,0.458,252,0.375,253,0.415,254,0.356,255,0.522,256,0.234,257,0.458,258,0.458,259,0.006,260,0.009,261,0.006,272,2.536,273,2.047,276,2.65,281,1.173,283,1.67,288,2.077,290,1.288,293,1.156,294,1.288,296,1.035,303,1.589,338,3.409,342,0.949,381,1.277,389,2.485,412,1.005,418,3.625,446,2.378,453,2.031,454,2.222,455,2.064,460,1.625,463,1.099,464,2.987,468,1.98,470,1.923,472,1.96,518,2.37,519,2.559,520,2.841,521,2.841,523,0.995,528,2.485,537,3.366,553,1.156,567,3.541,587,3.715,591,2.987,599,3.012,609,2.536,630,3.012,673,3.645,836,1.452,837,3.625,871,2.213,872,4.074,873,4.725,874,3.905,875,3.689,876,4.074,877,4.074,878,5.68,879,2.673,880,3.905,881,5.28,882,2.359,883,5.68,884,2.567,885,3.191,886,4.162,887,3.043,888,3.043,889,3.905,890,3.366,891,3.715,892,1.421,893,2.855,894,4.038,895,1.854,896,2.507,897,3.905,898,3.905,899,2.567,900,3.905,901,3.905,902,2.567,903,2.65,904,3.429,905,2.209,906,2.567,907,3.905,908,3.905,909,2.567,910,3.905,911,3.905,912,1.551,913,2.673,914,2.567,915,2.213,916,2.855,917,2.567,918,2.567,919,4.615,920,3.885,921,2.747,922,3.366,923,3.905,924,3.905,925,3.366,926,3.012,927,2.077,928,3.905,929,3.012,930,3.366,931,2.536,932,3.366,933,3.905,934,2.567,935,3.366,936,3.715,937,2.567,938,2.567,939,3.012,940,2.567,941,2.567,942,2.213,943,1.452,944,1.667,945,1.452,946,2.567,947,3.366,948,2.567,949,2.213,950,2.213,951,1.806,952,2.213,953,2.567,954,5.28,955,4.615,956,4.073,957,4.725,958,3.905,959,4.725,960,2.213,961,1.98,962,1.98,963,2.213,964,2.213,965,1.806,966,2.213,967,2.567,968,2.567,969,5.28,970,4.552,971,3.012,972,3.366,973,3.905,974,3.905,975,3.905,976,2.209,977,2.077,978,2.65,979,4.381,980,2.567,981,2.378,982,2.213,983,1.667,984,1.365,985,2.567,986,3.905,987,2.021,988,2.507,989,2.673,990,3.689,991,2.567,992,2.213,993,2.567]],["title/components/CallWaiterComponent.html",[0,0.053,203,0.547]],["body/components/CallWaiterComponent.html",[0,0.077,1,0.452,2,0.646,3,0.099,4,0.099,5,0.581,6,0.581,7,0.581,8,0.581,9,0.099,14,0.871,15,1.065,16,0.581,17,1.391,18,1.238,19,1.014,20,0.382,21,0.831,23,0.831,25,0.115,26,0.288,29,0.501,30,0.484,33,1.162,36,0.655,40,0.314,47,0.484,48,0.018,49,0.469,50,0.21,51,0.484,52,0.288,53,1.199,54,2.477,55,3.353,58,2.413,64,1.254,69,1.371,73,2.58,78,0.746,79,0.917,82,0.753,84,1.57,85,0.956,86,2.1,87,1.643,88,0.093,89,1.722,90,1.643,91,2.117,100,0.452,109,0.334,110,0.277,114,0.476,117,0.877,120,0.115,121,0.779,136,1.672,156,1.15,176,0.839,177,0.767,182,0.527,183,0.831,184,0.831,185,0.581,186,1.057,187,0.581,188,0.581,189,1.246,190,0.476,191,0.515,192,0.452,193,0.581,194,0.476,195,0.339,196,0.476,197,0.527,198,0.581,199,0.476,200,0.581,201,0.476,202,0.581,203,0.866,204,1.279,205,0.581,206,0.476,207,0.405,208,0.869,209,0.721,210,0.581,211,0.476,212,0.581,213,0.581,214,0.452,215,0.527,216,0.831,217,0.476,218,0.452,219,0.527,220,0.831,221,0.501,222,0.554,223,0.452,224,0.428,225,0.581,226,0.452,227,0.476,228,0.527,229,0.969,230,0.476,231,0.581,232,0.476,233,0.581,234,0.452,235,0.831,236,0.476,237,0.452,238,0.476,239,0.581,240,0.452,241,0.554,242,0.581,243,0.476,244,0.581,245,0.895,246,0.476,247,0.527,248,0.476,249,0.527,250,0.476,251,0.581,252,0.476,253,0.527,254,0.452,255,0.801,256,0.297,257,0.581,258,0.581,259,0.007,260,0.01,261,0.007,281,1.251,283,1.992,296,1.279,304,3.273,342,2.009,358,1.896,370,1.992,381,1.339,412,1.199,446,2.936,453,1.745,454,1.5,455,1.909,459,3.468,460,2.007,461,2.814,463,1.835,464,3.689,470,2.654,528,2.662,553,1.468,567,3.506,591,3.353,592,3.592,614,2.814,625,2.477,672,1.97,706,1.734,810,5.389,811,5.389,836,1.844,837,4.134,879,3.074,882,2.814,885,3.582,893,3.582,894,4.705,896,3.26,912,2.814,913,3.797,915,4.015,916,3.94,920,4.234,921,4.588,932,5.111,939,3.592,951,2.293,961,4.191,965,3.277,981,1.468,987,1.395,988,1.548,994,2.811,995,5.434,996,4.657,997,6.27,998,5.928,999,6.521,1000,2.811,1001,4.657,1002,4.685,1003,3.26,1004,2.975,1005,6.713,1006,3.26,1007,4.685,1008,3.26,1009,3.26,1010,3.277,1011,4.657,1012,3.592,1013,4.657,1014,3.26,1015,3.26,1016,3.592,1017,2.811,1018,2.811,1019,4.657,1020,3.26,1021,2.811,1022,2.811,1023,2.515,1024,2.811,1025,2.811,1026,2.811,1027,1.548,1028,2.89,1029,2.117,1030,1.97,1031,1.97,1032,2.293,1033,2.293,1034,2.811,1035,2.293,1036,2.811]],["title/components/CategoryDialogComponent.html",[0,0.053,206,0.547]],["body/components/CategoryDialogComponent.html",[0,0.088,1,0.57,2,0.758,3,0.125,4,0.125,5,0.733,6,0.733,7,0.733,8,0.733,9,0.125,14,1.023,15,1.204,16,0.733,17,1.412,18,1.269,19,1.156,20,0.482,21,0.975,23,0.975,25,0.146,26,0.338,27,1.399,28,1.809,29,0.632,30,0.568,33,1.283,36,0.679,40,0.32,47,0.427,48,0.018,49,0.539,50,0.217,51,0.427,52,0.254,64,1.471,69,1.609,78,0.638,79,0.859,82,0.851,84,1.842,85,1.468,86,1.76,87,1.929,88,0.1,89,2.021,100,0.57,109,0.369,110,0.35,111,1.058,114,0.601,117,1.107,120,0.146,121,0.679,130,1.917,132,2.366,182,0.665,183,0.975,184,0.975,185,0.733,186,1.167,187,0.733,188,0.733,189,1.311,190,0.601,191,0.604,192,0.57,193,0.733,194,0.601,195,0.427,196,0.601,197,0.665,198,0.733,199,0.601,200,0.733,201,0.601,202,0.733,203,0.601,204,0.733,205,0.733,206,0.956,207,0.941,208,0.57,209,0.454,210,0.733,211,0.601,212,0.733,213,0.733,214,0.57,215,0.665,216,0.975,217,0.601,218,0.57,219,0.665,220,0.975,221,0.632,222,0.699,223,0.57,224,0.54,225,0.733,226,0.57,227,0.601,228,0.665,229,1.095,230,0.601,231,0.733,232,0.601,233,0.733,234,0.57,235,0.975,236,0.601,237,0.57,238,0.601,239,0.733,240,0.57,241,0.699,242,0.733,243,0.601,244,0.733,245,0.641,246,0.601,247,0.665,248,0.601,249,0.665,250,0.601,251,0.733,252,0.601,253,0.665,254,0.57,255,0.454,256,0.56,257,0.733,258,0.733,259,0.009,260,0.012,261,0.009,262,1.952,263,3.082,264,2.743,265,4.604,268,2.063,269,3.235,273,2.381,275,3.082,276,3.082,277,3.171,279,3.954,289,2.187,290,2.743,291,2.67,292,3.545,293,1.851,294,2.063,295,2.326,298,2.326,304,2.743,305,3.845,315,5.642,328,3.235,373,1.759,375,2.484,851,5.029,1037,6.163,1038,3.545,1039,6.14,1040,3.545,1041,4.112,1042,4.112,1043,4.112]],["title/classes/Customer.html",[88,0.053,209,0.414]],["body/classes/Customer.html",[3,0.171,4,0.171,9,0.171,25,0.199,26,0.411,40,0.324,48,0.018,50,0.251,52,0.347,82,0.921,88,0.08,109,0.375,120,0.199,191,0.81,209,0.862,237,1.061,245,0.918,259,0.012,260,0.015,261,0.012,281,1.13,892,2.061,931,4.317,1044,2.527,1045,4.839,1046,6.648,1047,5.613,1048,5.613,1049,4.677,1050,5.613]],["title/components/CustomerInterfaceComponent.html",[0,0.053,208,0.519]],["body/components/CustomerInterfaceComponent.html",[0,0.057,1,0.273,2,0.439,3,0.06,4,0.06,5,0.351,6,0.351,7,0.351,8,0.351,9,0.06,14,0.593,15,0.781,16,0.351,17,1.328,18,1.171,19,0.977,20,0.231,21,0.565,23,0.565,25,0.07,26,0.196,27,0.818,28,1.746,29,0.303,30,0.33,33,0.895,36,0.44,39,2.254,40,0.322,47,0.608,48,0.018,49,0.511,50,0.239,51,0.628,52,0.362,53,1.377,64,0.853,69,0.933,73,1.505,78,0.737,79,0.862,82,0.91,84,1.068,85,1.028,86,1.021,87,1.119,88,0.076,89,1.172,90,1.888,94,0.694,96,0.443,100,0.273,106,0.622,107,0.565,109,0.37,110,0.167,111,0.507,114,0.287,117,0.53,119,2.685,120,0.07,121,0.75,122,0.663,128,0.933,130,0.554,132,1.282,133,2.065,134,0.886,136,0.976,143,1.384,148,1.996,152,1.505,153,1.916,155,1.686,156,2.237,157,1.113,158,1.959,161,1.941,162,1.62,164,1.047,165,2.254,166,1.428,167,0.801,168,1.89,169,1.113,170,2.405,171,2.721,173,1.189,174,0.988,176,1.787,177,1.422,179,0.934,182,0.318,183,0.565,184,0.565,185,0.351,186,0.954,187,0.351,188,0.351,189,1.078,190,0.287,191,0.622,192,0.273,193,0.351,194,0.287,195,0.205,196,0.287,197,1.003,198,0.351,199,0.287,200,0.351,201,0.463,202,0.351,203,0.287,204,0.351,205,0.351,206,0.287,207,0.891,208,0.633,209,0.736,210,0.351,211,0.287,212,0.351,213,0.351,214,0.273,215,0.977,216,0.565,217,0.287,218,0.273,219,0.318,220,0.565,221,0.303,222,0.334,223,0.273,224,0.258,225,0.351,226,0.273,227,0.287,228,0.318,229,0.71,230,0.287,231,0.351,232,0.287,233,0.351,234,0.273,235,0.565,236,0.287,237,0.552,238,0.463,239,0.351,240,0.273,241,0.334,242,0.351,243,0.287,244,0.351,245,0.587,246,0.287,247,0.318,248,0.287,249,0.318,250,0.287,251,0.351,252,0.287,253,0.318,254,0.273,255,0.218,256,0.71,257,0.351,258,0.351,259,0.004,260,0.007,261,0.004,273,1.941,276,1.998,281,1.027,283,1.953,284,2.662,288,1.047,296,1.103,297,0.554,301,0.934,303,2.743,311,4.117,312,2.252,319,3.537,328,2.945,330,2.23,338,3.492,342,2.492,358,1.29,362,1.518,366,3.432,373,0.842,375,1.189,376,1.518,381,0.938,385,1.518,389,2.343,412,0.816,426,2.445,436,1.384,446,2.056,453,1.574,454,1.723,455,1.47,459,2.845,460,1.405,461,3.233,463,1.285,464,2.582,470,1.62,475,2.445,489,1.916,518,2.234,522,1.703,523,2.505,546,1.916,567,3.559,587,2.23,591,1.793,598,3.764,603,3.936,604,3.936,609,1.278,614,1.916,615,3.586,617,2.445,625,2.118,629,1.518,630,1.518,645,1.189,653,3.432,673,1.518,705,2.512,706,2.118,723,0.801,726,1.518,729,1.518,731,1.518,759,4.988,839,1.384,840,1.696,872,2.733,875,1.278,877,5.046,879,1.113,891,2.945,892,1.072,903,0.988,904,2.585,913,1.793,919,2.445,935,1.696,936,3.522,944,1.278,960,2.733,970,2.733,976,1.793,977,1.686,978,3.182,981,2.721,984,2.662,987,2.289,988,1.89,989,2.831,990,2.585,992,1.696,1035,1.384,1051,1.696,1052,2.733,1053,2.733,1054,3.981,1055,3.17,1056,3.522,1057,3.981,1058,3.17,1059,3.17,1060,3.17,1061,5.35,1062,3.17,1063,3.936,1064,3.981,1065,4.565,1066,3.17,1067,3.17,1068,1.518,1069,2.823,1070,4.117,1071,3.299,1072,2.964,1073,3.436,1074,3.17,1075,2.733,1076,3.026,1077,2.445,1078,1.968,1079,1.968,1080,1.968,1081,1.696,1082,3.936,1083,3.17,1084,1.968,1085,3.071,1086,1.968,1087,1.968,1088,1.968,1089,3.17,1090,1.968,1091,3.113,1092,3.17,1093,3.17,1094,3.17,1095,2.733,1096,3.17,1097,1.968,1098,2.733,1099,3.981,1100,1.968,1101,1.968,1102,2.445,1103,2.733,1104,1.968,1105,1.916,1106,3.432,1107,3.25,1108,3.17,1109,2.733,1110,2.733,1111,1.968,1112,3.981,1113,3.071,1114,3.981,1115,3.432,1116,1.968,1117,1.968,1118,1.968,1119,3.17,1120,2.733,1121,1.968,1122,1.968,1123,3.17,1124,1.968,1125,3.17,1126,1.968,1127,1.968,1128,1.968,1129,1.968,1130,1.968,1131,1.968,1132,1.696,1133,3.17,1134,1.696,1135,3.17,1136,1.968,1137,3.522,1138,3.432,1139,1.968,1140,1.696,1141,1.696,1142,1.968,1143,1.189,1144,1.968,1145,1.968,1146,1.968,1147,2.733,1148,3.521,1149,1.968,1150,1.968,1151,1.518,1152,3.212,1153,2.733,1154,3.981,1155,1.696,1156,1.968,1157,1.968,1158,1.696,1159,1.384,1160,1.384,1161,1.384,1162,1.968,1163,3.17,1164,1.968,1165,3.17,1166,1.968,1167,1.968,1168,1.968,1169,1.968,1170,3.981,1171,1.968,1172,1.968,1173,3.17,1174,1.968,1175,1.696,1176,1.968,1177,1.968,1178,1.968,1179,1.968,1180,1.696,1181,3.17,1182,1.968,1183,1.968,1184,1.968,1185,1.968,1186,1.968,1187,1.968,1188,1.968,1189,1.968,1190,1.968,1191,1.968,1192,1.968,1193,1.968,1194,1.968,1195,1.968,1196,1.968,1197,1.968,1198,1.968,1199,1.968,1200,1.968,1201,1.968,1202,1.968,1203,1.968,1204,1.968,1205,1.968,1206,1.968,1207,1.968,1208,1.968,1209,1.968,1210,3.17,1211,3.17,1212,3.17,1213,3.17,1214,3.17,1215,3.17,1216,3.17,1217,1.968,1218,4.316,1219,4.612,1220,1.518,1221,1.696,1222,1.916,1223,1.696,1224,1.968,1225,3.17,1226,2.445,1227,1.518,1228,1.696,1229,2.445,1230,1.968,1231,1.696,1232,3.981,1233,3.521,1234,1.968,1235,1.968,1236,1.968,1237,4.85,1238,4.85,1239,3.432,1240,3.748,1241,3.212,1242,3.17,1243,3.17,1244,1.968,1245,1.696,1246,2.801,1247,2.733,1248,1.696,1249,1.696,1250,1.384,1251,1.968,1252,1.968,1253,1.968,1254,1.968,1255,1.968,1256,1.968,1257,1.696,1258,1.968,1259,1.968,1260,1.968,1261,1.968,1262,1.968,1263,1.968,1264,2.733,1265,5.006,1266,1.384,1267,1.696,1268,1.696,1269,3.17,1270,1.968,1271,1.696,1272,1.696,1273,3.17,1274,1.696,1275,1.189,1276,3.17,1277,1.384,1278,1.696,1279,1.696,1280,2.252,1281,1.968,1282,2.733,1283,1.968,1284,1.968,1285,1.968,1286,1.968,1287,1.968,1288,1.384,1289,1.968,1290,3.17,1291,2.585,1292,1.968,1293,1.278,1294,2.059,1295,1.968,1296,1.696,1297,1.384]],["title/injectables/CustomerService.html",[888,1.777,1298,1.053]],["body/injectables/CustomerService.html",[3,0.18,4,0.116,9,0.116,25,0.135,26,0.321,27,1.574,30,0.54,31,2.013,36,0.653,40,0.334,47,0.712,48,0.018,49,0.542,50,0.27,51,0.712,52,0.424,54,3.892,60,1.461,78,0.779,79,0.682,85,1.066,88,0.09,90,2.768,96,1.577,106,1.018,107,0.926,109,0.386,110,0.324,117,1.025,120,0.135,121,0.851,122,1.284,128,1.121,209,0.881,245,0.866,259,0.008,260,0.012,261,0.008,281,1.004,288,2.762,296,0.747,297,1.928,358,2.114,370,2.999,378,1.344,379,1.121,381,1.213,425,2.114,453,1.867,454,2.043,455,2.138,459,2.762,460,2.291,463,2.176,472,3.184,552,1.809,713,1.715,756,1.715,888,2.466,892,1.844,895,2.466,896,3.013,903,2.606,905,2.937,926,4.005,1010,4.156,1298,1.461,1299,1.715,1300,3.285,1301,4.156,1302,4.557,1303,3.836,1304,5.193,1305,5.193,1306,5.193,1307,6.344,1308,5.193,1309,4.005,1310,1.809,1311,3.329,1312,3.81,1313,3.138,1314,3.138,1315,5.193,1316,3.81,1317,5.193,1318,3.81,1319,5.193,1320,3.81,1321,5.193,1322,3.81,1323,3.81,1324,3.372,1325,5.193,1326,3.81,1327,3.138,1328,3.81,1329,3.013,1330,4.12,1331,5.193,1332,5.193,1333,5.193,1334,3.81,1335,3.653,1336,2.939,1337,3.81,1338,2.939,1339,2.762,1340,1.809,1341,2.939,1342,2.474,1343,3.372,1344,5.193,1345,3.81,1346,2.939,1347,3.81,1348,3.285,1349,2.026,1350,3.285]],["title/components/ExpansionPannelComponent.html",[0,0.053,211,0.547]],["body/components/ExpansionPannelComponent.html",[0,0.091,1,0.616,2,0.797,3,0.135,4,0.135,5,0.792,6,0.792,7,0.792,8,0.792,9,0.135,14,1.076,16,0.792,17,1.418,18,1.272,19,1.13,20,0.521,21,1.026,23,1.026,25,0.157,29,0.683,30,0.598,36,0.705,40,0.263,47,0.462,48,0.018,49,0.505,50,0.157,51,0.462,52,0.275,78,0.462,79,0.583,82,0.884,88,0.096,100,0.616,109,0.25,110,0.378,114,0.649,117,1.196,120,0.157,121,0.552,122,1.497,129,1.643,148,1.795,158,1.692,176,1.798,177,1.354,179,2.11,180,2.363,182,0.719,183,1.026,184,1.203,185,0.792,186,1.203,187,0.792,188,0.792,189,1.331,190,0.649,191,0.636,192,0.616,193,0.792,194,0.649,195,0.462,196,0.649,197,1.031,198,0.792,199,0.649,200,0.792,201,0.649,202,0.792,203,0.649,204,0.792,205,0.792,206,0.649,207,0.552,208,0.616,209,0.491,210,0.792,211,0.985,212,1.331,213,0.792,214,0.616,215,0.719,216,1.026,217,0.649,218,0.616,219,0.719,220,1.026,221,0.683,222,0.755,223,0.616,224,0.583,225,0.792,226,0.616,227,0.649,228,0.719,229,1.137,230,0.649,231,0.792,232,0.649,233,0.792,234,0.616,235,1.026,236,0.649,237,0.616,238,0.649,239,0.792,240,0.616,241,0.755,242,0.792,243,0.649,244,0.792,245,0.674,246,0.649,247,0.719,248,0.649,249,0.719,250,0.649,251,0.792,252,0.649,253,0.719,254,0.616,255,0.491,256,0.405,257,0.792,258,0.792,259,0.01,260,0.013,261,0.01,275,2.886,283,2.46,284,3.059,518,2.126,567,3.2,615,3.253,645,4.401,706,3.059,794,4.919,795,4.919,977,2.363,978,2.886,1222,2.685,1231,3.83,1248,3.83,1296,3.83,1351,3.83,1352,5.498,1353,6.377,1354,6.377,1355,5.751,1356,5.202,1357,3.427,1358,4.443,1359,4.443,1360,5.751,1361,3.83,1362,3.427,1363,5.751,1364,4.443,1365,4.443,1366,4.443,1367,5.751,1368,4.443]],["title/components/HomePageComponent.html",[0,0.053,214,0.519]],["body/components/HomePageComponent.html",[0,0.083,1,0.516,2,0.708,3,0.113,4,0.113,5,0.664,6,0.664,7,0.664,8,0.664,9,0.113,14,0.956,15,1.144,16,0.664,17,1.403,18,1.259,19,1.065,20,0.436,21,0.911,23,0.911,25,0.132,28,1.747,29,0.572,30,0.531,33,1.232,36,0.694,39,2.829,40,0.287,47,0.387,48,0.018,49,0.462,50,0.132,51,0.387,52,0.23,64,1.375,69,1.504,78,0.607,79,0.864,82,0.809,84,1.722,85,1.29,86,1.645,87,1.803,88,0.097,89,1.889,100,0.516,109,0.354,110,0.317,111,0.958,114,0.544,116,1.767,117,1.001,119,2.928,120,0.132,121,0.725,128,1.095,130,1.047,133,1.313,134,3.242,141,2.416,148,2.026,152,2.426,155,1.979,156,1.313,158,1.717,162,1.514,165,2.628,166,2.829,167,1.514,168,2.426,170,2.553,171,2.628,176,1.617,177,0.876,182,0.602,183,0.911,184,1.12,185,0.664,186,1.12,187,0.664,188,0.664,189,1.284,190,0.544,191,0.565,192,0.516,193,0.664,194,0.544,195,0.684,196,0.544,197,0.602,198,0.664,199,0.544,200,0.664,201,0.544,202,0.664,203,0.544,204,0.664,205,0.664,206,0.544,207,0.462,208,0.516,209,0.411,210,0.664,211,0.544,212,0.664,213,0.664,214,0.871,215,1.164,216,0.911,217,0.544,218,0.516,219,0.602,220,0.911,221,0.572,222,0.632,223,0.516,224,0.864,225,0.664,226,0.516,227,0.544,228,0.602,229,1.041,230,0.544,231,0.664,232,0.544,233,0.664,234,0.516,235,0.911,236,0.544,237,0.516,238,0.544,239,0.664,240,0.516,241,0.632,242,0.664,243,0.544,244,0.664,245,0.798,246,0.544,247,0.602,248,0.544,249,0.602,250,0.746,251,1.12,252,0.544,253,0.602,254,0.516,255,0.411,256,0.532,257,0.664,258,0.664,259,0.013,260,0.011,261,0.008,273,1.981,275,2.564,381,1.198,389,2.637,470,2.08,518,2.157,519,2.186,522,1.592,523,2.791,645,4.21,710,3.594,723,1.514,762,4.632,819,2.416,857,2.89,977,1.979,978,3.152,981,1.675,984,3.341,987,1.592,988,1.767,989,2.89,1073,3.874,1077,3.941,1152,4.419,1222,3.526,1246,2.617,1275,4.11,1280,2.89,1291,4.275,1293,2.416,1294,2.416,1357,2.87,1369,5.078,1370,2.87,1371,5.031,1372,4.405,1373,6.281,1374,4.845,1375,3.72,1376,3.72,1377,3.208,1378,3.72,1379,3.208,1380,3.208,1381,3.72,1382,4.405,1383,4.405,1384,2.87,1385,3.208,1386,3.208,1387,3.208,1388,3.208,1389,3.208,1390,3.208,1391,3.208,1392,3.208,1393,3.208,1394,3.72,1395,3.208,1396,2.617,1397,3.941,1398,3.72,1399,4.405,1400,5.416,1401,4.405,1402,4.405,1403,4.405,1404,3.72,1405,3.72,1406,3.72]],["title/classes/Ingredient.html",[20,0.439,88,0.053]],["body/classes/Ingredient.html",[3,0.171,4,0.171,9,0.171,20,0.91,25,0.199,26,0.412,40,0.335,48,0.018,49,0.6,50,0.259,52,0.348,60,1.581,88,0.08,120,0.199,143,5.334,259,0.012,260,0.015,261,0.012,281,1.288,296,1.304,301,3.365,302,5.466,303,2.885,465,4.32,892,2.041,1044,2.53,1407,4.844,1408,7.087,1409,5.619,1410,5.619,1411,5.619,1412,5.619]],["title/injectables/IngredientService.html",[38,2.43,1298,1.053]],["body/injectables/IngredientService.html",[3,0.145,4,0.145,9,0.145,20,0.931,25,0.168,26,0.372,27,1.496,29,1.121,30,0.625,31,2.825,36,0.526,38,3.901,40,0.338,47,0.742,48,0.018,49,0.564,50,0.258,51,0.742,52,0.428,53,1.547,78,0.742,79,0.625,82,0.833,88,0.068,106,0.933,107,0.848,109,0.39,110,0.405,112,3.089,120,0.168,121,0.859,122,1.603,259,0.011,260,0.013,261,0.011,281,1.119,296,0.933,297,1.947,379,1.4,416,4.101,425,2.445,463,2.126,620,2.853,713,2.142,756,2.142,892,1.617,927,3.875,1004,3.656,1298,1.691,1299,2.142,1303,4.276,1310,2.259,1311,3.459,1340,2.259,1342,3.089,1343,3.089,1346,3.669,1413,4.101,1414,4.227,1415,6.008,1416,6.008,1417,6.008,1418,5.964,1419,6.008,1420,4.757,1421,6.008,1422,4.757,1423,6.008,1424,4.757,1425,6.008,1426,4.757,1427,6.008,1428,4.757,1429,6.008,1430,4.757,1431,6.008,1432,4.757,1433,4.757,1434,4.101,1435,4.757,1436,4.757]],["title/components/IngredientsDialogComponent.html",[0,0.053,217,0.547]],["body/components/IngredientsDialogComponent.html",[0,0.091,1,0.623,2,0.803,3,0.137,4,0.137,5,0.801,6,0.801,7,0.801,8,0.801,9,0.137,14,1.084,15,1.257,16,0.801,17,1.419,18,1.277,19,1.134,20,0.752,21,1.033,23,1.033,25,0.159,26,0.358,27,1.44,28,1.426,29,1.138,30,0.602,33,1.328,36,0.497,40,0.309,47,0.467,48,0.018,49,0.507,50,0.227,51,0.467,78,0.467,79,0.761,82,1.025,88,0.064,100,0.623,109,0.361,110,0.382,111,1.156,114,0.656,120,0.159,130,1.906,132,2.257,161,2.246,182,0.727,183,1.033,184,1.033,185,0.801,186,1.208,187,0.801,188,0.801,189,1.333,190,0.656,191,0.64,192,0.623,193,0.801,194,0.656,195,0.467,196,0.656,197,0.727,198,0.801,199,0.656,200,0.801,201,0.656,202,0.801,203,0.656,204,0.801,205,0.801,206,0.656,207,0.558,208,0.623,209,0.497,210,0.801,211,0.656,212,0.801,213,0.801,214,0.623,215,0.727,216,1.033,217,0.989,218,0.623,219,0.727,220,1.033,221,0.691,222,0.763,223,0.623,224,0.59,225,0.801,226,0.623,227,0.656,228,0.727,229,1.143,230,0.656,231,0.801,232,0.656,233,0.801,234,0.623,235,1.033,236,0.656,237,0.623,238,0.656,239,0.801,240,0.623,241,0.763,242,0.801,243,0.656,244,0.801,245,0.679,246,0.656,247,0.727,248,0.656,249,0.727,250,0.656,251,0.801,252,0.656,253,0.727,254,0.623,255,0.497,256,0.655,257,0.801,258,0.801,259,0.01,260,0.013,261,0.01,262,2.133,263,3.217,264,2.907,268,2.254,269,3.329,289,2.389,290,2.907,293,2.023,294,2.254,295,2.541,373,1.922,852,5.407,853,4.931,1038,3.873,1437,5.407,1438,4.492,1439,3.465,1440,4.492,1441,5.792]],["title/injectables/InputService.html",[1298,1.053,1442,2.633]],["body/injectables/InputService.html",[3,0.148,4,0.148,9,0.148,25,0.172,26,0.377,27,1.367,30,0.634,36,0.539,40,0.319,47,0.634,48,0.018,49,0.483,50,0.247,51,0.634,52,0.302,56,4.291,58,3.06,60,1.964,69,1.795,78,0.634,88,0.087,90,2.349,96,1.372,106,1.196,107,1.088,109,0.405,110,0.415,117,1.311,120,0.172,121,0.757,122,1.642,128,1.434,195,0.725,224,1.018,259,0.011,260,0.014,261,0.011,296,1.487,297,1.371,377,2.313,378,1.719,379,1.434,381,1.367,425,2.482,454,1.964,455,1.569,463,1.964,565,4.429,681,3.711,713,2.194,756,2.194,760,4.665,1298,1.716,1299,2.194,1310,2.313,1311,3.48,1340,2.313,1349,2.591,1442,4.291,1443,5.542,1444,4.2,1445,6.658,1446,6.099,1447,6.099,1448,6.099,1449,4.872,1450,5.258,1451,6.099,1452,4.291,1453,4.531,1454,6.016,1455,6.099,1456,4.704,1457,6.099,1458,5.258,1459,4.872,1460,6.099,1461,5.258,1462,4.872,1463,4.872,1464,4.872,1465,4.872,1466,3.758,1467,3.758]],["title/components/KitchenMenuComponent.html",[0,0.053,218,0.519]],["body/components/KitchenMenuComponent.html",[0,0.081,1,0.493,2,0.686,3,0.108,4,0.108,5,0.883,6,0.634,7,0.634,8,0.634,9,0.108,11,1.52,14,0.926,15,1.117,16,0.634,17,1.399,18,1.254,19,1.135,20,0.417,21,0.883,23,0.883,25,0.175,26,0.306,27,1.17,28,1.796,29,0.547,30,0.515,33,1.208,36,0.681,39,2.916,40,0.306,47,0.369,48,0.018,49,0.512,50,0.229,51,0.369,52,0.352,53,1.274,64,1.332,69,1.457,75,2.308,78,0.515,79,0.748,82,0.954,88,0.088,93,3.818,94,1.747,96,1.386,100,0.493,106,0.697,107,0.634,109,0.378,110,0.302,111,0.915,114,0.519,115,1.6,116,1.688,117,0.957,120,0.126,121,0.615,128,1.457,129,1.83,130,1,132,1.144,133,2.574,134,1.6,135,2.308,136,1.094,148,1.975,152,2.35,153,2.148,154,2.308,155,2.633,156,2.428,157,2.01,158,1.046,159,1.89,160,2.308,161,2.208,162,1.447,166,2.565,167,2.015,170,2.721,173,2.148,174,3.365,176,1.274,177,0.837,182,0.575,183,0.883,184,0.883,185,0.634,186,1.099,187,0.634,188,0.634,189,1.271,190,0.723,191,0.761,192,0.493,193,0.634,194,0.519,195,0.369,196,0.519,197,0.575,198,0.634,199,0.519,200,0.634,201,0.519,202,0.634,203,0.519,204,0.634,205,0.634,206,0.519,207,0.441,208,0.493,209,0.393,210,0.634,211,0.519,212,0.634,213,0.634,214,0.493,215,0.575,216,0.883,217,0.519,218,0.854,219,1.199,220,0.883,221,0.547,222,0.604,223,0.493,224,0.467,225,0.634,226,0.493,227,0.519,228,0.575,229,1.016,230,0.519,231,0.634,232,0.519,233,0.883,234,0.493,235,0.883,236,0.519,237,0.929,238,0.519,239,0.634,240,0.493,241,0.604,242,0.634,243,0.519,244,0.634,245,0.581,246,0.519,247,0.575,248,0.519,249,0.575,250,0.519,251,0.634,252,0.519,253,0.575,254,0.493,255,0.547,256,0.694,257,0.634,258,0.634,259,0.008,260,0.011,261,0.008,273,2.208,296,0.97,301,2.35,303,2.318,373,1.52,381,0.73,389,1.919,453,1.457,454,1.594,455,1.594,465,3.214,517,2.5,518,1.314,519,1.52,520,1.688,521,1.688,522,2.118,523,2.208,527,2.5,551,2.991,705,2.484,828,4.84,895,2.35,896,2.35,976,2.01,983,3.214,1068,2.741,1069,3.453,1137,3.482,1143,2.148,1226,2.741,1240,2.148,1266,2.5,1280,2.01,1288,2.5,1293,2.308,1468,5.932,1469,2.5,1470,4.393,1471,3.818,1472,5.696,1473,4.751,1474,4.95,1475,3.064,1476,3.554,1477,3.818,1478,4.007,1479,3.554,1480,4.268,1481,4.007,1482,3.554,1483,1.89,1484,2.5,1485,2.741,1486,3.064,1487,2.741,1488,4.751,1489,2.308,1490,4.751,1491,2.308,1492,3.064,1493,5.626,1494,2.5,1495,4.268,1496,3.064,1497,4.268,1498,3.064,1499,3.064,1500,3.064,1501,3.064,1502,3.064,1503,3.554,1504,3.064,1505,4.007,1506,2.5,1507,2.741,1508,3.064,1509,3.064,1510,3.064,1511,3.064,1512,3.482,1513,2.5,1514,3.064]],["title/components/LandingPageComponent.html",[0,0.053,221,0.576]],["body/components/LandingPageComponent.html",[0,0.098,1,0.483,2,0.676,3,0.106,4,0.106,5,0.621,6,0.621,7,0.621,8,0.621,9,0.106,14,0.913,15,1.105,16,0.621,17,1.397,18,1.251,19,1.148,20,0.409,21,0.871,23,0.871,25,0.123,28,1.503,29,0.536,30,0.507,33,1.197,36,0.623,39,2.895,40,0.279,43,4.208,47,0.362,48,0.018,49,0.446,50,0.123,51,0.362,52,0.302,58,2.785,60,1.586,63,3.765,64,1.314,69,1.797,70,3.434,78,0.586,79,0.844,82,0.781,84,1.645,88,0.05,94,1.988,100,0.483,109,0.376,110,0.296,111,0.897,114,0.509,116,1.654,119,3.504,120,0.123,121,0.7,122,1.174,128,1.025,129,2.258,130,0.98,133,2.268,134,1.568,136,1.072,148,1.875,156,2.155,157,1.97,158,2.055,168,1.654,169,1.97,170,1.892,171,1.568,174,3.064,176,1.45,177,1.326,182,0.563,183,0.871,184,0.871,185,0.621,186,1.089,187,0.621,188,0.621,189,1.265,190,0.509,191,0.539,192,0.483,193,0.621,194,0.509,195,0.668,196,0.509,197,0.563,198,0.621,199,0.509,200,0.621,201,0.509,202,0.621,203,0.509,204,0.621,205,0.621,206,0.509,207,0.433,208,0.483,209,0.623,210,0.621,211,0.509,212,0.621,213,0.621,214,0.483,215,0.789,216,0.871,217,0.509,218,0.483,219,0.563,220,0.871,221,0.939,222,1.246,223,0.483,224,0.74,225,0.621,226,0.483,227,0.509,228,0.563,229,1.005,230,0.509,231,0.621,232,0.509,233,0.621,234,0.483,235,0.871,236,0.509,237,0.483,238,0.509,239,0.621,240,0.483,241,0.592,242,0.621,243,0.509,244,0.621,245,0.781,246,0.509,247,0.563,248,0.509,249,0.563,250,0.713,251,1.188,252,0.509,253,0.563,254,0.483,255,0.385,256,0.514,257,0.621,258,0.621,259,0.008,260,0.011,261,0.008,378,1.229,381,0.715,466,2.596,518,1.288,523,1.351,599,3.765,645,4.219,705,2.449,723,1.418,726,3.765,729,2.687,731,2.687,818,2.45,819,2.262,859,4.959,977,2.596,978,3.064,981,2.749,982,4.208,983,4.174,987,2.088,988,2.899,1028,3.248,1030,3.69,1031,2.105,1052,4.208,1053,4.208,1071,1.853,1073,2.997,1091,2.596,1132,3.003,1134,3.003,1141,3.003,1148,2.687,1151,2.687,1153,3.003,1218,3.003,1219,4.858,1220,2.687,1221,4.208,1223,3.003,1227,2.687,1228,3.003,1239,3.003,1240,3.405,1241,3.434,1246,2.45,1247,3.003,1257,4.208,1266,2.45,1267,3.003,1278,3.003,1279,3.003,1280,1.97,1282,3.003,1294,2.262,1324,3.169,1339,1.853,1352,4.858,1356,4.71,1357,2.687,1362,2.687,1370,2.687,1371,4.858,1372,4.208,1377,3.003,1379,3.003,1382,4.208,1383,4.208,1477,3.765,1505,2.45,1512,2.45,1513,2.45,1515,5.542,1516,4.881,1517,4.881,1518,4.881,1519,6.106,1520,3.483,1521,4.881,1522,5.264,1523,4.881,1524,4.881,1525,4.881,1526,4.208,1527,4.881,1528,4.881,1529,4.881,1530,3.483,1531,4.881,1532,4.881,1533,3.483,1534,4.881,1535,3.483,1536,2.687,1537,2.687,1538,3.003,1539,3.483,1540,3.483,1541,3.483,1542,3.483,1543,3.483,1544,6.106,1545,3.483,1546,5.634,1547,4.881,1548,3.483,1549,4.881,1550,3.483,1551,3.483,1552,5.634,1553,3.483,1554,3.483,1555,3.483,1556,3.483,1557,3.483,1558,3.765,1559,3.483,1560,3.483,1561,3.483,1562,3.483,1563,3.765,1564,4.881,1565,3.483,1566,3.483,1567,3.483,1568,4.881,1569,3.483,1570,3.483,1571,3.483,1572,5.634,1573,3.483,1574,3.003,1575,4.881,1576,4.881,1577,3.483,1578,3.483,1579,3.483,1580,3.483,1581,3.483,1582,3.483,1583,3.483,1584,3.483,1585,3.483,1586,3.483,1587,4.881,1588,3.483]],["title/classes/Login.html",[88,0.053,224,0.491]],["body/classes/Login.html",[3,0.162,4,0.162,9,0.162,25,0.189,26,0.399,40,0.346,48,0.018,50,0.268,52,0.33,60,1.501,88,0.076,100,1.022,120,0.189,195,0.805,224,0.995,255,0.828,259,0.012,260,0.014,261,0.012,281,1.224,296,1.469,412,1.898,514,5.271,546,4.351,565,4.527,806,5.687,892,2.017,1044,2.401,1453,4.865,1461,5.559,1589,4.598,1590,5.333,1591,5.333,1592,5.333,1593,5.333,1594,5.333,1595,5.333,1596,5.333]],["title/components/LoginInputComponent.html",[0,0.053,223,0.519]],["body/components/LoginInputComponent.html",[0,0.072,1,0.396,2,0.586,3,0.087,4,0.087,5,0.509,6,0.509,7,0.509,8,0.509,9,0.087,14,0.791,15,0.988,16,0.509,17,1.377,18,1.227,19,0.962,20,0.335,21,0.754,23,0.754,25,0.101,26,0.262,29,0.439,30,0.44,33,1.092,36,0.467,40,0.319,47,0.44,48,0.018,49,0.441,50,0.228,51,0.44,52,0.262,58,1.721,69,1.832,70,4.381,78,0.618,79,0.869,82,0.698,85,0.869,88,0.079,100,0.396,106,0.988,107,0.898,109,0.335,110,0.243,114,0.417,117,0.769,120,0.101,121,0.773,133,1.777,134,3.267,136,0.879,148,1.935,152,2.392,155,1.519,156,1.007,158,1.639,165,3.096,166,2.804,167,1.162,168,1.356,170,2.738,171,2.508,176,1.836,177,1.186,179,2.008,182,0.462,183,1.149,184,0.754,185,0.509,186,0.993,187,0.509,188,0.509,189,1.205,190,0.417,191,0.467,192,0.396,193,0.509,194,0.417,195,0.764,196,0.417,197,0.462,198,0.509,199,0.417,200,0.509,201,0.417,202,0.509,203,0.417,204,0.509,205,0.509,206,0.417,207,0.355,208,0.396,209,0.316,210,0.509,211,0.417,212,0.509,213,0.509,214,0.396,215,1.007,216,0.754,217,0.417,218,0.396,219,0.462,220,0.754,221,0.439,222,0.485,223,0.772,224,0.945,225,0.509,226,0.396,227,0.417,228,0.462,229,0.898,230,0.417,231,0.509,232,0.417,233,0.509,234,0.396,235,0.754,236,0.417,237,0.396,238,0.417,239,0.509,240,0.396,241,0.485,242,0.509,243,0.417,244,0.509,245,0.496,246,0.417,247,0.462,248,0.417,249,0.462,250,0.417,251,0.509,252,0.417,253,0.462,254,0.396,255,0.316,256,0.568,257,0.509,258,0.509,259,0.006,260,0.009,261,0.006,275,2.122,296,1.411,334,2.975,342,1.564,381,1.323,389,2.738,412,1.089,425,1.721,453,1.245,486,1.433,518,2.447,519,2.664,520,1.356,521,1.356,522,2.155,523,2.566,546,2.556,565,3.593,617,3.262,645,3.999,681,3.427,706,2.962,710,2.009,723,1.162,760,4.585,836,1.615,837,2.849,882,2.556,885,3.365,893,3.365,894,2.746,912,2.556,913,3.645,916,3.763,976,1.615,977,1.519,978,3.321,981,2.677,983,3.616,984,2.962,987,2.544,988,2.644,989,1.615,1016,3.262,1029,1.854,1030,1.725,1031,1.725,1032,2.009,1033,2.009,1035,2.975,1063,4.801,1073,3.657,1076,2.392,1115,3.646,1152,4.381,1180,2.462,1222,2.556,1227,2.202,1246,2.009,1275,3.593,1280,3.363,1291,3.616,1293,3.861,1294,3.616,1297,2.009,1356,4.296,1361,2.462,1362,2.202,1384,2.202,1385,2.462,1386,2.462,1387,2.462,1388,2.462,1389,2.462,1390,2.462,1391,4.801,1392,2.462,1393,2.462,1395,2.462,1396,2.009,1397,3.885,1399,4.343,1400,5.368,1401,2.462,1402,2.462,1403,2.462,1442,3.918,1443,5.446,1453,3.861,1454,3.646,1456,3.262,1522,3.646,1537,3.262,1597,2.462,1598,5.037,1599,4.229,1600,5.126,1601,5.569,1602,2.855,1603,4.229,1604,4.229,1605,4.229,1606,4.229,1607,4.229,1608,2.855,1609,4.229,1610,3.262,1611,2.855,1612,2.855,1613,2.855,1614,4.229,1615,4.229,1616,4.229,1617,2.855,1618,5.569,1619,4.801,1620,5.946,1621,4.229,1622,4.229,1623,4.229,1624,2.975,1625,4.229,1626,2.855,1627,2.855,1628,2.855,1629,2.855,1630,2.855,1631,2.855,1632,2.855,1633,2.855,1634,2.855,1635,2.855,1636,3.646,1637,2.855,1638,5.037,1639,2.855,1640,2.975,1641,3.262,1642,4.229,1643,4.229,1644,2.855,1645,2.855,1646,2.855,1647,2.855,1648,2.855,1649,2.855,1650,2.855,1651,2.855,1652,4.229,1653,2.855,1654,2.855,1655,3.646,1656,4.229,1657,4.229,1658,4.229,1659,4.229,1660,4.229,1661,4.229,1662,4.229,1663,5.569,1664,4.229,1665,4.229,1666,4.229,1667,5.037,1668,4.229,1669,4.229,1670,4.229,1671,2.855,1672,2.855,1673,2.855,1674,2.855,1675,2.855,1676,2.855,1677,2.855,1678,2.855,1679,2.855,1680,2.855,1681,2.855,1682,2.202,1683,2.855,1684,2.009]],["title/components/ManagerMenuComponent.html",[0,0.053,226,0.519]],["body/components/ManagerMenuComponent.html",[0,0.078,1,0.459,2,0.653,3,0.101,4,0.101,5,0.591,6,0.591,7,0.591,8,0.591,9,0.101,10,3.899,11,1.417,14,0.881,15,1.075,16,0.591,17,1.392,18,1.246,19,1.15,20,0.388,21,0.84,23,0.84,25,0.167,26,0.291,27,1.126,28,1.863,29,0.509,30,0.49,33,1.171,36,0.66,39,2.84,40,0.308,47,0.344,48,0.018,49,0.434,50,0.167,51,0.344,52,0.205,53,1.774,54,2.505,64,1.268,69,1.386,78,0.681,79,0.885,82,0.76,84,1.587,85,1.226,86,1.517,87,1.662,88,0.093,89,1.741,90,1.662,96,1.6,100,0.997,109,0.41,110,0.282,111,0.852,114,0.484,115,1.491,116,2.236,117,0.891,118,4.061,120,0.117,121,0.783,128,1.613,129,1.741,130,1.325,132,1.066,133,1.934,134,1.491,135,2.15,136,1.019,148,1.543,149,2.554,150,2.855,151,2.855,152,2.236,153,2.846,154,2.15,155,2.505,156,1.934,157,1.873,158,0.975,159,1.761,160,2.15,161,2.125,162,1.348,167,1.348,173,2.001,174,1.662,176,1.212,177,0.779,182,0.536,183,0.84,184,0.84,185,0.591,186,1.065,187,0.591,188,0.591,189,1.251,190,0.688,191,0.786,192,0.459,193,0.591,194,0.484,195,0.57,196,0.484,197,0.536,198,0.591,199,0.484,200,0.591,201,0.484,202,0.591,203,0.484,204,0.591,205,0.591,206,0.484,207,0.411,208,0.459,209,0.697,210,0.591,211,0.484,212,0.591,213,0.591,214,0.459,215,0.536,216,0.84,217,0.484,218,0.459,219,0.536,220,0.84,221,0.509,222,0.563,223,0.459,224,0.435,225,0.591,226,0.827,227,0.484,228,0.536,229,0.978,230,0.484,231,0.591,232,0.484,233,0.591,234,0.459,235,0.84,236,0.484,237,0.459,238,0.484,239,0.591,240,0.459,241,0.563,242,0.591,243,0.688,244,0.591,245,0.894,246,0.484,247,0.536,248,0.484,249,0.536,250,0.484,251,1.125,252,0.484,253,0.536,254,0.459,255,0.606,256,0.698,257,0.591,258,0.591,259,0.007,260,0.01,261,0.007,273,2.125,275,2.364,297,0.932,303,1.917,309,4.061,338,2.505,373,1.417,378,1.169,379,0.975,381,1.226,453,2.028,454,2.219,455,2.219,460,1.45,463,1.543,470,2.668,471,4.061,472,3.459,475,3.633,517,2.33,518,1.224,519,1.417,520,1.572,521,1.572,522,1.417,523,1.284,528,2.673,552,1.572,553,1.491,820,2.33,821,2.15,834,4.849,887,3.202,888,3.273,896,2.236,927,2.505,943,1.873,945,1.873,984,1.761,1069,3.459,1143,2.001,1297,3.856,1349,1.761,1374,4.605,1469,2.33,1470,4.228,1471,3.633,1473,4.605,1478,2.33,1484,2.33,1485,2.554,1487,2.554,1685,4.605,1686,5.147,1687,2.855,1688,3.312,1689,3.312,1690,3.312,1691,3.312,1692,3.312,1693,3.312,1694,3.312,1695,2.855,1696,2.855,1697,2.855,1698,2.855,1699,2.855,1700,2.855,1701,2.855,1702,2.855,1703,2.855,1704,4.71,1705,5.97,1706,3.312]],["title/classes/Meal.html",[88,0.053,891,1.777]],["body/classes/Meal.html",[3,0.166,4,0.166,9,0.166,25,0.193,26,0.404,40,0.331,48,0.018,50,0.257,52,0.337,60,1.838,88,0.078,109,0.368,120,0.193,191,0.862,256,0.712,259,0.012,260,0.015,261,0.012,281,1.304,302,5.038,303,2.952,891,3.738,892,2.049,936,5.102,1044,2.454,1049,5.102,1707,4.698,1708,6.031,1709,5.449,1710,5.449,1711,5.449,1712,5.449]],["title/injectables/MealService.html",[886,2.43,1298,1.053]],["body/injectables/MealService.html",[3,0.146,4,0.146,9,0.146,25,0.17,26,0.373,30,0.627,31,2.688,36,0.529,40,0.333,47,0.743,48,0.018,49,0.565,50,0.258,51,0.743,52,0.442,53,1.553,78,0.721,79,0.91,88,0.068,96,1.357,106,0.939,107,0.854,109,0.391,110,0.407,120,0.17,121,0.861,122,1.613,259,0.011,260,0.013,261,0.011,281,1.178,296,0.939,297,1.698,379,1.409,425,2.455,463,2.011,620,3.292,713,2.156,756,2.156,886,3.917,891,3.782,904,4.502,905,3.412,927,3.688,936,4.878,944,3.109,1004,3.761,1298,1.698,1299,2.156,1310,2.273,1311,3.465,1327,3.645,1340,2.273,1414,4.244,1434,5.201,1708,4.127,1713,4.127,1714,4.244,1715,6.605,1716,6.032,1717,6.032,1718,6.032,1719,6.032,1720,6.032,1721,6.032,1722,4.787,1723,6.032,1724,4.787,1725,6.032,1726,4.787,1727,6.032,1728,4.787,1729,6.032,1730,4.787,1731,4.787,1732,4.787,1733,4.787,1734,4.787,1735,4.787]],["title/classes/Menu.html",[88,0.053,256,0.342]],["body/classes/Menu.html",[3,0.115,4,0.115,9,0.115,20,0.74,25,0.133,26,0.319,29,1.075,40,0.356,48,0.018,49,0.571,50,0.276,52,0.422,60,1.45,88,0.054,94,1.818,106,0.738,107,0.672,109,0.29,120,0.133,197,0.833,207,0.868,256,0.728,259,0.008,260,0.011,261,0.008,281,1.241,284,3.517,296,1.432,301,3.319,303,3.239,328,2.998,344,5.7,412,2.015,424,5.886,425,2.57,427,5.1,428,5.1,429,5.1,430,5.1,431,5.1,432,5.1,433,5.1,434,4.529,435,3.974,436,3.624,437,5.1,453,1.516,546,4.742,640,5.7,641,5.7,642,5.7,643,5.7,892,1.881,1044,1.696,1049,4.803,1736,3.247,1737,5.872,1738,5.872,1739,5.872,1740,5.872,1741,3.766,1742,3.766,1743,3.766,1744,3.766,1745,3.766,1746,3.766,1747,3.766,1748,3.766,1749,3.766,1750,3.766,1751,3.766,1752,5.152,1753,3.766,1754,3.766,1755,3.766,1756,3.766,1757,5.152,1758,3.766,1759,3.766,1760,3.766,1761,3.766,1762,3.766,1763,3.766,1764,3.766,1765,3.766,1766,3.766,1767,3.766,1768,3.345,1769,5.152]],["title/classes/MenuCategory.html",[88,0.053,328,1.777]],["body/classes/MenuCategory.html",[3,0.178,4,0.178,9,0.178,25,0.207,26,0.422,40,0.311,48,0.018,50,0.241,52,0.362,60,1.647,88,0.083,120,0.207,207,0.959,256,0.658,259,0.013,260,0.015,261,0.013,281,1.158,296,1.455,328,3.235,892,2.059,1044,2.635,1770,5.044,1771,5.851,1772,5.851,1773,6.812]],["title/injectables/MenuCategoryService.html",[319,2.262,1298,1.053]],["body/injectables/MenuCategoryService.html",[2,0.743,3,0.121,4,0.121,9,0.121,25,0.141,26,0.332,27,1.481,30,0.557,31,2.078,36,0.669,40,0.334,47,0.701,48,0.018,49,0.534,50,0.271,51,0.701,52,0.417,54,3.927,78,0.767,85,1.328,86,1.726,88,0.092,90,2.71,96,1.563,106,1.186,107,1.079,109,0.38,110,0.34,117,1.075,120,0.141,121,0.838,122,1.345,207,0.97,256,0.679,259,0.009,260,0.012,261,0.009,281,1.028,288,2.851,296,0.783,297,1.899,311,4.746,319,3.239,328,3.679,358,2.182,367,2.258,370,2.293,375,2.413,378,1.409,379,1.175,425,2.182,453,1.903,454,2.082,455,2.172,460,2.272,463,2.186,472,2.69,713,1.798,756,1.798,892,1.87,895,2.545,896,2.545,903,2.69,905,3.032,1027,2.545,1105,3.239,1109,5.576,1110,4.621,1298,1.508,1299,1.798,1310,1.896,1311,3.369,1313,3.239,1314,3.239,1327,3.239,1329,2.873,1335,3.771,1340,1.896,1774,5.695,1775,3.442,1776,5.217,1777,5.36,1778,5.36,1779,5.36,1780,5.36,1781,5.36,1782,5.36,1783,3.993,1784,5.36,1785,3.993,1786,3.993,1787,5.36,1788,3.993,1789,4.621,1790,5.36,1791,3.993,1792,3.48,1793,3.929,1794,5.36,1795,3.929,1796,3.993,1797,4.621,1798,3.993,1799,3.48,1800,3.771,1801,3.771,1802,3.993,1803,3.993,1804,3.993,1805,3.993,1806,3.993]],["title/injectables/MenuFilterService.html",[1070,2.633,1298,1.053]],["body/injectables/MenuFilterService.html",[3,0.138,4,0.138,9,0.138,25,0.161,26,0.361,27,1.324,30,0.607,36,0.713,40,0.329,47,0.607,48,0.018,49,0.462,50,0.255,51,0.607,52,0.361,53,1.17,54,3.105,78,0.607,85,1.199,86,1.88,88,0.097,90,2.617,96,1.531,106,1.264,107,1.15,109,0.406,110,0.387,117,1.224,120,0.161,121,0.725,122,1.532,197,0.944,207,0.725,256,0.677,259,0.01,260,0.013,261,0.01,284,3.105,296,1.412,297,1.643,328,2.159,370,3.132,373,1.945,375,2.747,377,2.159,378,1.604,379,1.338,381,1.445,425,2.769,453,2.119,454,2.318,455,2.358,463,1.98,598,4.107,615,4.142,713,2.047,756,2.047,890,5.033,1010,4.536,1027,2.772,1070,4.107,1095,5.033,1298,1.643,1299,2.047,1301,4.536,1309,4.503,1310,2.159,1311,3.477,1313,3.527,1314,3.527,1329,2.772,1330,3.791,1335,4.786,1336,3.507,1339,3.105,1340,2.159,1341,3.507,1349,2.418,1466,3.507,1467,3.507,1774,5.648,1776,5.559,1797,5.033,1800,4.107,1801,4.107,1807,3.92,1808,6.448,1809,5.837,1810,5.837,1811,4.547,1812,5.837,1813,5.837,1814,5.837,1815,6.448,1816,4.547,1817,4.547,1818,4.547,1819,6.448,1820,4.547,1821,3.92,1822,4.547,1823,3.92]],["title/injectables/MenuService.html",[1069,1.878,1298,1.053]],["body/injectables/MenuService.html",[2,0.676,3,0.106,4,0.106,9,0.106,20,0.716,25,0.123,26,0.302,27,1.434,29,1.091,30,0.507,31,1.892,36,0.385,40,0.345,47,0.738,48,0.018,49,0.561,50,0.26,51,0.738,52,0.423,53,1.256,78,0.747,79,0.954,82,0.676,85,1.002,88,0.05,91,3.169,96,1.617,106,1.306,107,1.245,109,0.394,110,0.296,112,2.262,120,0.123,121,0.85,122,1.174,128,1.025,191,0.385,228,1.195,256,0.725,259,0.008,260,0.011,261,0.008,281,1.206,283,2.088,293,1.568,296,0.683,297,1.718,303,2.985,312,1.97,358,1.987,367,1.97,370,2.612,373,1.49,377,1.654,378,1.229,379,1.025,381,1.434,425,1.987,460,2.212,463,2.045,615,1.97,620,3.164,713,1.568,756,1.568,892,1.91,895,2.899,896,2.899,903,2.449,927,2.596,1004,3.064,1069,2.449,1085,3.765,1098,5.264,1105,2.949,1229,2.687,1298,1.374,1299,1.568,1302,4.346,1303,3.659,1310,1.654,1311,3.164,1329,2.676,1340,1.654,1342,3.965,1343,2.262,1348,3.003,1418,4.208,1483,1.853,1714,4.296,1792,3.169,1793,3.659,1795,3.659,1799,3.169,1824,3.003,1825,4.881,1826,6.106,1827,5.634,1828,5.634,1829,5.634,1830,4.881,1831,4.881,1832,4.881,1833,6.106,1834,4.881,1835,4.881,1836,4.881,1837,3.483,1838,4.881,1839,3.483,1840,4.881,1841,3.483,1842,4.881,1843,3.483,1844,3.483,1845,4.881,1846,4.881,1847,3.483,1848,4.881,1849,3.483,1850,3.483,1851,4.208,1852,4.881,1853,3.483,1854,4.881,1855,3.483,1856,4.208,1857,4.881,1858,3.483,1859,3.483,1860,4.881,1861,3.483,1862,4.208,1863,3.483,1864,4.208,1865,4.881,1866,3.483,1867,4.881,1868,3.483,1869,3.483,1870,3.003,1871,3.003,1872,3.483,1873,5.634,1874,4.881,1875,3.003,1876,4.881,1877,3.483,1878,3.483,1879,4.881,1880,3.483,1881,3.483,1882,5.634,1883,3.483,1884,3.483,1885,3.483,1886,3.483,1887,3.483,1888,4.881,1889,4.881]],["title/components/MenusListDisplayComponent.html",[0,0.053,227,0.547]],["body/components/MenusListDisplayComponent.html",[0,0.081,1,0.358,2,0.544,3,0.079,4,0.079,5,0.461,6,0.461,7,0.461,8,0.461,9,0.079,11,1.105,14,0.734,15,0.93,16,0.461,17,1.365,18,1.214,19,1.064,20,0.303,21,0.7,23,0.7,25,0.091,26,0.243,27,0.974,28,1.476,29,1.011,30,0.408,31,2.49,33,1.038,35,3.025,36,0.524,39,2.7,40,0.328,42,4.566,45,3.381,47,0.623,48,0.018,49,0.531,50,0.245,51,0.623,52,0.407,53,1.363,58,2.318,59,4.089,60,1.851,61,4.089,62,4.089,63,5.393,64,1.882,65,4.089,66,3.658,69,2.079,70,3.726,71,3.381,78,0.667,79,0.895,82,1.079,88,0.037,93,5.172,94,2.405,96,1.281,100,0.657,102,3.955,104,3.381,106,0.93,107,0.846,109,0.39,110,0.22,111,0.665,114,0.377,115,1.163,116,2.252,120,0.091,121,0.817,122,0.87,128,1.676,129,0.955,130,1.335,132,2.067,133,1.673,134,1.163,136,0.795,141,1.677,148,1.335,156,1.384,158,1.154,159,2.086,162,1.051,164,1.373,165,1.766,166,1.163,167,1.596,168,1.226,169,2.219,170,1.521,171,1.163,172,1.677,176,1.01,177,0.608,178,1.677,179,1.226,180,1.373,182,0.418,183,0.7,184,0.7,185,0.461,186,0.945,187,0.461,188,0.461,189,1.173,190,0.573,191,0.434,192,0.358,193,0.461,194,0.377,195,0.684,196,0.377,197,0.418,198,0.461,199,0.377,200,0.461,201,0.377,202,0.461,203,0.377,204,0.461,205,0.461,206,0.573,207,0.926,208,0.358,209,0.285,210,0.461,211,0.377,212,0.461,213,0.461,214,0.358,215,0.418,216,0.7,217,0.573,218,0.358,219,0.418,220,0.7,221,0.397,222,0.439,223,0.358,224,0.339,225,0.461,226,0.358,227,0.774,228,1.085,229,0.846,230,0.377,231,0.461,232,0.377,233,0.461,234,0.358,235,0.7,236,0.377,237,0.358,238,0.377,239,0.461,240,0.358,241,0.439,242,0.461,243,0.377,244,0.461,245,0.621,246,0.377,247,0.418,248,0.377,249,0.418,250,0.377,251,0.461,252,0.377,253,0.418,254,0.358,255,0.434,256,0.714,257,0.461,258,0.461,259,0.009,260,0.009,261,0.006,297,0.727,301,1.862,303,2.441,311,4.517,319,3.2,325,1.992,328,3.281,342,1.753,370,2.266,373,1.105,375,1.56,376,1.992,377,1.226,378,0.911,379,0.76,381,0.805,385,1.992,412,1.221,426,3.025,444,3.08,446,3.112,466,2.086,481,2.547,482,2.759,489,3.766,490,1.677,522,1.678,591,2.996,615,2.996,620,2.515,625,2.817,674,3.381,723,1.051,841,5.58,851,1.817,853,1.817,905,2.219,925,3.381,929,3.025,1049,3.726,1068,1.992,1069,3.222,1071,2.086,1073,3.498,1082,2.226,1091,2.817,1143,1.56,1245,2.226,1294,1.677,1314,1.56,1339,1.373,1349,1.373,1384,3.025,1437,5.58,1477,3.025,1478,1.817,1484,1.817,1536,3.025,1537,3.025,1538,3.381,1558,3.025,1624,4.219,1684,1.817,1875,3.381,1890,1.817,1891,4.089,1892,3.658,1893,3.025,1894,4.742,1895,4.742,1896,4.089,1897,3.922,1898,3.381,1899,4.566,1900,5.296,1901,3.922,1902,3.922,1903,5.695,1904,2.582,1905,3.922,1906,3.922,1907,3.922,1908,2.226,1909,3.381,1910,2.582,1911,3.922,1912,2.582,1913,3.381,1914,1.992,1915,3.922,1916,3.922,1917,2.582,1918,3.922,1919,2.582,1920,3.922,1921,2.582,1922,2.582,1923,3.922,1924,2.582,1925,3.922,1926,2.226,1927,4.566,1928,2.582,1929,3.726,1930,2.226,1931,2.226,1932,2.582,1933,2.582,1934,2.582,1935,2.582,1936,2.582,1937,2.582,1938,2.582,1939,2.582,1940,2.226,1941,2.582,1942,2.582,1943,2.582,1944,2.582,1945,2.582,1946,2.582,1947,2.582,1948,2.226,1949,2.226,1950,2.582,1951,2.582,1952,2.582,1953,2.582,1954,2.582,1955,2.582,1956,2.582,1957,2.582,1958,2.582,1959,2.226,1960,3.922,1961,3.381,1962,2.582,1963,2.582,1964,2.582,1965,2.582,1966,3.922,1967,3.381,1968,3.922,1969,3.381,1970,3.381,1971,2.226,1972,1.992]],["title/components/NotificationsComponent.html",[0,0.053,230,0.547]],["body/components/NotificationsComponent.html",[0,0.101,1,0.553,2,0.742,3,0.121,4,0.121,5,0.711,6,0.711,7,0.711,8,0.711,9,0.121,14,1.002,15,1.185,16,0.711,17,1.409,18,1.261,19,1.091,20,0.468,21,0.955,23,0.955,25,0.141,26,0.331,27,1.242,28,1.746,29,0.613,30,0.557,33,1.267,36,0.592,39,3.036,40,0.317,47,0.414,48,0.018,49,0.478,50,0.229,51,0.414,52,0.331,73,2.871,78,0.557,79,0.794,82,0.838,85,1.1,87,1.889,88,0.057,94,1.889,100,0.553,109,0.364,110,0.339,111,1.026,114,0.582,116,1.893,120,0.141,121,0.665,128,1.173,130,1.122,141,2.589,148,1.507,158,1.173,162,1.623,165,1.795,166,1.795,168,1.893,176,1.378,177,0.938,179,1.893,180,2.12,182,0.645,183,0.955,184,0.955,185,0.711,186,1.153,187,0.711,188,0.711,189,1.303,190,0.582,191,0.714,192,0.553,193,0.711,194,0.582,195,0.414,196,0.582,197,0.645,198,0.711,199,0.582,200,0.711,201,0.582,202,0.711,203,0.582,204,0.711,205,0.711,206,0.582,207,0.495,208,0.553,209,0.441,210,0.711,211,0.582,212,0.711,213,0.711,214,0.553,215,0.645,216,0.955,217,0.582,218,0.553,219,0.645,220,0.955,221,0.613,222,0.677,223,0.553,224,0.523,225,0.711,226,0.553,227,0.582,228,0.645,229,1.078,230,0.944,231,0.711,232,0.782,233,1.286,234,0.553,235,0.955,236,0.582,237,0.553,238,0.582,239,0.711,240,0.553,241,0.677,242,0.711,243,0.582,244,0.711,245,0.628,246,0.582,247,0.978,248,0.582,249,0.645,250,0.582,251,0.711,252,0.582,253,1.181,254,0.553,255,0.441,256,0.364,257,0.711,258,0.711,259,0.013,260,0.012,261,0.009,281,1.098,306,4.012,321,4.253,322,3.926,323,3.029,324,3.236,342,1.474,381,0.819,389,2.076,412,1.378,470,2.179,523,1.546,528,2.796,553,1.795,817,2.805,984,2.12,987,1.705,1027,3.069,1028,2.848,1240,2.409,1264,4.616,1271,3.437,1272,3.437,1274,3.437,1275,2.409,1380,3.437,1513,2.805,1684,3.767,1973,3.437,1974,4.616,1975,5.354,1976,5.354,1977,4.13,1978,6.046,1979,5.354,1980,6.046,1981,6.743,1982,6.463,1983,3.986,1984,5.354,1985,3.986,1986,3.986,1987,5.354,1988,4.13,1989,3.986,1990,4.13,1991,5.354,1992,3.986,1993,5.354,1994,5.354,1995,5.354,1996,3.986,1997,3.986,1998,3.986,1999,3.986,2000,5.354]],["title/components/NotificationsDialogComponent.html",[0,0.053,232,0.547]],["body/components/NotificationsDialogComponent.html",[0,0.096,1,0.554,2,0.743,3,0.163,4,0.121,5,0.713,6,0.713,7,0.713,8,0.713,9,0.121,14,1.003,15,1.187,16,0.713,17,1.41,18,1.261,19,1.091,20,0.469,21,0.956,23,0.956,25,0.141,26,0.332,28,1.593,29,0.615,30,0.557,33,1.268,36,0.593,40,0.308,47,0.557,48,0.018,49,0.512,50,0.214,51,0.557,52,0.247,53,1.665,78,0.629,79,0.886,82,0.984,85,1.101,88,0.057,100,0.554,106,0.783,107,0.713,109,0.341,110,0.34,114,0.584,120,0.141,121,0.496,148,1.509,176,1.558,177,1.262,179,1.897,180,2.125,182,0.646,183,0.956,184,0.956,185,0.713,186,1.154,187,0.713,188,0.713,189,1.303,190,0.584,191,0.593,192,0.554,193,0.713,194,0.584,195,0.415,196,0.584,197,0.646,198,0.713,199,0.584,200,0.713,201,0.584,202,0.713,203,0.584,204,0.713,205,0.713,206,0.584,207,0.496,208,0.554,209,0.442,210,0.713,211,0.584,212,0.713,213,0.713,214,0.554,215,0.646,216,0.956,217,0.584,218,0.554,219,0.646,220,0.956,221,0.615,222,0.679,223,0.554,224,0.525,225,0.713,226,0.554,227,0.584,228,0.646,229,1.08,230,0.584,231,0.713,232,0.945,233,1.287,234,0.554,235,0.956,236,0.584,237,0.554,238,0.584,239,0.713,240,0.554,241,0.679,242,0.713,243,0.584,244,0.713,245,0.898,246,0.584,247,0.646,248,0.584,249,0.646,250,0.584,251,0.713,252,0.584,253,1.238,254,0.554,255,0.442,256,0.365,257,0.713,258,0.713,259,0.009,260,0.012,261,0.009,262,1.897,263,3.038,264,2.691,282,3.445,306,3.93,381,0.821,466,2.852,528,2.694,542,3.445,549,3.445,552,1.897,553,1.799,566,3.241,629,4.136,816,5.359,817,4.888,965,2.811,976,2.26,984,2.125,1018,3.445,1027,3.506,1028,3.927,1439,3.082,1489,3.482,1977,4.99,1988,4.136,2001,5.578,2002,5.363,2003,3.445,2004,3.482,2005,5.363,2006,4.623,2007,5.363,2008,4.623,2009,3.996,2010,5.363,2011,5.363,2012,4.136,2013,3.996,2014,4.623,2015,5.363,2016,3.996,2017,3.082,2018,3.445]],["title/classes/Order.html",[88,0.053,191,0.414]],["body/classes/Order.html",[3,0.142,4,0.142,9,0.142,25,0.165,26,0.367,40,0.351,48,0.018,50,0.272,52,0.288,60,1.669,88,0.066,109,0.368,120,0.165,191,0.883,207,0.915,209,0.852,245,0.904,247,0.959,255,0.759,259,0.01,260,0.013,261,0.01,281,1.205,296,1.346,301,2.816,409,4.017,412,1.896,418,4.099,467,3.884,891,3.573,892,2.026,904,3.851,919,5.59,931,4.458,1044,2.098,1768,4.458,2019,4.017,2020,4.172,2021,5.93,2022,5.468,2023,5.623,2024,4.172,2025,4.589,2026,5.623,2027,5.031,2028,4.66,2029,4.66,2030,5.112,2031,4.66,2032,4.66,2033,3.583,2034,4.66,2035,4.66,2036,3.851,2037,4.66,2038,5.93,2039,4.66,2040,4.172,2041,4.66,2042,4.66,2043,4.66,2044,5.112,2045,4.66,2046,5.112,2047,4.66]],["title/components/OrderComponent.html",[0,0.053,234,0.519]],["body/components/OrderComponent.html",[0,0.1,1,0.327,2,0.507,3,0.072,4,0.072,5,0.42,6,0.42,7,0.42,8,0.42,9,0.072,14,0.684,15,0.878,16,0.42,17,1.353,18,1.2,19,0.976,20,0.276,21,0.652,23,0.652,25,0.083,26,0.226,27,1.315,28,1.424,29,0.363,30,0.38,31,2.418,33,0.99,36,0.404,40,0.339,47,0.648,48,0.018,49,0.518,50,0.256,51,0.648,52,0.386,53,1.3,55,2.068,64,0.984,78,0.713,79,0.928,82,0.757,88,0.034,94,0.832,96,1.357,100,0.327,102,2.068,106,1.134,107,1.031,109,0.376,110,0.201,111,0.607,114,0.344,120,0.083,121,0.851,128,1.076,130,1.538,132,2.145,133,1.581,136,1.682,148,1.421,152,1.119,156,1.29,161,1.958,162,1.488,164,1.254,167,0.959,170,1.418,176,0.607,177,0.555,182,0.381,183,0.652,184,0.652,185,0.42,186,0.9,187,0.42,188,0.42,189,1.142,190,0.344,191,0.877,192,0.327,193,0.42,194,0.344,195,0.245,196,0.344,197,0.381,198,0.42,199,0.344,200,0.42,201,0.344,202,0.42,203,0.344,204,0.652,205,0.42,206,0.344,207,0.293,208,0.327,209,0.261,210,0.42,211,0.344,212,0.42,213,0.42,214,0.327,215,0.381,216,0.652,217,0.344,218,0.327,219,0.381,220,0.652,221,0.363,222,0.401,223,0.327,224,0.309,225,0.42,226,0.327,227,0.344,228,0.817,229,0.799,230,0.344,231,0.42,232,0.344,233,0.42,234,0.7,235,0.652,236,0.344,237,0.864,238,0.344,239,0.42,240,0.327,241,0.401,242,0.42,243,0.344,244,0.42,245,0.781,246,0.344,247,0.725,248,0.344,249,0.381,250,0.344,251,0.42,252,0.344,253,0.381,254,0.507,255,0.404,256,0.659,257,0.42,258,0.42,259,0.005,260,0.008,261,0.005,268,1.183,269,2.595,270,2.909,276,2.743,279,2.21,281,0.858,288,1.945,289,1.254,290,1.835,293,1.061,294,1.183,297,1.029,298,1.333,301,1.736,303,2.354,304,1.835,306,4.213,322,2.909,323,3.091,324,3.646,326,3.646,330,4.76,331,4.049,334,2.573,342,0.871,358,2.538,367,2.534,370,2.474,373,1.008,379,0.694,381,1.344,389,0.914,408,3.153,412,0.607,418,3.622,444,2.909,446,3,460,0.725,463,1.029,466,2.685,467,2.068,470,1.488,481,2.375,482,2.573,489,3.051,490,1.531,522,1.008,523,0.914,552,1.119,587,2.573,609,3.278,620,1.736,705,1.835,758,1.818,886,4.049,887,2.961,891,3.04,892,1.624,903,2.534,904,3.755,920,2.375,942,2.032,943,1.333,944,1.531,955,3.894,956,2.821,971,4.215,972,4.353,990,1.531,1004,2.534,1069,3.344,1091,1.945,1105,3.494,1143,1.424,1233,1.818,1240,1.424,1277,1.658,1397,1.818,1452,2.573,1483,1.254,1486,2.032,1489,1.531,1491,1.531,1526,3.153,1768,2.375,1851,3.153,1864,4.353,1896,3.863,1929,3.152,1940,2.032,1948,2.032,1967,3.863,1969,2.032,1970,4.353,2020,4.878,2024,2.573,2025,3.552,2030,3.153,2033,3.051,2036,3.278,2040,4.068,2044,3.153,2048,2.032,2049,3.657,2050,3.657,2051,3.657,2052,3.894,2053,3.863,2054,3.153,2055,4.48,2056,4.48,2057,3.863,2058,4.48,2059,3.657,2060,5.049,2061,3.657,2062,5.049,2063,5.783,2064,3.153,2065,3.153,2066,5.049,2067,3.657,2068,3.153,2069,3.657,2070,4.48,2071,4.353,2072,3.657,2073,3.657,2074,2.357,2075,2.357,2076,3.657,2077,2.357,2078,2.357,2079,2.357,2080,3.657,2081,2.821,2082,3.657,2083,3.657,2084,2.357,2085,3.657,2086,3.657,2087,3.657,2088,3.153,2089,2.357,2090,3.153,2091,2.357,2092,3.657,2093,4.353,2094,2.357,2095,3.657,2096,2.357,2097,3.153,2098,2.357,2099,2.357,2100,2.357,2101,2.357,2102,3.657,2103,2.357,2104,3.657,2105,2.357,2106,3.657,2107,3.657,2108,2.357,2109,2.357,2110,5.049,2111,3.657,2112,2.357,2113,2.357,2114,2.357,2115,2.357,2116,2.357,2117,3.657,2118,2.357,2119,2.357,2120,2.357,2121,2.357,2122,2.357,2123,2.032,2124,2.357,2125,2.032,2126,3.657,2127,2.357,2128,2.357,2129,2.357,2130,3.657,2131,2.357,2132,2.357,2133,2.357,2134,2.357,2135,2.032,2136,2.032,2137,2.357,2138,2.357,2139,2.357,2140,2.357,2141,2.357,2142,5.049,2143,4.711,2144,2.357,2145,2.357,2146,2.357,2147,2.357,2148,3.657,2149,2.357,2150,3.657,2151,2.357,2152,2.357,2153,2.357,2154,2.357,2155,2.357,2156,2.357,2157,2.357,2158,2.357,2159,2.357,2160,2.357,2161,2.032,2162,3.657,2163,2.357,2164,2.357,2165,2.357,2166,3.657,2167,2.357,2168,3.657,2169,5.049,2170,2.357,2171,2.357,2172,2.357,2173,2.357,2174,2.357,2175,2.357,2176,2.357,2177,2.357,2178,2.357,2179,2.357,2180,2.357]],["title/injectables/OrderService.html",[887,1.777,1298,1.053]],["body/injectables/OrderService.html",[2,0.549,3,0.079,4,0.079,9,0.079,19,0.64,25,0.093,26,0.245,27,1.548,30,0.411,31,1.535,36,0.289,40,0.342,47,0.742,48,0.018,49,0.565,50,0.257,51,0.742,52,0.445,53,1.019,77,2.239,78,0.753,79,0.91,85,1.094,86,1.716,88,0.037,96,1.685,106,1.122,107,1.177,109,0.353,110,0.222,120,0.093,121,0.906,122,0.881,128,1.406,136,1.218,191,0.881,209,0.79,237,1.005,255,0.712,256,0.436,259,0.006,260,0.009,261,0.006,281,1.203,296,0.937,297,1.924,323,2.239,339,4.594,352,3.053,358,2.738,367,2.702,370,2.924,373,1.118,378,0.922,379,0.769,381,1.094,389,1.013,412,1.551,418,3.805,425,1.611,455,1.274,460,1.64,463,2.115,472,2.674,615,1.478,620,2.86,713,1.177,756,1.177,887,1.879,892,1.81,895,1.879,903,1.986,905,2.239,927,2.105,931,3.46,1004,3.234,1027,1.879,1091,2.834,1105,2.392,1113,4.11,1298,1.114,1299,1.177,1301,3.361,1303,3.102,1310,1.241,1311,2.971,1313,2.392,1327,4.407,1329,2.268,1330,2.57,1338,2.016,1339,2.541,1340,1.241,1342,2.57,1343,2.57,1349,2.105,1414,2.784,1450,3.412,1483,1.39,1685,3.053,1714,2.784,1792,3.102,1793,3.46,1795,3.102,1799,2.57,1800,2.784,1801,2.784,1823,3.412,2004,2.57,2006,2.253,2022,4.416,2023,5.688,2024,3.361,2025,2.784,2027,4.416,2033,2.392,2040,3.749,2052,5.344,2057,4.118,2064,3.412,2065,3.412,2068,3.412,2088,3.412,2090,3.412,2097,3.412,2125,2.253,2135,2.253,2161,4.594,2181,2.253,2182,3.958,2183,3.053,2184,3.958,2185,3.958,2186,5.328,2187,3.412,2188,3.958,2189,4.594,2190,5.328,2191,3.958,2192,3.412,2193,3.958,2194,3.958,2195,3.958,2196,3.958,2197,2.613,2198,3.958,2199,2.613,2200,3.958,2201,3.958,2202,3.958,2203,2.613,2204,3.958,2205,2.613,2206,4.936,2207,3.958,2208,2.613,2209,3.958,2210,2.613,2211,3.958,2212,2.613,2213,2.613,2214,2.613,2215,4.594,2216,3.958,2217,2.613,2218,3.958,2219,2.613,2220,3.958,2221,2.613,2222,2.613,2223,2.613,2224,3.958,2225,5.725,2226,2.613,2227,3.958,2228,5.725,2229,2.613,2230,2.613,2231,3.958,2232,2.613,2233,2.613,2234,3.958,2235,2.613,2236,2.613,2237,3.053,2238,3.412,2239,2.613,2240,3.958,2241,2.613,2242,2.613,2243,3.958,2244,2.253,2245,5.328,2246,3.958,2247,3.958,2248,3.958,2249,2.613,2250,2.613,2251,4.777,2252,4.594,2253,2.613,2254,3.958,2255,2.613,2256,2.613,2257,2.613,2258,2.613,2259,2.613,2260,2.613,2261,2.613,2262,2.613,2263,2.613,2264,3.958,2265,3.958,2266,4.11,2267,3.958,2268,3.958,2269,2.613,2270,5.328,2271,2.613,2272,2.613,2273,2.613,2274,2.613,2275,2.613,2276,2.613,2277,2.613,2278,2.613,2279,2.613,2280,1.838,2281,2.613,2282,2.613,2283,2.613]],["title/components/OrderTrackerComponent.html",[0,0.053,238,0.547]],["body/components/OrderTrackerComponent.html",[0,0.076,1,0.438,2,0.631,3,0.096,4,0.096,5,0.564,6,0.564,7,0.564,8,0.564,9,0.096,14,0.852,15,1.047,16,0.564,17,1.388,18,1.24,19,1.002,20,0.371,21,0.813,23,0.813,25,0.112,26,0.282,28,1.589,29,0.486,30,0.474,33,1.146,36,0.504,40,0.304,47,0.474,48,0.018,49,0.462,50,0.219,51,0.474,52,0.282,53,1.505,60,1.282,64,1.226,69,1.341,78,0.691,79,0.847,82,0.859,84,1.535,85,0.936,86,1.467,87,1.608,88,0.083,89,1.685,90,2.063,94,1.116,100,0.438,109,0.375,110,0.269,111,0.814,114,0.462,117,1.668,119,2.287,120,0.112,121,0.846,129,1.169,130,1.503,132,2.192,148,1.816,156,1.116,158,1.341,169,1.788,174,1.587,176,1.785,177,1.257,178,2.053,179,1.501,180,1.682,182,0.511,183,0.813,184,0.813,185,0.564,186,1.043,187,0.564,188,0.564,189,1.237,190,0.462,191,0.857,192,0.438,193,0.564,194,0.462,195,0.329,196,0.462,197,0.511,198,0.564,199,0.462,200,0.564,201,0.462,202,0.564,203,0.462,204,0.564,205,0.564,206,0.462,207,0.393,208,0.631,209,0.82,210,0.564,211,0.462,212,0.564,213,0.564,214,0.438,215,0.511,216,0.813,217,0.462,218,0.438,219,0.511,220,0.813,221,0.486,222,0.537,223,0.438,224,0.415,225,0.564,226,0.438,227,0.462,228,0.511,229,0.953,230,0.462,231,0.564,232,0.462,233,0.564,234,0.438,235,0.813,236,0.462,237,1.015,238,0.854,239,0.564,240,0.438,241,1.053,242,0.564,243,0.462,244,0.564,245,0.757,246,0.462,247,0.864,248,0.462,249,0.511,250,0.462,251,0.564,252,0.462,253,0.511,254,0.438,255,0.59,256,0.289,257,0.564,258,0.564,259,0.007,260,0.01,261,0.007,268,1.587,269,2.776,272,2.959,273,2.266,275,2.287,276,2.287,281,1.211,290,1.587,293,1.424,294,1.587,298,1.788,381,1.2,418,2.577,446,2.052,453,1.899,454,1.882,455,2.078,459,3.109,460,1.799,461,3.532,463,1.645,464,2.577,466,2.423,467,2.577,518,2.291,519,1.949,520,2.164,521,2.164,523,1.226,567,3.417,591,2.577,609,2.959,614,2.753,672,1.911,723,1.287,838,5.252,839,4.79,875,3.796,879,3.306,887,3.233,888,3.233,892,1.833,895,2.776,920,2.959,926,3.514,930,3.928,943,1.788,945,1.788,949,3.928,950,2.726,951,3.205,952,2.726,966,2.726,976,1.788,977,2.423,978,3.11,979,3.514,981,1.424,987,1.353,988,2.164,989,2.577,990,2.053,1012,3.514,1071,3.433,1073,3.745,1075,3.928,1076,3.306,1102,3.514,1120,4.605,1220,3.514,1237,2.726,1238,2.726,1241,2.224,1297,2.224,1483,1.682,1563,2.439,1640,2.224,1971,2.726,2020,3.205,2033,2.753,2036,2.959,2143,3.928,2189,3.928,2206,5.04,2266,4.12,2280,3.205,2284,2.726,2285,5.342,2286,4.556,2287,6.454,2288,4.556,2289,4.556,2290,4.556,2291,5.04,2292,3.162,2293,5.845,2294,4.12,2295,4.556,2296,3.162,2297,4.556,2298,3.162,2299,3.162,2300,3.162,2301,3.162,2302,3.162,2303,3.162,2304,3.162,2305,3.162,2306,3.162,2307,3.162,2308,4.556,2309,3.928,2310,3.928,2311,3.928,2312,3.162,2313,3.162,2314,3.162]],["title/components/OrdersListDisplayComponent.html",[0,0.053,236,0.547]],["body/components/OrdersListDisplayComponent.html",[0,0.082,1,0.363,2,0.55,3,0.08,4,0.08,5,0.467,6,0.467,7,0.467,8,0.467,9,0.08,14,0.742,15,0.938,16,0.467,17,1.367,18,1.216,19,0.927,20,0.307,21,0.707,23,0.707,25,0.093,26,0.245,27,0.983,28,1.588,29,0.403,30,0.412,33,1.046,36,0.29,39,2.581,40,0.333,47,0.651,48,0.018,49,0.453,50,0.258,51,0.497,52,0.296,53,1.021,55,2.243,60,1.502,64,1.067,73,1.883,75,2.575,77,2.243,78,0.555,79,0.792,82,1.084,85,1.096,88,0.037,94,1.399,96,1.29,100,0.363,102,2.243,106,1.046,107,1.075,109,0.386,110,0.223,111,0.674,114,0.383,119,1.99,120,0.093,121,0.749,122,0.883,128,1.167,130,0.737,132,1.54,133,2.276,148,1.346,156,1.883,158,1.167,159,1.393,162,1.066,170,1.016,171,1.18,172,1.701,177,0.933,182,0.424,183,0.707,184,0.707,185,0.467,186,0.952,187,0.467,188,0.467,189,1.178,190,0.383,191,0.854,192,0.363,193,0.467,194,0.383,195,0.79,196,0.383,197,0.424,198,0.467,199,0.383,200,0.467,201,0.383,202,0.467,203,0.383,204,0.467,205,0.467,206,0.383,207,0.325,208,0.363,209,0.29,210,0.467,211,0.383,212,0.467,213,0.467,214,0.363,215,0.424,216,0.707,217,0.383,218,0.363,219,0.927,220,0.707,221,0.403,222,0.445,223,0.363,224,0.344,225,0.467,226,0.363,227,0.383,228,0.424,229,0.853,230,0.383,231,0.467,232,0.383,233,0.467,234,0.55,235,0.707,236,0.779,237,1.056,238,0.383,239,0.467,240,0.363,241,0.813,242,0.467,243,0.383,244,0.467,245,0.465,246,0.383,247,0.774,248,0.383,249,0.424,250,0.383,251,0.467,252,0.383,253,0.774,254,0.363,255,0.692,256,0.239,257,0.467,258,0.467,259,0.009,260,0.009,261,0.006,281,0.974,296,0.938,297,0.737,321,3.366,322,3.107,323,3.018,324,3.224,331,2.575,349,2.79,371,3.419,377,1.244,378,0.924,379,0.771,381,0.814,412,1.552,444,3.107,446,2.904,451,3.411,460,1.22,465,2.575,466,2.109,467,3.018,470,1.614,481,2.575,482,2.79,486,1.315,487,1.843,489,3.784,490,1.701,522,2.282,523,1.016,598,2.79,620,1.883,625,2.838,681,2.838,723,1.066,771,2.021,832,5.659,857,2.243,887,2.974,888,3.063,927,2.109,943,1.482,945,1.482,962,2.021,981,1.18,987,1.121,988,1.244,1027,2.533,1056,3.366,1071,3.43,1072,3.464,1076,2.243,1107,1.701,1159,1.843,1160,1.843,1161,1.843,1250,1.843,1275,1.583,1277,2.79,1324,2.575,1329,1.883,1481,4.032,1483,1.393,1491,1.701,1494,2.79,1558,4.115,1610,3.059,1687,2.259,1768,4.6,1890,1.843,1891,4.125,1892,3.69,1893,3.059,1899,4.6,1908,2.259,1913,3.419,1914,2.021,1926,2.259,1927,4.6,1929,2.79,1930,2.259,1931,2.259,1949,2.259,1961,2.259,1972,2.021,2004,2.575,2026,3.419,2033,2.396,2036,4.501,2040,4.735,2071,4.6,2081,3.059,2093,3.419,2123,2.259,2183,3.059,2237,3.059,2244,3.419,2266,5.192,2280,1.843,2291,3.419,2294,3.69,2309,5.56,2315,6.325,2316,3.419,2317,4.6,2318,3.965,2319,3.965,2320,3.965,2321,5.335,2322,3.965,2323,4.125,2324,4.941,2325,3.965,2326,3.965,2327,3.059,2328,4.784,2329,3.69,2330,2.62,2331,3.965,2332,2.62,2333,2.62,2334,3.965,2335,3.965,2336,5.198,2337,2.62,2338,2.62,2339,3.965,2340,3.965,2341,3.419,2342,3.965,2343,2.62,2344,3.965,2345,3.965,2346,3.419,2347,2.62,2348,3.059,2349,3.419,2350,2.62,2351,3.965,2352,3.419,2353,2.259,2354,3.419,2355,2.62,2356,3.419,2357,3.419,2358,2.62,2359,3.419,2360,3.419,2361,3.419,2362,2.62,2363,2.62,2364,2.259,2365,2.259,2366,3.965,2367,3.965,2368,4.784,2369,4.784,2370,2.62,2371,2.62,2372,2.62,2373,2.62,2374,2.259,2375,2.259,2376,2.259,2377,2.62,2378,2.259,2379,2.259,2380,2.259,2381,2.259,2382,2.62,2383,2.62,2384,2.62,2385,6.731,2386,3.965,2387,2.62,2388,2.62,2389,2.62,2390,2.62]],["title/components/PaymentComponent.html",[0,0.053,240,0.519]],["body/components/PaymentComponent.html",[0,0.062,1,0.309,2,0.485,3,0.068,4,0.068,5,0.397,6,0.397,7,0.397,8,0.397,9,0.068,14,0.655,15,0.847,16,0.397,17,1.346,18,1.182,19,0.861,20,0.261,21,0.624,23,0.624,25,0.079,26,0.217,29,0.343,30,0.364,33,0.96,36,0.541,40,0.325,47,0.364,48,0.018,49,0.387,50,0.236,51,0.364,52,0.217,53,1.575,55,1.979,58,1.993,60,0.985,64,0.942,69,1.441,73,1.058,77,1.979,78,0.682,79,0.889,82,0.872,84,1.179,85,0.719,86,1.127,87,1.235,88,0.092,89,1.294,90,1.993,91,2.272,94,2.22,100,0.309,106,0.686,107,0.624,109,0.355,110,0.19,114,0.325,117,1.163,120,0.079,121,0.76,133,0.786,136,2.109,148,1.378,158,0.656,161,0.864,164,3.347,165,1.946,167,1.424,168,1.662,176,1.764,177,1.153,178,1.447,182,0.36,183,0.624,184,0.624,185,0.397,186,1.222,187,0.397,188,0.397,189,1.122,190,0.325,191,0.846,192,0.309,193,0.397,194,0.325,195,0.232,196,0.325,197,0.36,198,0.397,199,0.325,200,0.397,201,0.325,202,0.397,203,0.325,204,0.397,205,0.397,206,0.325,207,0.277,208,0.309,209,0.748,210,0.397,211,0.325,212,0.397,213,0.397,214,0.309,215,0.36,216,0.624,217,0.325,218,0.309,219,0.36,220,0.624,221,0.343,222,0.379,223,0.309,224,0.293,225,0.397,226,0.309,227,0.325,228,0.36,229,0.771,230,0.325,231,0.397,232,0.325,233,0.397,234,0.309,235,0.624,236,0.325,237,0.309,238,0.325,239,0.397,240,0.679,241,1.116,242,0.397,243,0.325,244,0.397,245,0.41,246,0.325,247,0.36,248,0.325,249,0.36,250,0.325,251,0.397,252,0.325,253,0.36,254,0.309,255,0.246,256,0.588,257,0.397,258,0.397,259,0.005,260,0.008,261,0.005,273,0.864,281,0.832,283,2.416,296,1.107,304,1.756,331,2.272,334,4.427,342,2.626,358,2.299,370,1.497,381,1.292,412,1.718,446,2.205,453,1.03,454,1.127,455,1.577,459,2.604,460,1.077,461,2.115,463,1.59,464,3.461,468,3.777,470,1.424,518,2.381,519,2.617,520,2.905,521,2.905,523,1.357,526,3.04,546,3.891,567,3.589,614,2.115,618,3.017,625,1.185,637,4.557,649,1.921,657,4.222,668,1.567,681,2.604,705,1.118,706,1.185,723,0.907,738,2.699,786,1.718,836,1.26,837,3.559,875,1.447,876,3.726,882,2.115,885,2.959,887,2.905,888,2.905,891,2.988,892,0.942,893,2.959,894,3.973,895,1.662,896,1.662,912,2.115,913,3.342,916,2.959,920,3.18,943,1.26,944,1.447,945,1.26,947,1.921,955,2.699,956,3.777,971,2.699,977,1.861,978,2.457,979,2.699,984,1.861,989,1.26,990,1.447,1004,2.457,1012,2.699,1016,3.777,1023,2.699,1029,1.447,1030,1.346,1031,1.346,1056,3.744,1071,3.549,1072,3.18,1073,3.347,1076,3.195,1081,3.017,1091,1.861,1102,2.699,1107,4.086,1155,1.921,1159,1.567,1160,1.567,1161,1.567,1175,1.921,1222,1.346,1233,5.392,1249,1.921,1250,3.04,1275,1.346,1291,1.447,1329,1.662,1330,2.272,1456,4.719,1600,4.222,1619,4.222,1640,1.567,1821,1.921,2014,3.017,2022,4.105,2024,4.156,2033,3.57,2036,3.668,2136,1.921,2187,4.222,2192,3.017,2280,1.567,2310,3.017,2311,4.87,2327,2.699,2336,4.87,2391,1.921,2392,3.499,2393,4.321,2394,3.499,2395,3.499,2396,6.673,2397,4.321,2398,3.499,2399,4.321,2400,5.908,2401,4.321,2402,5.322,2403,4.321,2404,4.321,2405,4.897,2406,4.897,2407,4.897,2408,5.649,2409,1.921,2410,4.897,2411,4.897,2412,3.499,2413,5.649,2414,3.499,2415,3.499,2416,2.228,2417,4.897,2418,3.499,2419,4.897,2420,3.499,2421,3.499,2422,3.499,2423,4.897,2424,2.228,2425,2.228,2426,6.118,2427,4.897,2428,3.499,2429,3.499,2430,3.499,2431,3.499,2432,3.499,2433,3.499,2434,2.228,2435,3.017,2436,2.228,2437,2.228,2438,3.499,2439,3.499,2440,3.499,2441,2.228,2442,2.228,2443,2.228,2444,3.499,2445,2.228,2446,2.228,2447,2.228,2448,2.228,2449,5.322,2450,2.228,2451,2.228,2452,3.499,2453,2.228,2454,2.228,2455,2.228,2456,2.228,2457,2.228,2458,4.321,2459,5.908,2460,4.321,2461,4.321,2462,4.321,2463,3.499,2464,2.228,2465,3.499,2466,2.228,2467,4.897,2468,2.228,2469,2.228,2470,2.228,2471,2.228,2472,2.228,2473,3.499,2474,3.499,2475,2.228,2476,2.228,2477,2.228,2478,3.499,2479,2.228,2480,2.228,2481,2.228,2482,2.228,2483,2.228,2484,2.228,2485,3.499,2486,2.228,2487,3.499,2488,2.228,2489,2.228,2490,2.228,2491,3.499,2492,3.499,2493,3.499,2494,2.228,2495,2.228,2496,2.228,2497,2.228,2498,2.228,2499,2.228,2500,2.228,2501,1.921,2502,2.228,2503,3.499,2504,3.499,2505,4.222,2506,3.499,2507,3.499,2508,3.499,2509,2.228,2510,3.499,2511,3.499,2512,3.499,2513,2.228,2514,2.228,2515,2.228,2516,2.228,2517,2.228,2518,2.228,2519,2.228,2520,2.228,2521,2.228,2522,2.228,2523,2.228,2524,2.228]],["title/components/PickTableDialogComponent.html",[0,0.053,243,0.547]],["body/components/PickTableDialogComponent.html",[0,0.102,1,0.564,2,0.752,3,0.124,4,0.124,5,0.725,6,0.725,7,0.725,8,0.725,9,0.124,14,1.015,15,1.197,16,0.725,17,1.411,18,1.268,19,1.098,20,0.477,21,0.968,23,0.968,25,0.144,26,0.336,27,1.114,28,1.719,29,0.626,30,0.564,33,1.277,36,0.45,40,0.319,47,0.423,48,0.018,49,0.483,50,0.231,51,0.423,52,0.252,58,2.209,78,0.677,79,0.856,82,0.941,85,1.114,88,0.058,100,0.564,109,0.367,110,0.346,111,1.047,114,0.594,120,0.144,130,1.834,176,1.397,177,0.957,179,1.931,180,2.163,182,0.658,183,0.968,184,0.968,185,0.725,186,1.162,187,0.725,188,0.725,189,1.308,190,0.594,191,0.6,192,0.564,193,0.725,194,0.594,195,0.635,196,0.594,197,0.658,198,0.725,199,0.594,200,0.725,201,0.594,202,0.725,203,0.594,204,0.725,205,0.725,206,0.594,207,0.505,208,0.564,209,0.45,210,0.725,211,0.594,212,0.725,213,0.725,214,0.564,215,0.658,216,0.968,217,0.594,218,0.564,219,0.658,220,0.968,221,0.626,222,0.691,223,0.564,224,0.534,225,0.725,226,0.564,227,0.594,228,0.658,229,1.089,230,0.594,231,0.725,232,0.594,233,0.725,234,0.564,235,0.968,236,0.594,237,0.564,238,0.594,239,0.725,240,0.564,241,0.691,242,0.725,243,0.952,244,1.321,245,0.933,246,0.594,247,0.658,248,0.594,249,0.658,250,0.594,251,1.162,252,0.594,253,1.208,254,0.564,255,0.45,256,0.371,257,0.725,258,0.725,259,0.009,260,0.012,261,0.009,262,1.931,263,3.065,264,2.723,268,2.041,269,3.223,279,3.279,291,3.524,295,2.3,306,4.032,326,3.279,338,3.466,363,3.137,381,0.835,526,4.296,528,2.764,550,3.506,551,3.279,552,1.931,553,1.831,566,3.279,820,5.015,821,4.629,981,1.831,987,1.74,1040,3.506,1291,2.641,1396,2.861,1682,3.137,2012,3.137,2017,3.137,2525,5.427,2526,6.516,2527,4.678,2528,4.067,2529,3.506,2530,4.067,2531,4.067]],["title/components/ReadyToOrderComponent.html",[0,0.053,246,0.547]],["body/components/ReadyToOrderComponent.html",[0,0.077,1,0.449,2,0.643,3,0.099,4,0.099,5,0.578,6,0.578,7,0.578,8,0.578,9,0.099,14,0.868,15,1.062,16,0.578,17,1.39,18,1.237,19,1.012,20,0.38,21,0.827,23,0.827,25,0.115,26,0.287,29,0.499,30,0.482,33,1.159,36,0.513,40,0.313,47,0.482,48,0.018,49,0.468,50,0.209,51,0.482,52,0.287,53,1.194,64,1.249,69,1.365,73,1.539,78,0.697,79,0.916,82,0.751,84,1.563,85,0.953,86,1.494,87,1.637,88,0.093,89,1.715,90,2.554,91,3.84,100,0.449,107,0.827,109,0.333,110,0.276,114,0.474,117,0.873,120,0.115,121,0.777,136,1.82,156,1.144,176,0.835,177,0.763,182,0.524,183,0.827,184,0.827,185,0.578,186,1.055,187,0.578,188,0.578,189,1.245,190,0.474,191,0.831,192,0.449,193,0.578,194,0.474,195,0.337,196,0.474,197,0.524,198,0.578,199,0.474,200,0.578,201,0.474,202,0.578,203,0.474,204,0.827,205,0.578,206,0.474,207,0.403,208,0.867,209,0.654,210,0.578,211,0.474,212,0.578,213,0.578,214,0.449,215,0.524,216,0.827,217,0.474,218,0.449,219,0.524,220,0.827,221,0.499,222,0.551,223,0.449,224,0.426,225,0.578,226,0.449,227,0.474,228,0.524,229,0.966,230,0.474,231,0.578,232,0.474,233,0.578,234,0.449,235,0.827,236,0.474,237,0.449,238,0.474,239,0.578,240,0.449,241,0.551,242,0.578,243,0.474,244,0.578,245,0.917,246,0.864,247,1.234,248,0.474,249,0.524,250,0.474,251,0.578,252,0.474,253,0.524,254,0.449,255,0.599,256,0.296,257,0.578,258,0.578,259,0.007,260,0.01,261,0.007,281,1.005,283,2.784,296,1.276,304,3.267,342,2.186,358,2.407,381,1.337,412,1.194,446,2.931,453,1.74,454,1.904,455,1.904,459,3.765,460,2.179,461,3.933,463,1.832,464,3.682,470,1.888,528,2.658,553,1.46,567,3.502,591,2.624,592,3.578,614,2.803,672,1.959,706,1.724,822,5.382,823,5.382,836,1.834,837,3.791,879,3.539,882,2.803,885,3.573,893,3.933,894,4.227,895,3.091,912,2.803,913,3.877,916,3.573,921,4.579,939,3.578,951,2.281,961,4.178,964,5.778,965,3.264,981,1.46,987,1.387,988,1.539,1000,2.795,1002,4.67,1004,2.967,1007,2.795,1017,2.795,1021,2.795,1022,2.795,1023,2.501,1024,2.795,1025,2.795,1026,2.795,1027,1.539,1028,1.724,1029,2.105,1030,1.959,1031,1.959,1032,2.281,1033,2.281,1034,2.795,1035,2.281,1036,2.795,1327,2.803,1506,4.16,2020,3.264,2053,4.67,2054,3.999,2348,2.501,2435,3.999,2532,2.795,2533,6.509,2534,4.639,2535,4.639,2536,3.242,2537,5.913,2538,5.098,2539,3.242,2540,4.639,2541,3.242,2542,3.242,2543,3.999,2544,3.242,2545,3.242,2546,3.242,2547,5.417,2548,4.639]],["title/components/SalesDialogComponent.html",[0,0.053,248,0.547]],["body/components/SalesDialogComponent.html",[0,0.095,1,0.603,2,0.787,3,0.132,4,0.132,5,0.777,6,0.777,7,0.777,8,0.777,9,0.132,10,3.926,11,2.969,14,1.062,15,1.238,16,0.777,17,1.417,18,1.274,19,1.123,20,0.511,21,1.012,23,1.012,25,0.154,26,0.351,27,1.425,28,1.784,29,0.67,30,0.59,33,1.312,36,0.481,40,0.306,47,0.453,48,0.018,49,0.5,50,0.224,51,0.453,52,0.351,78,0.453,79,0.745,82,0.875,88,0.062,100,0.603,109,0.356,110,0.371,111,1.121,114,0.636,120,0.154,121,0.705,130,1.953,132,2.292,182,0.704,183,1.012,184,1.012,185,0.777,186,1.194,187,0.777,188,0.777,189,1.325,190,0.636,191,0.627,192,0.603,193,0.777,194,0.636,195,0.773,196,0.636,197,0.704,198,0.777,199,0.636,200,0.777,201,0.636,202,0.777,203,0.636,204,0.777,205,0.777,206,0.636,207,0.541,208,0.603,209,0.481,210,0.777,211,0.636,212,0.777,213,0.777,214,0.603,215,0.704,216,1.012,217,0.636,218,0.603,219,0.704,220,1.012,221,0.67,222,0.74,223,0.603,224,0.572,225,0.777,226,0.603,227,0.636,228,0.704,229,1.126,230,0.636,231,0.777,232,0.636,233,0.777,234,0.603,235,1.012,236,0.636,237,0.875,238,0.636,239,0.777,240,0.603,241,0.74,242,0.777,243,0.636,244,0.777,245,0.666,246,0.636,247,0.704,248,0.978,249,1.229,250,0.636,251,0.777,252,0.636,253,0.704,254,0.603,255,0.481,256,0.397,257,0.777,258,0.777,259,0.01,260,0.013,261,0.01,262,2.067,263,3.17,264,2.849,268,2.185,269,3.296,276,2.185,289,2.316,290,2.849,291,2.827,293,1.961,294,2.185,295,2.463,326,2.631,467,3.211,486,2.185,488,4.883,854,5.354,1439,3.358,1452,3.993,1624,3.993,2549,5.676,2550,6.316,2551,4.354,2552,4.354,2553,5.676,2554,5.676]],["title/components/SelectTableDialogComponent.html",[0,0.053,250,0.547]],["body/components/SelectTableDialogComponent.html",[0,0.077,1,0.443,2,0.637,3,0.097,4,0.097,5,0.57,6,0.57,7,0.57,8,0.57,9,0.097,14,0.859,15,1.054,16,0.57,17,1.389,18,1.235,19,1.007,20,0.375,21,0.819,23,0.819,25,0.113,26,0.284,27,1.104,28,1.595,29,0.492,30,0.478,33,1.152,36,0.65,40,0.318,47,0.332,48,0.018,49,0.425,50,0.229,51,0.332,52,0.198,53,1.513,60,1.293,64,1.237,69,1.352,73,1.519,78,0.559,79,0.851,82,0.925,84,1.98,85,0.944,86,1.479,87,1.621,88,0.092,89,1.699,90,1.621,94,1.621,96,1.4,100,0.443,106,1.054,107,0.959,109,0.385,110,0.272,111,0.823,114,0.467,117,0.861,120,0.113,121,0.73,130,1.824,148,1.879,158,1.582,162,1.87,170,1.24,171,1.44,174,2.949,176,1.668,177,1.081,182,0.517,183,0.819,184,0.819,185,0.57,186,1.048,187,0.57,188,0.57,189,1.24,190,0.467,191,0.688,192,0.443,193,0.57,194,0.467,195,0.332,196,0.467,197,0.517,198,0.57,199,0.467,200,0.57,201,0.467,202,0.57,203,0.467,204,0.57,205,0.57,206,0.467,207,0.397,208,0.443,209,0.848,210,0.57,211,0.467,212,0.57,213,0.57,214,0.443,215,0.517,216,0.819,217,0.467,218,0.443,219,0.517,220,0.819,221,0.492,222,0.543,223,0.443,224,0.603,225,0.57,226,0.443,227,0.467,228,0.517,229,0.959,230,0.467,231,0.57,232,0.467,233,0.57,234,0.443,235,0.819,236,0.467,237,0.898,238,0.467,239,0.57,240,0.443,241,0.543,242,0.57,243,0.467,244,0.57,245,0.931,246,0.467,247,0.517,248,0.467,249,0.517,250,0.859,251,1.299,252,0.467,253,1.125,254,0.443,255,0.594,256,0.623,257,0.57,258,0.57,259,0.007,260,0.01,261,0.007,262,1.519,263,2.698,264,2.306,269,2.955,273,1.24,275,2.698,277,2.467,287,2.467,291,2.077,298,1.809,338,3.633,381,1.104,453,1.907,454,1.892,455,1.892,459,2.444,460,1.414,472,2.949,518,2.173,519,2.514,522,1.368,526,4.134,528,2.648,547,4.147,551,3.551,552,1.519,553,1.44,561,3.961,566,2.776,625,1.701,637,3.544,706,1.701,710,2.25,723,1.302,818,4.966,819,4.584,857,3.324,875,3.491,888,3.243,945,1.809,978,2.949,981,1.44,987,2.3,988,2.79,989,1.809,1071,3.126,1072,2.077,1073,3.699,1076,3.324,1091,2.444,1106,3.961,1107,2.983,1113,3.544,1222,2.776,1241,3.232,1268,2.757,1338,2.467,1369,5.445,1396,3.232,1483,1.701,1505,3.232,1512,3.232,1563,3.544,1640,2.25,1682,2.467,1684,3.232,2012,2.467,2017,2.467,2018,2.757,2294,2.467,2341,2.757,2409,2.757,2501,2.757,2529,2.757,2555,5.877,2556,5.877,2557,4.594,2558,3.198,2559,3.198,2560,4.594,2561,4.594,2562,3.198,2563,3.198,2564,3.198,2565,3.198,2566,3.198,2567,3.198,2568,3.198,2569,3.198,2570,3.198,2571,3.198,2572,3.198,2573,3.198]],["title/classes/Staff.html",[88,0.053,195,0.389]],["body/classes/Staff.html",[3,0.157,4,0.157,9,0.157,25,0.183,26,0.392,40,0.347,48,0.018,49,0.501,50,0.269,52,0.32,58,2.577,60,1.456,88,0.074,100,1.013,120,0.183,195,0.82,237,0.948,249,1.106,255,0.808,259,0.011,260,0.014,261,0.011,281,1.292,296,1.458,301,3.006,340,4.462,412,1.882,467,3.869,514,5.233,565,4.495,892,2.002,1044,2.33,1453,4.628,1990,5.497,2329,3.992,2574,4.462,2575,5.175,2576,5.175,2577,5.175,2578,6.84,2579,6.84,2580,5.175,2581,6.331,2582,5.175,2583,5.175,2584,5.175,2585,5.175,2586,5.175,2587,6.331,2588,5.175,2589,5.175]],["title/injectables/StaffService.html",[451,2.117,1298,1.053]],["body/injectables/StaffService.html",[3,0.121,4,0.121,9,0.121,19,0.863,25,0.141,26,0.33,27,1.582,28,1.588,30,0.555,31,2.07,36,0.667,40,0.345,47,0.736,48,0.018,49,0.561,50,0.258,51,0.736,52,0.429,53,1.374,78,0.749,79,0.701,88,0.086,96,1.452,100,0.74,102,3.808,106,1.183,107,1.076,109,0.399,110,0.338,120,0.141,121,0.836,122,1.337,191,0.439,195,0.828,249,0.863,255,0.713,259,0.009,260,0.012,261,0.009,281,1.178,293,1.787,296,1.389,297,1.994,312,2.245,367,2.245,370,1.698,377,1.884,378,1.4,379,1.168,412,1.374,425,2.173,447,4.602,451,3.02,453,1.571,454,1.719,455,1.719,456,4.602,460,1.643,462,5.562,463,2.144,486,1.992,543,4.602,544,4.602,565,3.645,620,3.063,713,1.787,756,1.787,892,1.866,896,2.535,927,3.688,1004,3.48,1229,3.061,1298,1.502,1299,1.787,1303,3.917,1310,1.884,1311,3.364,1313,3.226,1314,3.226,1329,2.864,1339,2.111,1340,1.884,1342,4.189,1343,2.577,1346,3.061,1414,3.755,1453,2.577,1458,4.602,1483,2.111,1624,3.755,1641,4.117,1714,3.755,1792,3.466,1793,3.917,1795,3.917,1799,3.466,1870,3.421,1871,3.421,2590,3.421,2591,5.338,2592,6.452,2593,5.338,2594,5.338,2595,5.338,2596,5.338,2597,5.338,2598,5.338,2599,3.968,2600,3.968,2601,3.968,2602,5.338,2603,5.338,2604,5.338,2605,3.968,2606,5.338,2607,3.968,2608,5.338,2609,3.968,2610,3.968,2611,5.338,2612,3.968,2613,5.338,2614,3.968,2615,3.968,2616,5.338,2617,3.968,2618,3.968,2619,3.968,2620,3.968,2621,3.968,2622,3.968,2623,3.968]],["title/classes/Table.html",[88,0.053,245,0.439]],["body/classes/Table.html",[3,0.159,4,0.159,9,0.159,25,0.185,26,0.394,40,0.341,48,0.018,50,0.264,52,0.323,60,1.793,77,4.045,88,0.075,109,0.359,120,0.185,191,0.79,195,0.662,209,0.857,245,0.927,247,1.157,255,0.704,259,0.012,260,0.014,261,0.012,281,1.215,412,1.919,879,3.886,892,1.925,1028,3.804,1044,2.353,1324,4.136,1452,4.481,1990,5.516,2025,4.833,2027,5.299,2046,5.491,2624,4.506,2625,7.151,2626,6.87,2627,5.923,2628,5.227,2629,5.227,2630,6.369,2631,5.227,2632,5.227,2633,6.369,2634,5.227,2635,5.227]],["title/injectables/TableService.html",[528,1.451,1298,1.053]],["body/injectables/TableService.html",[2,0.618,3,0.093,4,0.093,9,0.093,25,0.109,26,0.276,27,1.598,30,0.463,31,1.728,36,0.58,40,0.341,47,0.664,48,0.018,49,0.505,50,0.268,51,0.664,52,0.379,54,3.928,77,3.612,78,0.772,79,0.757,85,1.471,86,1.855,88,0.091,90,2.683,96,1.627,106,1.2,107,1.092,109,0.372,110,0.261,117,0.825,120,0.109,121,0.76,122,1.033,128,0.902,136,1.616,195,0.546,237,0.618,245,0.93,253,1.146,255,0.637,259,0.007,260,0.01,261,0.007,281,1.188,296,1.029,297,1.937,330,3.135,358,1.814,367,1.734,370,3.093,377,1.456,378,1.082,379,1.311,381,1.455,425,1.814,453,1.696,454,1.855,455,1.971,460,2.297,463,2.184,472,2.236,486,1.538,528,1.728,552,1.456,566,1.852,713,1.38,756,1.38,892,1.551,895,2.116,896,2.736,903,2.236,905,2.52,921,3.135,922,3.841,931,3.742,1010,3.693,1027,2.736,1028,2.37,1085,3.437,1105,2.692,1298,1.254,1299,1.38,1301,3.693,1302,4.049,1309,3.437,1310,1.456,1311,3.129,1313,2.692,1314,2.692,1327,3.482,1329,2.906,1330,3.742,1335,3.135,1336,2.365,1339,2.792,1340,1.456,1341,2.365,1349,3.255,1350,3.841,1466,4.049,1467,4.049,1641,4.049,1789,3.841,1792,2.893,1793,3.408,1795,3.408,1799,2.893,1800,3.135,1801,3.135,1862,3.841,2001,4.968,2004,2.893,2215,3.841,2237,3.437,2238,3.841,2252,2.643,2527,4.525,2538,3.841,2636,2.643,2637,5.249,2638,5.249,2639,5.249,2640,5.249,2641,5.762,2642,4.456,2643,5.762,2644,5.762,2645,5.762,2646,4.456,2647,3.066,2648,4.456,2649,3.066,2650,3.066,2651,4.456,2652,3.066,2653,3.066,2654,4.456,2655,3.066,2656,3.066,2657,3.066,2658,3.066,2659,4.456,2660,3.066,2661,4.456,2662,3.066,2663,3.066,2664,3.066,2665,3.066,2666,4.456,2667,3.066,2668,4.456,2669,3.066,2670,3.066,2671,3.066,2672,4.456,2673,2.643,2674,3.066,2675,3.066,2676,3.066,2677,3.066,2678,3.066,2679,3.066,2680,3.066,2681,3.066,2682,3.066,2683,3.066,2684,4.456,2685,3.066,2686,3.066,2687,3.066,2688,3.066,2689,3.066,2690,4.456,2691,3.066,2692,3.066,2693,3.066,2694,3.066,2695,3.066,2696,4.456,2697,3.066,2698,3.066]],["title/components/TablesListDisplayComponent.html",[0,0.053,252,0.547]],["body/components/TablesListDisplayComponent.html",[0,0.096,1,0.394,2,0.584,3,0.086,4,0.086,5,0.507,6,0.507,7,0.507,8,0.507,9,0.086,14,0.788,15,0.985,16,0.507,17,1.376,18,1.227,19,1.041,20,0.333,21,0.752,23,0.752,25,0.101,26,0.261,27,1.031,29,0.437,30,0.438,33,1.089,36,0.466,40,0.326,47,0.522,48,0.018,49,0.469,50,0.243,51,0.522,52,0.344,55,2.384,64,1.495,73,2.001,75,2.736,77,3.143,78,0.522,79,0.779,82,1.082,85,1.141,88,0.041,94,2.459,96,1.25,100,0.696,106,1.163,107,1.148,109,0.363,110,0.242,114,0.415,120,0.101,121,0.737,129,2.054,132,1.357,133,2.332,136,1.546,148,1.811,156,2.193,158,1.24,159,1.511,162,1.156,164,1.511,165,1.897,166,1.279,167,1.715,168,1.349,169,2.384,170,2.301,171,1.279,172,1.845,175,2.192,176,1.6,177,1.182,182,0.46,183,0.752,184,0.752,185,0.507,186,0.991,187,0.507,188,0.507,189,1.204,190,0.415,191,0.687,192,0.394,193,0.507,194,0.415,195,0.714,196,0.415,197,0.46,198,0.507,199,0.415,200,0.507,201,0.415,202,0.507,203,0.415,204,0.507,205,0.507,206,0.415,207,0.353,208,0.394,209,0.314,210,0.507,211,0.415,212,0.507,213,0.507,214,0.394,215,0.46,216,0.752,217,0.415,218,0.394,219,0.46,220,0.752,221,0.437,222,0.483,223,0.394,224,0.373,225,0.507,226,0.394,227,0.415,228,0.46,229,0.896,230,0.415,231,0.507,232,0.415,233,0.507,234,0.394,235,0.752,236,0.415,237,0.394,238,0.415,239,0.507,240,0.394,241,0.483,242,0.507,243,0.415,244,0.507,245,0.881,246,0.415,247,0.96,248,0.415,249,0.46,250,0.415,251,0.507,252,0.812,253,1.239,254,0.394,255,0.73,256,0.259,257,0.507,258,0.507,259,0.006,260,0.009,261,0.006,281,1.008,283,1.803,296,1.296,323,2.841,324,3.035,326,2.546,342,1.558,349,2.964,377,1.349,378,1.003,379,0.836,381,1.219,412,1.085,444,3.261,446,2.976,453,1.24,465,3.608,466,2.241,470,1.715,481,2.736,486,1.426,489,3.586,490,2.736,518,2.194,519,2.538,520,2.818,521,2.818,522,1.803,527,3.533,528,2.663,552,1.349,553,1.279,556,3.633,566,3.993,620,2.001,681,2.241,836,1.607,837,1.607,843,5.547,879,1.607,882,2.546,885,3.357,893,4.15,912,2.546,913,3.818,916,3.756,963,2.45,976,1.607,1027,1.349,1028,2.955,1029,1.845,1030,1.717,1031,1.717,1032,1.999,1033,1.999,1329,2.001,1339,2.671,1480,3.633,1481,2.964,1488,4.285,1489,1.845,1490,3.25,1491,2.736,1493,5.207,1494,1.999,1506,1.999,1507,2.192,1768,2.736,1856,3.633,1890,1.999,1892,3.874,1893,3.25,1914,2.192,1929,2.964,1972,2.192,1974,3.633,1977,4.285,1988,3.25,2003,2.45,2008,3.633,2052,4.285,2081,3.25,2183,3.874,2316,3.633,2317,3.633,2323,4.33,2324,5.116,2327,3.25,2329,4.577,2346,3.633,2348,3.25,2349,3.633,2353,2.45,2356,3.633,2357,3.633,2359,3.633,2360,3.633,2361,3.633,2364,2.45,2365,2.45,2374,3.633,2375,3.633,2376,3.633,2378,3.633,2379,3.633,2543,4.33,2627,2.45,2673,2.45,2699,6.2,2700,4.214,2701,5.023,2702,4.214,2703,2.841,2704,4.214,2705,4.214,2706,4.79,2707,4.214,2708,2.841,2709,2.841,2710,2.841,2711,4.214,2712,4.214,2713,2.841,2714,4.214,2715,4.214,2716,2.841,2717,2.841,2718,2.841,2719,2.841,2720,2.841,2721,4.214,2722,2.841,2723,2.841,2724,2.841,2725,2.841,2726,4.214,2727,4.214,2728,2.841,2729,2.841,2730,2.841,2731,2.45,2732,2.841,2733,2.841,2734,2.841,2735,2.841,2736,4.214,2737,2.841,2738,2.841,2739,2.841,2740,2.841]],["title/components/WaiterMenuComponent.html",[0,0.053,254,0.519]],["body/components/WaiterMenuComponent.html",[0,0.097,1,0.411,2,0.602,3,0.09,4,0.09,5,0.775,6,0.529,7,0.529,8,0.529,9,0.09,14,0.813,15,1.009,16,0.529,17,1.381,18,1.232,19,1.104,20,0.348,21,0.775,23,0.775,25,0.154,26,0.269,27,1.057,28,1.708,29,0.456,30,0.452,31,1.685,33,1.112,36,0.48,39,2.719,40,0.317,44,3.747,47,0.452,48,0.018,49,0.449,50,0.223,51,0.452,52,0.319,58,1.769,75,1.924,78,0.656,79,0.878,82,0.837,88,0.042,94,1.534,96,1.505,100,0.411,109,0.412,110,0.252,111,0.763,114,0.433,115,1.334,116,2.064,119,2.181,120,0.105,121,0.831,128,1.669,129,1.607,130,1.223,132,0.954,133,2.448,134,1.334,135,1.924,136,1.338,148,1.835,152,2.064,153,1.791,154,1.924,155,2.312,156,2.227,157,1.676,158,0.872,159,1.576,160,1.924,161,1.996,162,1.206,166,2.318,167,1.769,170,2.528,173,1.791,174,3.167,176,1.119,177,0.698,182,0.479,183,0.775,184,0.775,185,0.529,186,1.011,187,0.529,188,0.529,189,1.217,190,0.635,191,0.698,192,0.411,193,0.529,194,0.433,195,0.731,196,0.433,197,0.479,198,0.529,199,0.433,200,0.529,201,0.433,202,0.529,203,0.433,204,0.529,205,0.529,206,0.433,207,0.368,208,0.411,209,0.569,210,0.529,211,0.433,212,0.529,213,0.529,214,0.411,215,0.479,216,0.775,217,0.433,218,0.411,219,0.479,220,0.775,221,0.456,222,0.504,223,0.411,224,0.389,225,0.529,226,0.411,227,0.433,228,0.833,229,0.918,230,0.433,231,0.529,232,0.433,233,0.529,234,0.411,235,0.775,236,0.433,237,0.713,238,0.433,239,0.529,240,0.411,241,0.504,242,0.529,243,0.635,244,0.775,245,0.825,246,0.433,247,0.479,248,0.433,249,0.479,250,0.433,251,0.918,252,0.433,253,0.833,254,0.786,255,0.832,256,0.689,257,0.529,258,0.529,259,0.007,260,0.01,261,0.007,297,0.834,303,2.095,306,3.978,321,3.621,322,3.343,323,3.924,324,4.192,325,3.353,326,2.627,373,1.268,378,1.046,379,0.872,381,1.296,389,1.685,412,0.763,451,3.783,463,1.449,470,2.308,472,2.846,486,1.487,487,2.085,517,2.085,518,1.096,519,1.268,520,1.407,521,1.407,522,1.859,523,1.685,527,2.085,528,2.593,552,1.407,553,1.334,705,2.181,723,1.206,757,4.947,821,1.924,887,3.176,888,3.176,892,1.699,903,2.181,929,3.353,943,1.676,945,1.676,962,2.286,983,2.822,1056,3.621,1069,3.356,1071,3.468,1072,3.682,1076,2.459,1107,3.343,1137,3.058,1143,1.791,1159,2.085,1160,2.085,1161,2.085,1226,2.286,1240,1.791,1266,2.085,1280,1.676,1288,2.085,1293,1.924,1324,2.822,1349,1.576,1374,4.373,1469,2.085,1470,3.97,1471,3.353,1473,4.373,1475,2.555,1478,2.085,1481,2.085,1484,2.085,1485,2.286,1487,2.286,1488,3.97,1489,1.924,1490,3.353,1491,1.924,1492,2.555,1493,5.264,1494,2.085,1495,3.747,1496,2.555,1497,3.747,1498,2.555,1499,2.555,1500,2.555,1501,2.555,1502,2.555,1504,2.555,1505,3.621,1506,2.085,1507,2.286,1508,2.555,1509,2.555,1510,2.555,1511,2.555,1512,3.058,1513,2.085,1514,2.555,1536,3.353,1685,4.373,1686,4.888,1695,2.555,1696,2.555,1697,2.555,1698,2.555,1699,2.555,1700,2.555,1701,2.555,1702,2.555,1703,2.555,1898,3.747,1909,3.747,1959,2.555,2004,2.822,2354,3.747,2380,2.555,2381,2.555,2706,3.747,2731,2.555,2741,4.347,2742,4.347,2743,4.347,2744,4.347,2745,2.963,2746,2.963,2747,4.347,2748,4.347,2749,2.963,2750,2.963,2751,2.963,2752,2.963,2753,5.67,2754,4.347,2755,2.963,2756,2.963,2757,2.963,2758,4.347,2759,4.347,2760,2.963,2761,4.347,2762,2.963,2763,2.963]],["title/coverage.html",[2764,4.423]],["body/coverage.html",[0,0.113,1,0.568,9,0.125,10,3.958,11,2.993,12,2.881,13,3.531,20,0.719,38,2.659,48,0.018,50,0.145,82,0.99,88,0.106,96,0.921,114,0.598,115,2.76,134,1.844,190,0.598,191,0.453,192,0.568,194,0.598,195,0.637,196,0.598,199,0.598,201,0.598,203,0.598,206,0.598,208,0.568,209,0.453,211,0.598,214,0.568,217,0.598,218,0.568,221,0.63,223,0.568,224,0.538,226,0.568,227,0.598,230,0.598,232,0.598,234,0.568,236,0.598,238,0.598,240,0.568,243,0.598,245,0.821,246,0.598,248,0.598,250,0.598,252,0.598,254,0.568,256,0.559,259,0.009,260,0.012,261,0.009,262,3.487,306,3.958,312,2.317,319,2.475,328,1.945,362,3.159,389,2.713,439,2.881,440,3.531,451,2.317,488,2.881,528,1.588,567,3.64,568,3.159,569,3.159,570,3.531,705,3.722,712,3.531,724,3.159,757,2.881,759,2.881,760,3.54,762,2.881,794,3.159,795,3.159,810,3.159,811,3.159,816,3.159,817,2.881,818,2.881,819,2.659,820,2.881,821,2.659,822,3.159,823,3.159,828,2.881,832,3.159,834,2.881,838,3.159,839,2.881,841,3.159,843,3.159,851,2.881,852,3.159,853,2.881,854,3.159,859,3.159,871,3.531,886,2.659,887,1.945,888,1.945,891,1.945,994,3.531,1037,3.531,1045,3.531,1051,3.531,1069,2.055,1070,2.881,1277,4.597,1298,2.087,1300,3.531,1351,3.531,1369,4.205,1370,4.205,1407,3.531,1413,3.531,1437,4.205,1442,2.881,1443,4.205,1444,3.531,1468,3.531,1469,4.311,1515,3.531,1574,3.531,1589,3.531,1597,3.531,1655,3.531,1707,3.531,1713,3.531,1736,3.531,1770,3.531,1774,4.205,1775,3.531,1807,3.531,1824,3.531,1890,4.311,1973,3.531,2019,3.531,2048,3.531,2181,3.531,2284,3.531,2315,3.531,2352,5.866,2391,3.531,2532,3.531,2574,3.531,2590,3.531,2624,3.531,2636,3.531,2699,3.531,2764,3.531,2765,4.095,2766,4.095,2767,4.095,2768,4.095,2769,6.129,2770,6.129,2771,4.095,2772,4.095,2773,5.452,2774,5.452,2775,6.997,2776,6.129,2777,4.095,2778,4.095,2779,6.129,2780,5.452,2781,6.534,2782,6.534,2783,6.129,2784,5.452,2785,6.129,2786,5.452,2787,5.452,2788,6.129,2789,5.452,2790,4.095,2791,4.095,2792,4.095,2793,4.095,2794,4.095,2795,5.452,2796,5.452,2797,4.095,2798,4.095,2799,4.095,2800,4.095,2801,4.095,2802,4.095,2803,3.531,2804,4.095,2805,4.095,2806,4.095,2807,4.095,2808,4.095,2809,4.095,2810,3.531,2811,4.7,2812,6.534,2813,3.531,2814,4.095,2815,5.452,2816,4.095,2817,4.095,2818,4.095,2819,4.095,2820,4.095,2821,4.095,2822,3.531,2823,4.7,2824,3.531,2825,3.531,2826,4.095]],["title/dependencies.html",[735,3.171,2827,3.115]],["body/dependencies.html",[48,0.018,110,0.489,259,0.013,260,0.015,261,0.013,379,1.692,668,4.044,681,3.057,723,2.34,735,4.044,737,4.434,750,5.813,751,5.2,786,4.434,805,4.434,806,4.434,1140,4.956,2828,5.748,2829,5.748,2830,5.748,2831,7.692,2832,5.748,2833,5.748,2834,5.748,2835,5.748,2836,5.748,2837,5.748,2838,5.748,2839,5.748,2840,5.748,2841,5.748,2842,5.748,2843,5.813,2844,5.748,2845,5.813,2846,5.748,2847,5.748,2848,5.748,2849,5.748,2850,5.748,2851,5.748,2852,5.748,2853,5.748]],["title/index.html",[25,0.11,2854,3.115,2855,3.115]],["body/index.html",[3,0.174,4,0.174,18,0.927,48,0.015,56,5.026,66,4.419,259,0.013,260,0.015,261,0.013,331,3.72,721,5.801,805,5.19,1077,4.419,1103,4.939,1636,4.939,2505,4.939,2843,6.356,2845,6.628,2856,5.729,2857,5.729,2858,5.729,2859,5.729,2860,5.729,2861,5.729,2862,6.729,2863,7.516,2864,5.729,2865,5.729,2866,5.729,2867,5.729,2868,5.729,2869,5.729,2870,7.145,2871,5.729,2872,5.729,2873,5.729,2874,7.145,2875,7.145,2876,5.729,2877,5.729,2878,5.729,2879,5.729,2880,5.729,2881,5.729,2882,5.729,2883,5.729,2884,6.729,2885,6.729,2886,5.729,2887,5.729,2888,5.729]],["title/modules.html",[734,3.331]],["body/modules.html",[48,0.016,259,0.014,260,0.016,261,0.014,551,3.718,733,4.329,734,3.995,744,3.995,751,4.746,2889,6.153,2890,6.153,2891,7.013,2892,6.153]],["title/overview.html",[2893,4.423]],["body/overview.html",[1,0.928,2,0.684,48,0.018,114,0.978,182,0.798,190,0.978,192,0.928,194,0.978,196,0.978,199,1.09,201,0.978,203,0.978,206,0.978,208,0.928,211,0.978,214,0.928,217,0.978,218,0.928,223,0.928,226,0.928,227,0.978,230,0.978,232,0.978,234,0.928,236,0.978,238,0.978,240,0.928,243,0.978,246,0.978,248,0.978,250,0.978,252,0.978,254,0.928,259,0.011,260,0.014,261,0.011,588,3.807,732,3.473,733,5.678,734,3.205,735,3.473,736,4.256,737,3.807,738,3.807,739,3.807,740,4.256,741,4.256,742,4.256,743,4.256,744,4.349,745,5.301,746,4.256,857,2.792,1044,2.223,1250,3.473,1299,2.223,2893,4.256,2894,4.936,2895,6.149,2896,4.936]],["title/routes.html",[857,2.902]],["body/routes.html",[48,0.016,259,0.014,260,0.016,261,0.014,857,3.518]],["title/classes/selectedCategory.html",[88,0.053,312,2.117]],["body/classes/selectedCategory.html",[3,0.178,4,0.178,9,0.178,25,0.207,26,0.422,40,0.311,48,0.018,49,0.598,50,0.241,88,0.084,109,0.33,120,0.207,207,0.922,256,0.698,259,0.013,260,0.015,261,0.013,296,1.336,312,3.856,891,3.424,1044,2.638,1091,3.626,2822,5.05,2897,5.857,2898,5.857]],["title/miscellaneous/variables.html",[2899,2.685,2900,3.886]],["body/miscellaneous/variables.html",[25,0.198,48,0.018,50,0.259,60,1.867,64,1.506,106,1.434,107,1.305,119,2.808,133,1.974,136,1.722,152,2.657,161,2.169,166,2.519,259,0.012,260,0.015,261,0.012,270,3.633,342,2.453,352,4.315,389,2.743,705,2.808,724,5.118,1137,3.936,1138,4.823,1147,5.721,1148,5.118,1151,4.315,1152,4.668,1158,4.823,1280,3.165,1288,3.936,1610,4.315,2803,4.823,2810,4.823,2811,6.307,2813,4.823,2823,4.823,2824,5.721,2825,5.721,2899,4.823,2900,4.823,2901,6.635,2902,5.595,2903,5.595,2904,5.595,2905,5.595,2906,5.595,2907,6.635,2908,5.595,2909,5.595,2910,5.595,2911,5.595,2912,5.595,2913,5.595,2914,5.595,2915,5.595,2916,5.595]]],"invertedIndex":[["",{"_index":48,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/selectedCategory.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":389,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0,1",{"_index":1545,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["0.02",{"_index":1668,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["0.04",{"_index":1664,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["0.10.3",{"_index":2853,"title":{},"body":{"dependencies.html":{}}}],["0.14",{"_index":1392,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["0.16.3",{"_index":2846,"title":{},"body":{"dependencies.html":{}}}],["0.18",{"_index":1675,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["0.2s",{"_index":1260,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["0.3",{"_index":1157,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["0.6",{"_index":420,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["0.8",{"_index":1681,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["0/1",{"_index":2812,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2768,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2799,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":149,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/ManagerMenuComponent.html":{}}}],["0c9",{"_index":1292,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["0e0b00",{"_index":1239,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["0px",{"_index":1389,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["1",{"_index":161,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderComponent.html":{},"components/PaymentComponent.html":{},"components/WaiterMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["1,1.10,1",{"_index":1556,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1.0.31",{"_index":2849,"title":{},"body":{"dependencies.html":{}}}],["1.125rem",{"_index":1577,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1.5",{"_index":1547,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1.5em",{"_index":1388,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["1.7.1",{"_index":2847,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2804,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2895,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":2844,"title":{},"body":{"dependencies.html":{}}}],["10.0.14",{"_index":2828,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":2861,"title":{},"body":{"index.html":{}}}],["10.0.3",{"_index":2831,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":2809,"title":{},"body":{"coverage.html":{}}}],["10/14",{"_index":2805,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":705,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/OrderComponent.html":{},"components/PaymentComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":482,"title":{},"body":{"components/AddStaffComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["1000).pipe(tap",{"_index":2715,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["100px",{"_index":169,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderTrackerComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["100vh",{"_index":1279,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["10px",{"_index":984,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/PaymentComponent.html":{}}}],["11",{"_index":2896,"title":{},"body":{"overview.html":{}}}],["11.1.0",{"_index":2830,"title":{},"body":{"dependencies.html":{}}}],["11.2.1",{"_index":2834,"title":{},"body":{"dependencies.html":{}}}],["11px",{"_index":1390,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["126",{"_index":1663,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["12px",{"_index":1272,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/NotificationsComponent.html":{}}}],["13",{"_index":1225,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["13/13",{"_index":2819,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":2774,"title":{},"body":{"coverage.html":{}}}],["13/17",{"_index":2792,"title":{},"body":{"coverage.html":{}}}],["13/18",{"_index":2798,"title":{},"body":{"coverage.html":{}}}],["13px",{"_index":1236,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["14px",{"_index":1659,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["15/17",{"_index":2800,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":1257,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["15px",{"_index":990,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{}}}],["16",{"_index":1406,"title":{},"body":{"components/HomePageComponent.html":{}}}],["16/17",{"_index":2807,"title":{},"body":{"coverage.html":{}}}],["16/18",{"_index":2806,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":2513,"title":{},"body":{"components/PaymentComponent.html":{}}}],["18/19",{"_index":2784,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":2477,"title":{},"body":{"components/PaymentComponent.html":{}}}],["1px",{"_index":1035,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/LoginInputComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["1rem",{"_index":1502,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["1s",{"_index":2121,"title":{},"body":{"components/OrderComponent.html":{}}}],["2",{"_index":1250,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"overview.html":{}}}],["2.0.0",{"_index":2851,"title":{},"body":{"dependencies.html":{}}}],["2.4em",{"_index":1569,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["2.9.0",{"_index":2837,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":2780,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2794,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1398,"title":{},"body":{"components/HomePageComponent.html":{}}}],["20/21",{"_index":2778,"title":{},"body":{"coverage.html":{}}}],["20/23",{"_index":2772,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":1551,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["20px",{"_index":706,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["23/26",{"_index":2808,"title":{},"body":{"coverage.html":{}}}],["24/25",{"_index":2802,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1550,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["250px",{"_index":1282,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["255",{"_index":1367,"title":{},"body":{"components/ExpansionPannelComponent.html":{}}}],["25px",{"_index":178,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{}}}],["26/26",{"_index":2817,"title":{},"body":{"coverage.html":{}}}],["264653",{"_index":1231,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{}}}],["27px",{"_index":1670,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["280px",{"_index":2763,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["2px",{"_index":1294,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["3",{"_index":2497,"title":{},"body":{"components/PaymentComponent.html":{}}}],["3.2.1",{"_index":2839,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":1583,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["3.6.0",{"_index":2842,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2818,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2791,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":2349,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["3000",{"_index":1031,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["300px",{"_index":1235,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["30px",{"_index":976,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderTrackerComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["31",{"_index":2894,"title":{},"body":{"overview.html":{}}}],["320px",{"_index":1677,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["35",{"_index":1405,"title":{},"body":{"components/HomePageComponent.html":{}}}],["350px",{"_index":1683,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["35px",{"_index":155,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["378d78",{"_index":708,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["388572",{"_index":989,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["390px",{"_index":524,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["3b0d0d",{"_index":1560,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["3px",{"_index":1232,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["3vw",{"_index":1255,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["4.6.0",{"_index":2840,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2814,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2787,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1574,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["400px",{"_index":1385,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["40px",{"_index":1291,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{}}}],["410px",{"_index":1503,"title":{},"body":{"components/KitchenMenuComponent.html":{}}}],["440px",{"_index":1386,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["46px",{"_index":1669,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["4em",{"_index":172,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["4f7b86",{"_index":1571,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["5",{"_index":1155,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/PaymentComponent.html":{}}}],["5/5",{"_index":2815,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2796,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":2789,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":134,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["500",{"_index":1554,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["5000",{"_index":1557,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["50px",{"_index":522,"title":{},"body":{"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["55",{"_index":1394,"title":{},"body":{"components/HomePageComponent.html":{}}}],["56",{"_index":1657,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["565656",{"_index":1247,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["5em",{"_index":710,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["5px",{"_index":1240,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["6.5.5",{"_index":2848,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":2793,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2770,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":362,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"coverage.html":{}}}],["60px",{"_index":1297,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["66",{"_index":2779,"title":{},"body":{"coverage.html":{}}}],["6vw",{"_index":1286,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["7",{"_index":2479,"title":{},"body":{"components/PaymentComponent.html":{}}}],["7/7",{"_index":2821,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2782,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1658,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["70px",{"_index":1254,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["71",{"_index":2788,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":2797,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":1494,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["76",{"_index":1655,"title":{},"body":{"components/LoginInputComponent.html":{},"coverage.html":{}}}],["768px",{"_index":1581,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["76cfb9",{"_index":159,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["7em",{"_index":1387,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["7px",{"_index":1259,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["7vw",{"_index":1252,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["8/12",{"_index":2790,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":2816,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2776,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2786,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":1290,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["83",{"_index":2795,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2769,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":2771,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":2781,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2775,"title":{},"body":{"coverage.html":{}}}],["8c55aa",{"_index":1395,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["9/10",{"_index":2785,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":2820,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1277,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"coverage.html":{}}}],["900",{"_index":1251,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["92",{"_index":2773,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":2783,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":2777,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":2801,"title":{},"body":{"coverage.html":{}}}],["99",{"_index":2170,"title":{},"body":{"components/OrderComponent.html":{}}}],["999",{"_index":1295,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["9px",{"_index":1265,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["_filter",{"_index":582,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["_filter(value",{"_index":593,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["_formbuilder",{"_index":2410,"title":{},"body":{"components/PaymentComponent.html":{}}}],["_orderedmealitems",{"_index":2146,"title":{},"body":{"components/OrderComponent.html":{}}}],["_orderedmealitems.foreach((meal",{"_index":2149,"title":{},"body":{"components/OrderComponent.html":{}}}],["_orderedmealitems.push(meal",{"_index":2158,"title":{},"body":{"components/OrderComponent.html":{}}}],["_orders",{"_index":2252,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TableService.html":{}}}],["_orders.foreach((whichorder",{"_index":2264,"title":{},"body":{"injectables/OrderService.html":{}}}],["_orders.foreach((whichtable",{"_index":2679,"title":{},"body":{"injectables/TableService.html":{}}}],["_orders.push(order",{"_index":2253,"title":{},"body":{"injectables/OrderService.html":{}}}],["_refreshneeded",{"_index":1301,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuFilterService.html":{},"injectables/OrderService.html":{},"injectables/TableService.html":{}}}],["ability",{"_index":101,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["absolute",{"_index":1288,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["accesing",{"_index":2297,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["access",{"_index":2747,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["accessed",{"_index":544,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"injectables/StaffService.html":{}}}],["accessors",{"_index":1309,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuFilterService.html":{},"injectables/TableService.html":{}}}],["according",{"_index":57,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["accordingly",{"_index":1016,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{}}}],["action",{"_index":913,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["actions",{"_index":1248,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{}}}],["activate",{"_index":2415,"title":{},"body":{"components/PaymentComponent.html":{}}}],["activated",{"_index":1076,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LoginInputComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["activatedroute",{"_index":1072,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["acts",{"_index":2712,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["actual_component",{"_index":258,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["add",{"_index":19,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["add(event",{"_index":606,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["add(meal",{"_index":898,"title":{},"body":{"components/BasketComponent.html":{}}}],["add/edit",{"_index":515,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["addbutton",{"_index":181,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{}}}],["added",{"_index":288,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"injectables/MenuCategoryService.html":{},"components/OrderComponent.html":{}}}],["adding",{"_index":46,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{}}}],["addingredientcomponent",{"_index":1,"title":{"components/AddIngredientComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addingredientdialogcomponent",{"_index":114,"title":{"components/AddIngredientDialogComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addingredients",{"_index":1830,"title":{},"body":{"injectables/MenuService.html":{}}}],["addingredients(id",{"_index":1838,"title":{},"body":{"injectables/MenuService.html":{}}}],["addmeal",{"_index":1058,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["addmeal(menuitem",{"_index":1078,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["addmenudialogcomponent",{"_index":190,"title":{"components/AddMenuDialogComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addmenutoorder",{"_index":2059,"title":{},"body":{"components/OrderComponent.html":{}}}],["addmenutoorder(menu",{"_index":2073,"title":{},"body":{"components/OrderComponent.html":{}}}],["addorder",{"_index":1508,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["address",{"_index":2581,"title":{},"body":{"classes/Staff.html":{}}}],["adds",{"_index":609,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["addstaffcomponent",{"_index":192,"title":{"components/AddStaffComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addstaffdialogcomponent",{"_index":194,"title":{"components/AddStaffDialogComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adialog",{"_index":1039,"title":{},"body":{"components/CategoryDialogComponent.html":{}}}],["afterviewinit",{"_index":1352,"title":{},"body":{"components/ExpansionPannelComponent.html":{},"components/LandingPageComponent.html":{}}}],["again",{"_index":1649,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["against",{"_index":1451,"title":{},"body":{"injectables/InputService.html":{}}}],["align",{"_index":987,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["allallergens",{"_index":574,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["allergen",{"_index":604,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{}}}],["allergen.tolowercase().indexof(filtervalue",{"_index":694,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["allergeninput",{"_index":575,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["allergens",{"_index":197,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Menu.html":{},"injectables/MenuFilterService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["allergensarray",{"_index":1059,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergensarray(item",{"_index":1083,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergenschipscomponent",{"_index":196,"title":{"components/AllergensChipsComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["allergensctrl",{"_index":576,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["allergies",{"_index":1092,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray",{"_index":1181,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"celery",{"_index":1185,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"crustaceans",{"_index":1189,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"eggs",{"_index":1191,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"fish",{"_index":1193,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"gluten",{"_index":1187,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"lupin",{"_index":1195,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"milk",{"_index":1197,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"molluscs",{"_index":1199,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"mustard",{"_index":1201,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"nuts",{"_index":1203,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"peanuts",{"_index":1183,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"sesame",{"_index":1207,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"soya",{"_index":1205,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allergyarray.push(\"sulphites",{"_index":1209,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["allows",{"_index":307,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["alphabetical",{"_index":602,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["alphabetically",{"_index":654,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["alreaady",{"_index":1531,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["already",{"_index":1081,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/PaymentComponent.html":{}}}],["alreadyordered",{"_index":2148,"title":{},"body":{"components/OrderComponent.html":{}}}],["anchor",{"_index":1578,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["angular",{"_index":2858,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1140,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":2829,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/keycodes",{"_index":666,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["angular/cdk/stepper",{"_index":2456,"title":{},"body":{"components/PaymentComponent.html":{}}}],["angular/common",{"_index":786,"title":{},"body":{"modules/AppModule.html":{},"components/PaymentComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":756,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["angular/compiler",{"_index":2832,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":110,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":668,"title":{},"body":{"components/AllergensChipsComponent.html":{},"modules/AppModule.html":{},"components/PaymentComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2833,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":669,"title":{},"body":{"components/AllergensChipsComponent.html":{},"modules/AppModule.html":{}}}],["angular/material/badge",{"_index":815,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":776,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":774,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":808,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/chips",{"_index":670,"title":{},"body":{"components/AllergensChipsComponent.html":{},"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":111,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["angular/material/divider",{"_index":780,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/expansion",{"_index":792,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":768,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":778,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":784,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":803,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":782,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":845,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/radio",{"_index":848,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":770,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":790,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":830,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slider",{"_index":374,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":836,"title":{},"body":{"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["angular/material/stepper",{"_index":826,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":801,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/toolbar",{"_index":788,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":750,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":723,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":1134,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["animate('.5s",{"_index":1150,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["animate('600ms",{"_index":2912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animates",{"_index":2915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animations",{"_index":726,"title":{},"body":{"components/AppComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["anime",{"_index":1141,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["anime.timeline({loop",{"_index":1543,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["anime.timeline({loop:true",{"_index":1555,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["animejs",{"_index":2838,"title":{},"body":{"dependencies.html":{}}}],["animejs/lib/anime.es",{"_index":1535,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["animejs/lib/anime.es.js",{"_index":1142,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["annd",{"_index":1525,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["anyone",{"_index":2633,"title":{},"body":{"classes/Table.html":{}}}],["anything",{"_index":353,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["api",{"_index":620,"title":{},"body":{"components/AllergensChipsComponent.html":{},"injectables/IngredientService.html":{},"injectables/MealService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"injectables/StaffService.html":{},"components/TablesListDisplayComponent.html":{}}}],["aplhabetical",{"_index":605,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"index.html":{}}}],["app.component",{"_index":754,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":715,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.sass",{"_index":714,"title":{},"body":{"components/AppComponent.html":{}}}],["app_routes",{"_index":860,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcomponent",{"_index":199,"title":{"components/AppComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":733,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":744,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["args",{"_index":1814,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["arguments",{"_index":1095,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"injectables/MenuFilterService.html":{}}}],["array",{"_index":1085,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"injectables/MenuService.html":{},"injectables/TableService.html":{}}}],["asserts",{"_index":546,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"classes/Menu.html":{},"components/PaymentComponent.html":{}}}],["assign",{"_index":339,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"injectables/OrderService.html":{}}}],["assigned",{"_index":931,"title":{},"body":{"components/BasketComponent.html":{},"classes/Customer.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"injectables/TableService.html":{}}}],["assigns",{"_index":922,"title":{},"body":{"components/BasketComponent.html":{},"injectables/TableService.html":{}}}],["assigntable",{"_index":2640,"title":{},"body":{"injectables/TableService.html":{}}}],["assigntable(table",{"_index":2648,"title":{},"body":{"injectables/TableService.html":{}}}],["assings",{"_index":2561,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["assistance",{"_index":1975,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["associated",{"_index":1049,"title":{},"body":{"classes/Customer.html":{},"classes/Meal.html":{},"classes/Menu.html":{},"components/MenusListDisplayComponent.html":{}}}],["async",{"_index":653,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{}}}],["attach_money",{"_index":973,"title":{},"body":{"components/BasketComponent.html":{}}}],["attachment",{"_index":1230,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["auto",{"_index":167,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/PaymentComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["autofocus",{"_index":135,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["automatically",{"_index":2867,"title":{},"body":{"index.html":{}}}],["available",{"_index":551,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/KitchenMenuComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"modules.html":{}}}],["awaiting",{"_index":2386,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["b9a239",{"_index":979,"title":{},"body":{"components/BasketComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{}}}],["back",{"_index":334,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/LoginInputComponent.html":{},"components/OrderComponent.html":{},"components/PaymentComponent.html":{}}}],["back&nbsp;&nbsp",{"_index":2509,"title":{},"body":{"components/PaymentComponent.html":{}}}],["backdrop",{"_index":1262,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["backend",{"_index":2122,"title":{},"body":{"components/OrderComponent.html":{}}}],["background",{"_index":158,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["badge",{"_index":1264,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/NotificationsComponent.html":{}}}],["bar",{"_index":837,"title":{},"body":{"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["based",{"_index":371,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["basket",{"_index":872,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{}}}],["basket'},{'name",{"_index":202,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["basket.component.html",{"_index":874,"title":{},"body":{"components/BasketComponent.html":{}}}],["basket.component.sass",{"_index":873,"title":{},"body":{"components/BasketComponent.html":{}}}],["basket/basket.component",{"_index":1145,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["basketcomponent",{"_index":201,"title":{"components/BasketComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bbbbbbf2",{"_index":1261,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["bd",{"_index":1575,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["beanie",{"_index":1238,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["behaviorsubject",{"_index":367,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["behaviorsubject(new",{"_index":1862,"title":{},"body":{"injectables/MenuService.html":{},"injectables/TableService.html":{}}}],["behaviorsubject(null",{"_index":1799,"title":{},"body":{"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["behaviorsubject(this.data.menu.category",{"_index":368,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["behaviorsubject(this.data.order",{"_index":2111,"title":{},"body":{"components/OrderComponent.html":{}}}],["being",{"_index":2291,"title":{},"body":{"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["belonging",{"_index":2207,"title":{},"body":{"injectables/OrderService.html":{}}}],["belongs",{"_index":2030,"title":{},"body":{"classes/Order.html":{},"components/OrderComponent.html":{}}}],["bill",{"_index":2044,"title":{},"body":{"classes/Order.html":{},"components/OrderComponent.html":{}}}],["black",{"_index":1684,"title":{},"body":{"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["block",{"_index":164,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/PaymentComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["blur(4px",{"_index":1263,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["body",{"_index":1227,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{}}}],["bold",{"_index":180,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PickTableDialogComponent.html":{}}}],["bool",{"_index":443,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["boolean",{"_index":412,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"classes/Menu.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["bootstrap",{"_index":737,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":170,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["botbuttonrow",{"_index":1514,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["both",{"_index":1524,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["bottom",{"_index":1280,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/WaiterMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":1293,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["brown",{"_index":1496,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["browse",{"_index":2891,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":751,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":766,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":765,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":749,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1552,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["btnrow",{"_index":1565,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["btnsize",{"_index":1493,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["builder",{"_index":2413,"title":{},"body":{"components/PaymentComponent.html":{}}}],["button",{"_index":73,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AllergensChipsComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/NotificationsComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["buttonrow",{"_index":1511,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["buttons",{"_index":2341,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["c3a82e",{"_index":709,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["c67605",{"_index":1270,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["calculates",{"_index":907,"title":{},"body":{"components/BasketComponent.html":{}}}],["call",{"_index":204,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["called",{"_index":86,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/TableService.html":{}}}],["calling",{"_index":91,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/CallWaiterComponent.html":{},"injectables/MenuService.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["callories",{"_index":1093,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["calls",{"_index":614,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["callwaiter",{"_index":998,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["callwaiterbutton",{"_index":1036,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["callwaitercomponent",{"_index":203,"title":{"components/CallWaiterComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["callwaiterfloat",{"_index":1289,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["calories",{"_index":284,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"classes/Menu.html":{},"injectables/MenuFilterService.html":{}}}],["calories{{data.menu.calories",{"_index":438,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["cancel",{"_index":304,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/OrderComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["canceled",{"_index":1007,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["card",{"_index":1233,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrderComponent.html":{},"components/PaymentComponent.html":{}}}],["cardnumbercontrol",{"_index":2469,"title":{},"body":{"components/PaymentComponent.html":{}}}],["cart",{"_index":970,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{}}}],["case",{"_index":597,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["catch",{"_index":1646,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["categories",{"_index":311,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/MenuCategoryService.html":{},"components/MenusListDisplayComponent.html":{}}}],["category",{"_index":207,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"classes/selectedCategory.html":{}}}],["category.category",{"_index":426,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["category.id",{"_index":399,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["category.service",{"_index":376,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["category.service.ts",{"_index":1775,"title":{},"body":{"injectables/MenuCategoryService.html":{},"coverage.html":{}}}],["category.service.ts:19",{"_index":1798,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["category.service.ts:24",{"_index":1781,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["category.service.ts:36",{"_index":1796,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["category.service.ts:46",{"_index":1786,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["category.service.ts:56",{"_index":1788,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["category.service.ts:66",{"_index":1783,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["category.service.ts:76",{"_index":1785,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["category.service.ts:86",{"_index":1791,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["categorydialogcomponent",{"_index":206,"title":{"components/CategoryDialogComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["categoryservice",{"_index":1903,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["categorytile:hover",{"_index":1258,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["categorytitle",{"_index":1285,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["cateogry",{"_index":1773,"title":{},"body":{"classes/MenuCategory.html":{}}}],["catrow",{"_index":1256,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["catsubscription",{"_index":1894,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["cd",{"_index":2871,"title":{},"body":{"index.html":{}}}],["cedarville",{"_index":977,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{}}}],["celery",{"_index":641,"title":{},"body":{"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["center",{"_index":988,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["centre",{"_index":1682,"title":{},"body":{"components/LoginInputComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["century",{"_index":2487,"title":{},"body":{"components/PaymentComponent.html":{}}}],["certain",{"_index":372,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["change",{"_index":331,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"index.html":{}}}],["changecategory",{"_index":314,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["changecategory(category",{"_index":327,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["changed",{"_index":1864,"title":{},"body":{"injectables/MenuService.html":{},"components/OrderComponent.html":{}}}],["changed/unchanged",{"_index":333,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["changes",{"_index":55,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/CallWaiterComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["changing",{"_index":352,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"injectables/OrderService.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":340,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"classes/Staff.html":{}}}],["checkbox",{"_index":341,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["checkcardinput",{"_index":2405,"title":{},"body":{"components/PaymentComponent.html":{}}}],["checks",{"_index":2417,"title":{},"body":{"components/PaymentComponent.html":{}}}],["chinampas",{"_index":1383,"title":{},"body":{"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{}}}],["chip",{"_index":658,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips",{"_index":571,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips'},{'name",{"_index":198,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["chips.component",{"_index":797,"title":{},"body":{"modules/AppModule.html":{}}}],["chips.component.html",{"_index":573,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.sass",{"_index":572,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts",{"_index":570,"title":{},"body":{"components/AllergensChipsComponent.html":{},"coverage.html":{}}}],["chips.component.ts:108",{"_index":628,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:122",{"_index":635,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:135",{"_index":594,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:147",{"_index":616,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:165",{"_index":639,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:174",{"_index":624,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:184",{"_index":621,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:194",{"_index":613,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:201",{"_index":631,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:27",{"_index":659,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:32",{"_index":656,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:37",{"_index":662,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:42",{"_index":650,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:47",{"_index":652,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:52",{"_index":648,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:57",{"_index":644,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:62",{"_index":651,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:64",{"_index":647,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:65",{"_index":590,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:82",{"_index":622,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips.component.ts:90",{"_index":608,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["chips/allergens",{"_index":569,"title":{},"body":{"components/AllergensChipsComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["circle",{"_index":1566,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["class",{"_index":88,"title":{"classes/Customer.html":{},"classes/Ingredient.html":{},"classes/Login.html":{},"classes/Meal.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"classes/Order.html":{},"classes/Staff.html":{},"classes/Table.html":{},"classes/selectedCategory.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"classes/selectedCategory.html":{}}}],["classes",{"_index":1044,"title":{},"body":{"classes/Customer.html":{},"classes/Ingredient.html":{},"classes/Login.html":{},"classes/Meal.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"classes/Order.html":{},"classes/Staff.html":{},"classes/Table.html":{},"overview.html":{},"classes/selectedCategory.html":{}}}],["clear",{"_index":880,"title":{},"body":{"components/BasketComponent.html":{}}}],["clear(meal",{"_index":901,"title":{},"body":{"components/BasketComponent.html":{}}}],["cleared",{"_index":1088,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["clearmeal",{"_index":1060,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["clearmeal(menuitem",{"_index":1086,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["cli",{"_index":2859,"title":{},"body":{"index.html":{}}}],["click",{"_index":2014,"title":{},"body":{"components/NotificationsDialogComponent.html":{},"components/PaymentComponent.html":{}}}],["clicked",{"_index":1988,"title":{},"body":{"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["client",{"_index":1314,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"components/MenusListDisplayComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["close",{"_index":2550,"title":{},"body":{"components/SalesDialogComponent.html":{}}}],["closed",{"_index":475,"title":{},"body":{"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ManagerMenuComponent.html":{}}}],["closedialog",{"_index":315,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/CategoryDialogComponent.html":{}}}],["closedm",{"_index":1116,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["closes",{"_index":279,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/OrderComponent.html":{},"components/PickTableDialogComponent.html":{}}}],["closing",{"_index":471,"title":{},"body":{"components/AddStaffComponent.html":{},"components/ManagerMenuComponent.html":{}}}],["cluster_appmodule",{"_index":740,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":742,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":743,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":741,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":2419,"title":{},"body":{"components/PaymentComponent.html":{}}}],["codes",{"_index":664,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["color",{"_index":148,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["colour",{"_index":1360,"title":{},"body":{"components/ExpansionPannelComponent.html":{}}}],["column",{"_index":1512,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["columns",{"_index":1481,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["come",{"_index":1022,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["comma",{"_index":661,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["commonmodule",{"_index":785,"title":{},"body":{"modules/AppModule.html":{}}}],["compnents",{"_index":1527,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["component",{"_index":0,"title":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":187,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"overview.html":{}}}],["config",{"_index":1114,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["configurations",{"_index":2345,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["configure",{"_index":308,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["configures",{"_index":1112,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["confirm",{"_index":2308,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["confirmation",{"_index":2321,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["confirmdeliverbutton",{"_index":2762,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["confirmed",{"_index":2033,"title":{},"body":{"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{}}}],["connect",{"_index":1517,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log('instance",{"_index":1433,"title":{},"body":{"injectables/IngredientService.html":{}}}],["console.log(`dialog",{"_index":1380,"title":{},"body":{"components/HomePageComponent.html":{},"components/NotificationsComponent.html":{}}}],["console.log(deletedmeal",{"_index":2165,"title":{},"body":{"components/OrderComponent.html":{}}}],["console.log(ingredients",{"_index":1883,"title":{},"body":{"injectables/MenuService.html":{}}}],["console.log(menu",{"_index":1486,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/OrderComponent.html":{}}}],["console.log(order",{"_index":2135,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderService.html":{}}}],["console.log(result))).subscribe",{"_index":1540,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["console.log(this.data",{"_index":406,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["console.log(this.data.order.id",{"_index":2144,"title":{},"body":{"components/OrderComponent.html":{}}}],["console.log(this.ordersubject$.getvalue",{"_index":2160,"title":{},"body":{"components/OrderComponent.html":{}}}],["console.log(this.staff",{"_index":1635,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["const",{"_index":128,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/HomePageComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"injectables/TableService.html":{},"components/WaiterMenuComponent.html":{}}}],["construcotr",{"_index":2535,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["constructor(customerinterface",{"_index":1000,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["constructor(customerinterfacecomponent",{"_index":589,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["constructor(dialog",{"_index":1983,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["constructor(dialogref",{"_index":268,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SalesDialogComponent.html":{}}}],["constructor(elementref",{"_index":1357,"title":{},"body":{"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{}}}],["constructor(httpclient",{"_index":1310,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["constructor(ingredientservice",{"_index":37,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["constructor(input",{"_index":1602,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["constructor(menuservice",{"_index":1068,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["constructor(orderservice",{"_index":1687,"title":{},"body":{"components/ManagerMenuComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["constructor(private",{"_index":122,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"components/LandingPageComponent.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["constructor(public",{"_index":295,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SalesDialogComponent.html":{}}}],["constructor(route",{"_index":2745,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["constructor(router",{"_index":2409,"title":{},"body":{"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["constructor(snackbar",{"_index":884,"title":{},"body":{"components/BasketComponent.html":{}}}],["constructor(staffservice",{"_index":450,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["constructor(tableservice",{"_index":2003,"title":{},"body":{"components/NotificationsDialogComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["construstuctor",{"_index":2290,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["content",{"_index":1563,"title":{},"body":{"components/LandingPageComponent.html":{},"components/OrderTrackerComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["contents",{"_index":2503,"title":{},"body":{"components/PaymentComponent.html":{}}}],["context",{"_index":2824,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":638,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["controls",{"_index":2049,"title":{},"body":{"components/OrderComponent.html":{}}}],["converts",{"_index":595,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["cook",{"_index":1769,"title":{},"body":{"classes/Menu.html":{}}}],["copyorder",{"_index":1827,"title":{},"body":{"injectables/MenuService.html":{}}}],["corrct",{"_index":2439,"title":{},"body":{"components/PaymentComponent.html":{}}}],["correct",{"_index":1600,"title":{},"body":{"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{}}}],["correctinputs",{"_index":2399,"title":{},"body":{"components/PaymentComponent.html":{}}}],["correpsond",{"_index":1457,"title":{},"body":{"injectables/InputService.html":{}}}],["corresponding",{"_index":930,"title":{},"body":{"components/BasketComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["cosntuctor",{"_index":1604,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["costs",{"_index":360,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["cover",{"_index":731,"title":{},"body":{"components/AppComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["coverage",{"_index":2764,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":927,"title":{},"body":{"components/BasketComponent.html":{},"injectables/IngredientService.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"injectables/StaffService.html":{}}}],["createcustomer",{"_index":1304,"title":{},"body":{"injectables/CustomerService.html":{}}}],["createcustomer(customer",{"_index":1315,"title":{},"body":{"injectables/CustomerService.html":{}}}],["createcustomerwithtable",{"_index":1305,"title":{},"body":{"injectables/CustomerService.html":{}}}],["createcustomerwithtable(table",{"_index":1317,"title":{},"body":{"injectables/CustomerService.html":{}}}],["created",{"_index":1434,"title":{},"body":{"injectables/IngredientService.html":{},"injectables/MealService.html":{}}}],["createingredient",{"_index":1415,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createingredient(ingredient",{"_index":1421,"title":{},"body":{"injectables/IngredientService.html":{}}}],["createmenuitem",{"_index":1831,"title":{},"body":{"injectables/MenuService.html":{}}}],["createmenuitem(menu",{"_index":1840,"title":{},"body":{"injectables/MenuService.html":{}}}],["createnewcategory",{"_index":1777,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["createnewcategory(category",{"_index":1782,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["createnewcustomer",{"_index":2555,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["createnewmeal",{"_index":1716,"title":{},"body":{"injectables/MealService.html":{}}}],["createnewmeal(meal",{"_index":1721,"title":{},"body":{"injectables/MealService.html":{}}}],["createneworder",{"_index":1685,"title":{},"body":{"components/ManagerMenuComponent.html":{},"injectables/OrderService.html":{},"components/WaiterMenuComponent.html":{}}}],["createneworder(customer",{"_index":2198,"title":{},"body":{"injectables/OrderService.html":{}}}],["createneworderwithcustomer",{"_index":2184,"title":{},"body":{"injectables/OrderService.html":{}}}],["createneworderwithcustomer(customer",{"_index":2202,"title":{},"body":{"injectables/OrderService.html":{}}}],["createnewstaff",{"_index":529,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["createnewtable",{"_index":1686,"title":{},"body":{"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["createorder",{"_index":924,"title":{},"body":{"components/BasketComponent.html":{}}}],["createpermission",{"_index":2328,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["creates",{"_index":472,"title":{},"body":{"components/AddStaffComponent.html":{},"components/BasketComponent.html":{},"injectables/CustomerService.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/OrderService.html":{},"components/SelectTableDialogComponent.html":{},"injectables/TableService.html":{},"components/WaiterMenuComponent.html":{}}}],["createstaff",{"_index":2591,"title":{},"body":{"injectables/StaffService.html":{}}}],["createstaff(staff",{"_index":2598,"title":{},"body":{"injectables/StaffService.html":{}}}],["createtable",{"_index":2641,"title":{},"body":{"injectables/TableService.html":{}}}],["creating",{"_index":62,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["credentials",{"_index":1620,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["crud",{"_index":324,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["crustaceans",{"_index":642,"title":{},"body":{"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["curent",{"_index":2086,"title":{},"body":{"components/OrderComponent.html":{}}}],["current",{"_index":330,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/OrderComponent.html":{},"injectables/TableService.html":{}}}],["currentlist",{"_index":1878,"title":{},"body":{"injectables/MenuService.html":{}}}],["currentlist.push(menu",{"_index":1880,"title":{},"body":{"injectables/MenuService.html":{}}}],["currentstaff",{"_index":2637,"title":{},"body":{"injectables/TableService.html":{}}}],["cursive",{"_index":978,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["cursor",{"_index":1401,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["custom",{"_index":2175,"title":{},"body":{"components/OrderComponent.html":{}}}],["customer",{"_index":209,"title":{"classes/Customer.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Table.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["customer's",{"_index":2293,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["customer(s",{"_index":2630,"title":{},"body":{"classes/Table.html":{}}}],["customer.orders.foreach((customerorder",{"_index":2302,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["customer.service",{"_index":945,"title":{},"body":{"components/BasketComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["customerbackground",{"_index":728,"title":{},"body":{"components/AppComponent.html":{}}}],["customerid",{"_index":875,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["customerinterface",{"_index":1002,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["customerinterfacecomponent",{"_index":208,"title":{"components/CustomerInterfaceComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["customerorder.id",{"_index":2305,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["customers",{"_index":1324,"title":{},"body":{"injectables/CustomerService.html":{},"components/LandingPageComponent.html":{},"components/OrdersListDisplayComponent.html":{},"classes/Table.html":{},"components/WaiterMenuComponent.html":{}}}],["customerservice",{"_index":888,"title":{"injectables/CustomerService.html":{}},"body":{"components/BasketComponent.html":{},"injectables/CustomerService.html":{},"components/ManagerMenuComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["cvc",{"_index":2418,"title":{},"body":{"components/PaymentComponent.html":{}}}],["cvv",{"_index":2508,"title":{},"body":{"components/PaymentComponent.html":{}}}],["cvvcodecontrol",{"_index":2471,"title":{},"body":{"components/PaymentComponent.html":{}}}],["dark",{"_index":1567,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dashed",{"_index":1568,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dat",{"_index":274,"title":{},"body":{"components/AddIngredientDialogComponent.html":{}}}],["data",{"_index":132,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/BasketComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/SalesDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["data.customerid",{"_index":950,"title":{},"body":{"components/BasketComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["data.order.id",{"_index":2168,"title":{},"body":{"components/OrderComponent.html":{}}}],["data.orderdelivered",{"_index":2554,"title":{},"body":{"components/SalesDialogComponent.html":{}}}],["data.salesprice",{"_index":2553,"title":{},"body":{"components/SalesDialogComponent.html":{}}}],["data.selectedmeals",{"_index":948,"title":{},"body":{"components/BasketComponent.html":{}}}],["data.tablenumber",{"_index":952,"title":{},"body":{"components/BasketComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["data.title",{"_index":300,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{}}}],["database",{"_index":56,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddMenuDialogComponent.html":{},"injectables/InputService.html":{},"index.html":{}}}],["date",{"_index":2336,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{}}}],["date(date.parse(orderplacedtime",{"_index":2384,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["date[1",{"_index":2491,"title":{},"body":{"components/PaymentComponent.html":{}}}],["date[1].length",{"_index":2490,"title":{},"body":{"components/PaymentComponent.html":{}}}],["db",{"_index":90,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"injectables/InputService.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/TableService.html":{}}}],["dbc028",{"_index":1220,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["dburl",{"_index":1445,"title":{},"body":{"injectables/InputService.html":{}}}],["debouncetime",{"_index":2365,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["declarations",{"_index":736,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":982,"title":{},"body":{"components/BasketComponent.html":{},"components/LandingPageComponent.html":{}}}],["decorators",{"_index":289,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/CategoryDialogComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/OrderComponent.html":{},"components/SalesDialogComponent.html":{}}}],["decreases",{"_index":935,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{}}}],["default",{"_index":106,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":40,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"classes/selectedCategory.html":{}}}],["defines",{"_index":657,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/PaymentComponent.html":{}}}],["delete",{"_index":31,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/BasketComponent.html":{},"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/WaiterMenuComponent.html":{}}}],["delete(row",{"_index":67,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["deletecategory",{"_index":1778,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["deletecategory(category",{"_index":1784,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["deletecategoryitem",{"_index":1897,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["deletecategoryitem(category",{"_index":1907,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["deletecustomer",{"_index":1306,"title":{},"body":{"injectables/CustomerService.html":{}}}],["deletecustomer(customer",{"_index":1319,"title":{},"body":{"injectables/CustomerService.html":{}}}],["deleted",{"_index":905,"title":{},"body":{"components/BasketComponent.html":{},"injectables/CustomerService.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"components/MenusListDisplayComponent.html":{},"injectables/OrderService.html":{},"injectables/TableService.html":{}}}],["deleteingredient",{"_index":1416,"title":{},"body":{"injectables/IngredientService.html":{}}}],["deleteingredient(ingredient",{"_index":1423,"title":{},"body":{"injectables/IngredientService.html":{}}}],["deletemeal",{"_index":1717,"title":{},"body":{"injectables/MealService.html":{}}}],["deletemeal(meal",{"_index":1723,"title":{},"body":{"injectables/MealService.html":{}}}],["deletemenu",{"_index":1832,"title":{},"body":{"injectables/MenuService.html":{}}}],["deletemenu(menu",{"_index":1842,"title":{},"body":{"injectables/MenuService.html":{}}}],["deletemenuitem",{"_index":1898,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["deletemenuitem(menu",{"_index":1909,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["deleteorder",{"_index":2060,"title":{},"body":{"components/OrderComponent.html":{}}}],["deleteorderbyid",{"_index":2185,"title":{},"body":{"injectables/OrderService.html":{}}}],["deleteorderbyid(orderid",{"_index":2204,"title":{},"body":{"injectables/OrderService.html":{}}}],["deleteorderedmenuitem",{"_index":2061,"title":{},"body":{"components/OrderComponent.html":{}}}],["deleteorderedmenuitem(meal",{"_index":2076,"title":{},"body":{"components/OrderComponent.html":{}}}],["deletes",{"_index":903,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"injectables/TableService.html":{},"components/WaiterMenuComponent.html":{}}}],["deletestaff",{"_index":447,"title":{},"body":{"components/AddStaffComponent.html":{},"injectables/StaffService.html":{}}}],["deletestaff(staff",{"_index":456,"title":{},"body":{"components/AddStaffComponent.html":{},"injectables/StaffService.html":{}}}],["deletetable",{"_index":2642,"title":{},"body":{"injectables/TableService.html":{}}}],["deletetable(table",{"_index":2651,"title":{},"body":{"injectables/TableService.html":{}}}],["deleting",{"_index":71,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["deletion",{"_index":1911,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["delivered",{"_index":467,"title":{},"body":{"components/AddStaffComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/SalesDialogComponent.html":{},"classes/Staff.html":{}}}],["deliveredpaidbutton",{"_index":2390,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["delivery",{"_index":2093,"title":{},"body":{"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["deliveryimg",{"_index":1972,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["dependencies",{"_index":735,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":2317,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["depicting",{"_index":1623,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["description",{"_index":52,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["details",{"_index":1456,"title":{},"body":{"injectables/InputService.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{}}}],["detects",{"_index":2433,"title":{},"body":{"components/PaymentComponent.html":{}}}],["dev",{"_index":2865,"title":{},"body":{"index.html":{}}}],["development",{"_index":2862,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":28,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/BasketComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"components/WaiterMenuComponent.html":{}}}],["dialog'},{'name",{"_index":189,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["dialog.component",{"_index":116,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["dialog.component.html",{"_index":264,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["dialog.component.sass",{"_index":263,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["dialog.component.ts",{"_index":262,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:10",{"_index":1438,"title":{},"body":{"components/IngredientsDialogComponent.html":{}}}],["dialog.component.ts:101",{"_index":532,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["dialog.component.ts:106",{"_index":329,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["dialog.component.ts:115",{"_index":336,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["dialog.component.ts:12",{"_index":1440,"title":{},"body":{"components/IngredientsDialogComponent.html":{}}}],["dialog.component.ts:127",{"_index":332,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["dialog.component.ts:13",{"_index":1439,"title":{},"body":{"components/IngredientsDialogComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/SalesDialogComponent.html":{}}}],["dialog.component.ts:136",{"_index":357,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["dialog.component.ts:14",{"_index":271,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddStaffDialogComponent.html":{}}}],["dialog.component.ts:15",{"_index":1038,"title":{},"body":{"components/CategoryDialogComponent.html":{},"components/IngredientsDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":2528,"title":{},"body":{"components/PickTableDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":2552,"title":{},"body":{"components/SalesDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":2551,"title":{},"body":{"components/SalesDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":2009,"title":{},"body":{"components/NotificationsDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":292,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/CategoryDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":291,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":541,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":363,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/PickTableDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":549,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"components/NotificationsDialogComponent.html":{}}}],["dialog.component.ts:28",{"_index":540,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["dialog.component.ts:29",{"_index":277,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":369,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":550,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"components/PickTableDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":2563,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["dialog.component.ts:35",{"_index":1041,"title":{},"body":{"components/CategoryDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":365,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":282,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/NotificationsDialogComponent.html":{}}}],["dialog.component.ts:38",{"_index":548,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["dialog.component.ts:39",{"_index":2557,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":320,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["dialog.component.ts:42",{"_index":1040,"title":{},"body":{"components/CategoryDialogComponent.html":{},"components/PickTableDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":545,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["dialog.component.ts:44",{"_index":278,"title":{},"body":{"components/AddIngredientDialogComponent.html":{}}}],["dialog.component.ts:48",{"_index":542,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"components/NotificationsDialogComponent.html":{}}}],["dialog.component.ts:50",{"_index":364,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["dialog.component.ts:53",{"_index":287,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["dialog.component.ts:54",{"_index":533,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["dialog.component.ts:58",{"_index":343,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["dialog.component.ts:59",{"_index":2562,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["dialog.component.ts:66",{"_index":536,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["dialog.component.ts:68",{"_index":2558,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["dialog.component.ts:73",{"_index":534,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["dialog.component.ts:75",{"_index":354,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["dialog.component.ts:80",{"_index":2559,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["dialog.component.ts:82",{"_index":350,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{}}}],["dialog.component.ts:86",{"_index":535,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["dialog.component.ts:90",{"_index":356,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["dialog.component.ts:94",{"_index":539,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["dialog.component.ts:98",{"_index":348,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["dialog/add",{"_index":115,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"modules/AppModule.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["dialog/category",{"_index":851,"title":{},"body":{"modules/AppModule.html":{},"components/CategoryDialogComponent.html":{},"components/MenusListDisplayComponent.html":{},"coverage.html":{}}}],["dialog/ingredients",{"_index":853,"title":{},"body":{"modules/AppModule.html":{},"components/IngredientsDialogComponent.html":{},"components/MenusListDisplayComponent.html":{},"coverage.html":{}}}],["dialog/notifications",{"_index":817,"title":{},"body":{"modules/AppModule.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"coverage.html":{}}}],["dialog/pick",{"_index":821,"title":{},"body":{"modules/AppModule.html":{},"components/ManagerMenuComponent.html":{},"components/PickTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["dialog/sales",{"_index":488,"title":{},"body":{"components/AddStaffComponent.html":{},"modules/AppModule.html":{},"components/SalesDialogComponent.html":{},"coverage.html":{}}}],["dialog/select",{"_index":819,"title":{},"body":{"modules/AppModule.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/SelectTableDialogComponent.html":{},"coverage.html":{}}}],["dialogconfig",{"_index":1173,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["dialogconfig.data",{"_index":1174,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["dialogconfig.width",{"_index":1177,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["dialogref",{"_index":130,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["dialogref.afterclosed",{"_index":1697,"title":{},"body":{"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["dialogref.afterclosed().pipe(tap((result",{"_index":1539,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":1961,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["dialogref.afterclosed().subscribe(menu",{"_index":1485,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["dialogref.afterclosed().subscribe(orderplaced",{"_index":1179,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":141,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/HomePageComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{}}}],["dialogref.afterclosed().subscribe(staff",{"_index":137,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{}}}],["dialogs",{"_index":322,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["dialogtitle",{"_index":2017,"title":{},"body":{"components/NotificationsDialogComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["different",{"_index":1537,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["direction",{"_index":1505,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["directive",{"_index":185,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["directives",{"_index":257,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["directory",{"_index":2872,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":870,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["dish",{"_index":1478,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["dismissed",{"_index":1976,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["display",{"_index":94,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Menu.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["display'},{'name",{"_index":229,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["display.component",{"_index":833,"title":{},"body":{"modules/AppModule.html":{}}}],["display.component.html",{"_index":1893,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["display.component.sass",{"_index":1892,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["display.component.ts",{"_index":1890,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{},"coverage.html":{}}}],["display.component.ts:100",{"_index":1922,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["display.component.ts:101",{"_index":2338,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:111",{"_index":2708,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["display.component.ts:128",{"_index":1910,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["display.component.ts:129",{"_index":2710,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["display.component.ts:134",{"_index":2343,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:137",{"_index":1919,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["display.component.ts:151",{"_index":1908,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:158",{"_index":1917,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["display.component.ts:159",{"_index":2337,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:172",{"_index":1924,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["display.component.ts:18",{"_index":2703,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["display.component.ts:22",{"_index":1904,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["display.component.ts:23",{"_index":2330,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:26",{"_index":2720,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["display.component.ts:32",{"_index":2719,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["display.component.ts:35",{"_index":1930,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:37",{"_index":2718,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["display.component.ts:40",{"_index":1926,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:42",{"_index":2716,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["display.component.ts:44",{"_index":2332,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:45",{"_index":1932,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["display.component.ts:47",{"_index":2713,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["display.component.ts:49",{"_index":2333,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:50",{"_index":1934,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["display.component.ts:53",{"_index":2717,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["display.component.ts:54",{"_index":2363,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:56",{"_index":1928,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["display.component.ts:57",{"_index":1933,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["display.component.ts:58",{"_index":2722,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["display.component.ts:59",{"_index":1931,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:64",{"_index":1914,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["display.component.ts:69",{"_index":2353,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["display.component.ts:74",{"_index":2362,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:75",{"_index":2709,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["display.component.ts:79",{"_index":2355,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:85",{"_index":2358,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:90",{"_index":2350,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["display.component.ts:92",{"_index":1912,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["display.component.ts:95",{"_index":2347,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["display/ingredients",{"_index":852,"title":{},"body":{"modules/AppModule.html":{},"components/IngredientsDialogComponent.html":{},"coverage.html":{}}}],["display/menus",{"_index":841,"title":{},"body":{"modules/AppModule.html":{},"components/MenusListDisplayComponent.html":{},"coverage.html":{}}}],["display/orders",{"_index":832,"title":{},"body":{"modules/AppModule.html":{},"components/OrdersListDisplayComponent.html":{},"coverage.html":{}}}],["display/tables",{"_index":843,"title":{},"body":{"modules/AppModule.html":{},"components/TablesListDisplayComponent.html":{},"coverage.html":{}}}],["displaychip",{"_index":707,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["displayed",{"_index":1480,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["displayedcolumns",{"_index":1472,"title":{},"body":{"components/KitchenMenuComponent.html":{}}}],["displaying",{"_index":1534,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["displayorders",{"_index":2287,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["displays",{"_index":466,"title":{},"body":{"components/AddStaffComponent.html":{},"components/LandingPageComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["documentation",{"_index":2765,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":2738,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["done",{"_index":468,"title":{},"body":{"components/AddStaffComponent.html":{},"components/BasketComponent.html":{},"components/PaymentComponent.html":{}}}],["doneblock",{"_index":2521,"title":{},"body":{"components/PaymentComponent.html":{}}}],["dotted",{"_index":1284,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["down",{"_index":601,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["drop",{"_index":600,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["duration",{"_index":1030,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["dynamic",{"_index":2835,"title":{},"body":{"dependencies.html":{}}}],["e040fb",{"_index":1678,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["e9c46a",{"_index":1222,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["each",{"_index":465,"title":{},"body":{"components/AddStaffComponent.html":{},"classes/Ingredient.html":{},"components/KitchenMenuComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["ease",{"_index":1151,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["easeinoutquad",{"_index":1549,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["easing",{"_index":1548,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["edit",{"_index":102,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"injectables/StaffService.html":{}}}],["edit/delete",{"_index":1966,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["edited",{"_index":476,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["eggs",{"_index":643,"title":{},"body":{"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["elem",{"_index":1607,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["element",{"_index":184,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["elementref",{"_index":645,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{}}}],["email",{"_index":514,"title":{},"body":{"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"classes/Login.html":{},"classes/Staff.html":{}}}],["emits",{"_index":2360,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["emitted",{"_index":1801,"title":{},"body":{"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/OrderService.html":{},"injectables/TableService.html":{}}}],["emitter",{"_index":612,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["emmiter",{"_index":626,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["empty",{"_index":975,"title":{},"body":{"components/BasketComponent.html":{}}}],["emptyshoppingcartblock",{"_index":986,"title":{},"body":{"components/BasketComponent.html":{}}}],["en",{"_index":2483,"title":{},"body":{"components/PaymentComponent.html":{}}}],["encapsulation",{"_index":1052,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["ensures",{"_index":1331,"title":{},"body":{"injectables/CustomerService.html":{}}}],["enter",{"_index":660,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["entered",{"_index":1454,"title":{},"body":{"injectables/InputService.html":{},"components/LoginInputComponent.html":{}}}],["environment",{"_index":2811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":1618,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["event",{"_index":349,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["event.input",{"_index":682,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["event.value",{"_index":394,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{}}}],["example",{"_index":150,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/ManagerMenuComponent.html":{}}}],["execute",{"_index":2887,"title":{},"body":{"index.html":{}}}],["executed",{"_index":910,"title":{},"body":{"components/BasketComponent.html":{}}}],["exhaustmap",{"_index":1793,"title":{},"body":{"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["exist",{"_index":1994,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["existing",{"_index":2613,"title":{},"body":{"injectables/StaffService.html":{}}}],["exitbutton",{"_index":1706,"title":{},"body":{"components/ManagerMenuComponent.html":{}}}],["expansion",{"_index":212,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["expansionpannel",{"_index":1296,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{}}}],["expansionpannelcomponent",{"_index":211,"title":{"components/ExpansionPannelComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["expansionpanneltitle",{"_index":1368,"title":{},"body":{"components/ExpansionPannelComponent.html":{}}}],["expdatecontrol",{"_index":2470,"title":{},"body":{"components/PaymentComponent.html":{}}}],["expiration",{"_index":2507,"title":{},"body":{"components/PaymentComponent.html":{}}}],["export",{"_index":120,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"classes/selectedCategory.html":{}}}],["exports",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["f6ce66",{"_index":1559,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fab",{"_index":992,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{}}}],["fader",{"_index":724,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":136,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":518,"title":{},"body":{"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["fdfdf3",{"_index":1217,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["features",{"_index":2741,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["fetch",{"_index":1825,"title":{},"body":{"injectables/MenuService.html":{}}}],["fff",{"_index":1273,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["fffded",{"_index":1362,"title":{},"body":{"components/ExpansionPannelComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{}}}],["ffffff",{"_index":1403,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["field",{"_index":625,"title":{},"body":{"components/AllergensChipsComponent.html":{},"modules/AppModule.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["field.mat",{"_index":2572,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"classes/selectedCategory.html":{}}}],["files",{"_index":2869,"title":{},"body":{"index.html":{}}}],["filter",{"_index":615,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"injectables/OrderService.html":{}}}],["filter&nbsp;&nbsp",{"_index":704,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["filter(filteredargs",{"_index":1089,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["filter(val",{"_index":1810,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["filter.service",{"_index":1144,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["filter.service.ts",{"_index":1807,"title":{},"body":{"injectables/MenuFilterService.html":{},"coverage.html":{}}}],["filter.service.ts:20",{"_index":1816,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["filter.service.ts:25",{"_index":1817,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["filter.service.ts:30",{"_index":1809,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["filter.service.ts:42",{"_index":1818,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["filter.service.ts:53",{"_index":1811,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["filter_alt",{"_index":1363,"title":{},"body":{"components/ExpansionPannelComponent.html":{}}}],["filterbyallergensandcalories",{"_index":583,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["filtered",{"_index":603,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{}}}],["filteredallergens",{"_index":577,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["filteredargs",{"_index":1094,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["filtereddb",{"_index":1808,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["filtering",{"_index":674,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["filters",{"_index":598,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/MenuFilterService.html":{},"components/OrdersListDisplayComponent.html":{}}}],["filtervalue",{"_index":691,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["findcategoryitems",{"_index":1061,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["finds",{"_index":337,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["first",{"_index":2512,"title":{},"body":{"components/PaymentComponent.html":{}}}],["firstctrl",{"_index":2466,"title":{},"body":{"components/PaymentComponent.html":{}}}],["fish",{"_index":427,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["fit",{"_index":1499,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["fixed",{"_index":153,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["flex",{"_index":174,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderTrackerComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["float",{"_index":1513,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/NotificationsComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["font",{"_index":176,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["foodbtn",{"_index":2172,"title":{},"body":{"components/OrderComponent.html":{}}}],["foodimg",{"_index":1281,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["forcustomer",{"_index":2556,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["foremployee",{"_index":1373,"title":{},"body":{"components/HomePageComponent.html":{}}}],["form",{"_index":637,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["form.form1",{"_index":1671,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["format",{"_index":618,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/PaymentComponent.html":{}}}],["formatdate",{"_index":2457,"title":{},"body":{"components/PaymentComponent.html":{}}}],["formatdate(new",{"_index":2481,"title":{},"body":{"components/PaymentComponent.html":{}}}],["formatted",{"_index":619,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["formbuilder",{"_index":2411,"title":{},"body":{"components/PaymentComponent.html":{}}}],["formcontrol",{"_index":649,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/PaymentComponent.html":{}}}],["formcontrolname",{"_index":2454,"title":{},"body":{"components/PaymentComponent.html":{}}}],["formgroup",{"_index":2449,"title":{},"body":{"components/PaymentComponent.html":{}}}],["forms",{"_index":617,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/LoginInputComponent.html":{}}}],["formsmodule",{"_index":764,"title":{},"body":{"modules/AppModule.html":{}}}],["free",{"_index":1365,"title":{},"body":{"components/ExpansionPannelComponent.html":{}}}],["fromevent",{"_index":2364,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["fromevent(window",{"_index":2357,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["full",{"_index":864,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":2005,"title":{},"body":{"components/NotificationsDialogComponent.html":{}}}],["functionality",{"_index":1906,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["future",{"_index":2422,"title":{},"body":{"components/PaymentComponent.html":{}}}],["gap",{"_index":1501,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["generated",{"_index":2857,"title":{},"body":{"index.html":{}}}],["get's",{"_index":2602,"title":{},"body":{"injectables/StaffService.html":{}}}],["getall",{"_index":32,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["getallergens",{"_index":584,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["getallergensandcalories",{"_index":585,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["getallupdatedmenus",{"_index":1833,"title":{},"body":{"injectables/MenuService.html":{}}}],["getcustomerbyid",{"_index":926,"title":{},"body":{"components/BasketComponent.html":{},"injectables/CustomerService.html":{},"components/OrderTrackerComponent.html":{}}}],["getcustomerbyid(id",{"_index":1321,"title":{},"body":{"injectables/CustomerService.html":{}}}],["getcustomerid",{"_index":923,"title":{},"body":{"components/BasketComponent.html":{}}}],["getcustomers",{"_index":1307,"title":{},"body":{"injectables/CustomerService.html":{}}}],["getdate",{"_index":2325,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["getdate(order.orderplacedtime).getutchours()}}:{{getdate(order.orderplacedtime).getminutes",{"_index":2385,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["getdate(orderplacedtime",{"_index":2334,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["getid",{"_index":2062,"title":{},"body":{"components/OrderComponent.html":{}}}],["getingredientbyid",{"_index":1417,"title":{},"body":{"injectables/IngredientService.html":{}}}],["getingredientbyid(ingredientid",{"_index":1425,"title":{},"body":{"injectables/IngredientService.html":{}}}],["getingredients",{"_index":1418,"title":{},"body":{"injectables/IngredientService.html":{},"injectables/MenuService.html":{}}}],["getingredients(id",{"_index":1846,"title":{},"body":{"injectables/MenuService.html":{}}}],["getingredients?id",{"_index":1885,"title":{},"body":{"injectables/MenuService.html":{}}}],["getinitialordertotal",{"_index":881,"title":{},"body":{"components/BasketComponent.html":{}}}],["getlogin",{"_index":1446,"title":{},"body":{"injectables/InputService.html":{}}}],["getlogin(username",{"_index":1448,"title":{},"body":{"injectables/InputService.html":{}}}],["getmenubyid",{"_index":1834,"title":{},"body":{"injectables/MenuService.html":{}}}],["getmenubyid(id",{"_index":1848,"title":{},"body":{"injectables/MenuService.html":{}}}],["getmenucategories",{"_index":1109,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"injectables/MenuCategoryService.html":{}}}],["getmenucategory",{"_index":1779,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["getmenucategory(id",{"_index":1787,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["getmenus",{"_index":1098,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"injectables/MenuService.html":{}}}],["getneedhelp",{"_index":999,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["getneedhelptables",{"_index":2001,"title":{},"body":{"components/NotificationsDialogComponent.html":{},"injectables/TableService.html":{}}}],["getnoconfirmedorders",{"_index":2186,"title":{},"body":{"injectables/OrderService.html":{}}}],["getnumberofselections",{"_index":1062,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["getnumberofselections(menuitem",{"_index":1099,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["getorderbyid",{"_index":2187,"title":{},"body":{"injectables/OrderService.html":{},"components/PaymentComponent.html":{}}}],["getorderbyid(orderid",{"_index":2209,"title":{},"body":{"injectables/OrderService.html":{}}}],["getorderedmenuitems",{"_index":2188,"title":{},"body":{"injectables/OrderService.html":{}}}],["getorderedmenuitems(order",{"_index":2211,"title":{},"body":{"injectables/OrderService.html":{}}}],["getorders",{"_index":2189,"title":{},"body":{"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{}}}],["getrandomwaiter",{"_index":2592,"title":{},"body":{"injectables/StaffService.html":{}}}],["getreadytoorder",{"_index":2533,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["getrefreshneeded",{"_index":1336,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuFilterService.html":{},"injectables/TableService.html":{}}}],["gets",{"_index":85,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{}}}],["getsales",{"_index":2593,"title":{},"body":{"injectables/StaffService.html":{}}}],["getsales(id",{"_index":2604,"title":{},"body":{"injectables/StaffService.html":{}}}],["getsales/'+id",{"_index":2620,"title":{},"body":{"injectables/StaffService.html":{}}}],["getstaffbyid",{"_index":2594,"title":{},"body":{"injectables/StaffService.html":{}}}],["getstaffbyid(staffid",{"_index":2606,"title":{},"body":{"injectables/StaffService.html":{}}}],["getstaffbyusernameandpassword",{"_index":2595,"title":{},"body":{"injectables/StaffService.html":{}}}],["getstaffbyusernameandpassword(username",{"_index":2608,"title":{},"body":{"injectables/StaffService.html":{}}}],["getstaffs",{"_index":462,"title":{},"body":{"components/AddStaffComponent.html":{},"injectables/StaffService.html":{}}}],["gettablebynumber",{"_index":921,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{},"injectables/TableService.html":{}}}],["gettablebynumber(id",{"_index":2654,"title":{},"body":{"injectables/TableService.html":{}}}],["gettables",{"_index":2643,"title":{},"body":{"injectables/TableService.html":{}}}],["getting",{"_index":2854,"title":{"index.html":{}},"body":{}}],["getunoccupiedtables",{"_index":2644,"title":{},"body":{"injectables/TableService.html":{}}}],["getupdatedorders",{"_index":2190,"title":{},"body":{"injectables/OrderService.html":{}}}],["getupdatedtables",{"_index":2645,"title":{},"body":{"injectables/TableService.html":{}}}],["getwaiterspecificorders",{"_index":2191,"title":{},"body":{"injectables/OrderService.html":{}}}],["getwaiterspecificorders(waiterid",{"_index":2216,"title":{},"body":{"injectables/OrderService.html":{}}}],["given",{"_index":2754,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["giving",{"_index":99,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["gluten",{"_index":428,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["go",{"_index":2510,"title":{},"body":{"components/PaymentComponent.html":{}}}],["gohome",{"_index":1063,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LoginInputComponent.html":{}}}],["gold",{"_index":1219,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["gracias",{"_index":2500,"title":{},"body":{"components/PaymentComponent.html":{}}}],["graph",{"_index":2892,"title":{},"body":{"modules.html":{}}}],["green",{"_index":1491,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["greets",{"_index":1516,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["grid",{"_index":1497,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["group",{"_index":2427,"title":{},"body":{"components/PaymentComponent.html":{}}}],["h1col",{"_index":1492,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["h2",{"_index":2388,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["halfdiv",{"_index":1573,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["handle",{"_index":1012,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{}}}],["handles",{"_index":117,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/TableService.html":{}}}],["happens",{"_index":611,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["hasmenuitem",{"_index":325,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["hasorder",{"_index":1490,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["header",{"_index":1253,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["height",{"_index":156,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["help",{"_index":1028,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/LandingPageComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{}}}],["help!\",\"close",{"_index":2739,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["helpbubble",{"_index":1287,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["helped",{"_index":1977,"title":{},"body":{"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["helped!\",\"close",{"_index":2737,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["helper",{"_index":2004,"title":{},"body":{"components/NotificationsDialogComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"injectables/TableService.html":{},"components/WaiterMenuComponent.html":{}}}],["helps",{"_index":1536,"title":{},"body":{"components/LandingPageComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["here",{"_index":2881,"title":{},"body":{"index.html":{}}}],["hidden",{"_index":1991,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["hidematbadge",{"_index":1980,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["hold",{"_index":1927,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["home",{"_index":215,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["homepagecomponent",{"_index":214,"title":{"components/HomePageComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":183,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["http",{"_index":1313,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["http://localhost:4200",{"_index":2866,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/api/v1/customer",{"_index":1333,"title":{},"body":{"injectables/CustomerService.html":{}}}],["http://localhost:8080/api/v1/meals",{"_index":1729,"title":{},"body":{"injectables/MealService.html":{}}}],["http://localhost:8080/api/v1/menu",{"_index":1867,"title":{},"body":{"injectables/MenuService.html":{}}}],["http://localhost:8080/api/v1/menu/filter",{"_index":1815,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["http://localhost:8080/api/v1/menucategory",{"_index":1797,"title":{},"body":{"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{}}}],["http://localhost:8080/api/v1/orders",{"_index":2240,"title":{},"body":{"injectables/OrderService.html":{}}}],["http://localhost:8080/api/v1/staff",{"_index":1458,"title":{},"body":{"injectables/InputService.html":{},"injectables/StaffService.html":{}}}],["http://localhost:8080/api/v1/stock",{"_index":1431,"title":{},"body":{"injectables/IngredientService.html":{}}}],["http://localhost:8080/api/v1/tables",{"_index":2666,"title":{},"body":{"injectables/TableService.html":{}}}],["httpclient",{"_index":1311,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["httpclientmodule",{"_index":755,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1870,"title":{},"body":{"injectables/MenuService.html":{},"injectables/StaffService.html":{}}}],["https://www.npmjs.com/package/json",{"_index":2882,"title":{},"body":{"index.html":{}}}],["i+1",{"_index":1970,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{}}}],["id",{"_index":892,"title":{},"body":{"components/BasketComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"classes/Login.html":{},"classes/Meal.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/WaiterMenuComponent.html":{}}}],["identifier",{"_index":2766,"title":{},"body":{"coverage.html":{}}}],["if(alreadyordered",{"_index":2152,"title":{},"body":{"components/OrderComponent.html":{}}}],["if(table.needshelp",{"_index":2732,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["if(this.data.iskitchenstaff",{"_index":2127,"title":{},"body":{"components/OrderComponent.html":{}}}],["if(this.data.order.meal.length",{"_index":2139,"title":{},"body":{"components/OrderComponent.html":{}}}],["if(this.iswaiter",{"_index":2371,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["if(this.router.url",{"_index":1935,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["if(this.staff.waiter",{"_index":1637,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["ignore",{"_index":415,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["ignoremenu",{"_index":1888,"title":{},"body":{"injectables/MenuService.html":{}}}],["ignoreorder",{"_index":2258,"title":{},"body":{"injectables/OrderService.html":{}}}],["ignoreorder.id",{"_index":2259,"title":{},"body":{"injectables/OrderService.html":{}}}],["image",{"_index":729,"title":{},"body":{"components/AppComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["img",{"_index":1572,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["implements",{"_index":14,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["import",{"_index":109,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"classes/selectedCategory.html":{}}}],["important",{"_index":1676,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["imports",{"_index":748,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incapsulating",{"_index":1455,"title":{},"body":{"injectables/InputService.html":{}}}],["includesingredient",{"_index":411,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["including",{"_index":2742,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["incoming",{"_index":2431,"title":{},"body":{"components/PaymentComponent.html":{}}}],["increases",{"_index":1080,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"classes/selectedCategory.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":939,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"index.html":{},"classes/selectedCategory.html":{}}}],["inform",{"_index":932,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{}}}],["information",{"_index":1452,"title":{},"body":{"injectables/InputService.html":{},"components/OrderComponent.html":{},"components/SalesDialogComponent.html":{},"classes/Table.html":{}}}],["informative",{"_index":915,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{}}}],["informs",{"_index":2435,"title":{},"body":{"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["ing",{"_index":127,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddMenuDialogComponent.html":{}}}],["ing.name",{"_index":145,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddMenuDialogComponent.html":{}}}],["ing.priceperitem",{"_index":147,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ing.quantity",{"_index":146,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ingrdients",{"_index":1752,"title":{},"body":{"classes/Menu.html":{}}}],["ingredient",{"_index":20,"title":{"classes/Ingredient.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Menu.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["ingredient'},{'name",{"_index":188,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["ingredient.component",{"_index":849,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ingredient.component.html",{"_index":24,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ingredient.component.sass",{"_index":22,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ingredient.component.ts",{"_index":13,"title":{},"body":{"components/AddIngredientComponent.html":{},"coverage.html":{}}}],["ingredient.component.ts:16",{"_index":41,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ingredient.component.ts:25",{"_index":105,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ingredient.component.ts:30",{"_index":108,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ingredient.component.ts:36",{"_index":83,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ingredient.component.ts:44",{"_index":68,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ingredient.component.ts:53",{"_index":80,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ingredient.component.ts:61",{"_index":92,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ingredient.component.ts:83",{"_index":98,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ingredient.id",{"_index":416,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"injectables/IngredientService.html":{}}}],["ingredient.ingredient.name",{"_index":1441,"title":{},"body":{"components/IngredientsDialogComponent.html":{}}}],["ingredient.name",{"_index":138,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ingredient.priceperitem",{"_index":419,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["ingredient.quantity",{"_index":139,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ingredient.service",{"_index":113,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddMenuDialogComponent.html":{}}}],["ingredient/add",{"_index":12,"title":{},"body":{"components/AddIngredientComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["ingredientid",{"_index":1427,"title":{},"body":{"injectables/IngredientService.html":{}}}],["ingredients",{"_index":29,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Menu.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["ingredients?id",{"_index":1884,"title":{},"body":{"injectables/MenuService.html":{}}}],["ingredientsdialogcomponent",{"_index":217,"title":{"components/IngredientsDialogComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ingredientservice",{"_index":38,"title":{"injectables/IngredientService.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddMenuDialogComponent.html":{},"injectables/IngredientService.html":{},"coverage.html":{}}}],["ingredientsname",{"_index":1737,"title":{},"body":{"classes/Menu.html":{}}}],["ingredientstitle",{"_index":163,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["ings.foreach(element",{"_index":1952,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["inherit",{"_index":1587,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["initialisation",{"_index":1915,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["initialised",{"_index":2200,"title":{},"body":{"injectables/OrderService.html":{}}}],["initialises",{"_index":2753,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["inject",{"_index":293,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/BasketComponent.html":{},"components/CategoryDialogComponent.html":{},"components/IngredientsDialogComponent.html":{},"injectables/MenuService.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/SalesDialogComponent.html":{},"injectables/StaffService.html":{}}}],["inject(mat_dialog_data",{"_index":290,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/BasketComponent.html":{},"components/CategoryDialogComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/SalesDialogComponent.html":{}}}],["injectable",{"_index":1298,"title":{"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}},"body":{"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"coverage.html":{}}}],["injectables",{"_index":1299,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"overview.html":{}}}],["injected",{"_index":276,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/BasketComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/SalesDialogComponent.html":{}}}],["injects",{"_index":272,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/BasketComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["ink",{"_index":1364,"title":{},"body":{"components/ExpansionPannelComponent.html":{}}}],["inline",{"_index":1249,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/PaymentComponent.html":{}}}],["inner",{"_index":2524,"title":{},"body":{"components/PaymentComponent.html":{}}}],["innerborder",{"_index":1283,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["input",{"_index":681,"title":{},"body":{"components/AllergensChipsComponent.html":{},"modules/AppModule.html":{},"injectables/InputService.html":{},"components/LoginInputComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/TablesListDisplayComponent.html":{},"dependencies.html":{}}}],["input'},{'name",{"_index":225,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["input.component",{"_index":761,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["input.component.html",{"_index":1599,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["input.component.sass",{"_index":1598,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["input.component.ts",{"_index":1597,"title":{},"body":{"components/LoginInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:21",{"_index":1629,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["input.component.ts:26",{"_index":1628,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["input.component.ts:31",{"_index":1626,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["input.component.ts:36",{"_index":1627,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["input.component.ts:37",{"_index":1603,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["input.component.ts:53",{"_index":1612,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["input.component.ts:55",{"_index":1611,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["input.component.ts:61",{"_index":1613,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["input.component.ts:86",{"_index":1608,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["input.component.ts:95",{"_index":1617,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["input.service",{"_index":1630,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["input.service.ts",{"_index":1444,"title":{},"body":{"injectables/InputService.html":{},"coverage.html":{}}}],["input.service.ts:19",{"_index":1459,"title":{},"body":{"injectables/InputService.html":{}}}],["input.service.ts:24",{"_index":1447,"title":{},"body":{"injectables/InputService.html":{}}}],["input.service.ts:33",{"_index":1449,"title":{},"body":{"injectables/InputService.html":{}}}],["input.value",{"_index":685,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["input/login",{"_index":760,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/InputService.html":{},"components/LoginInputComponent.html":{},"coverage.html":{}}}],["inputs",{"_index":2327,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["inputservice",{"_index":1442,"title":{"injectables/InputService.html":{}},"body":{"injectables/InputService.html":{},"components/LoginInputComponent.html":{},"coverage.html":{}}}],["insatiated",{"_index":1916,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["insert",{"_index":2506,"title":{},"body":{"components/PaymentComponent.html":{}}}],["inside",{"_index":464,"title":{},"body":{"components/AddStaffComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["instance",{"_index":592,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["instantiated",{"_index":89,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["instantiates",{"_index":2429,"title":{},"body":{"components/PaymentComponent.html":{}}}],["instantiating",{"_index":43,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/LandingPageComponent.html":{}}}],["instantly",{"_index":1013,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["instatiating",{"_index":1905,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["inter",{"_index":1242,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interact",{"_index":1529,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["interacted",{"_index":2400,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interaction",{"_index":59,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["interface",{"_index":591,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderTrackerComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["interface'},{'name",{"_index":210,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["interface.component",{"_index":672,"title":{},"body":{"components/AllergensChipsComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CallWaiterComponent.html":{},"components/OrderTrackerComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["interface.component.html",{"_index":1055,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.sass",{"_index":1054,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts",{"_index":1051,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"coverage.html":{}}}],["interface.component.ts:114",{"_index":1097,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:133",{"_index":1090,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:155",{"_index":1079,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:177",{"_index":1122,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:193",{"_index":1087,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:207",{"_index":1100,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:222",{"_index":1111,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:239",{"_index":1118,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:253",{"_index":1101,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:262",{"_index":1124,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:273",{"_index":1084,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:46",{"_index":1131,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:51",{"_index":1128,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:56",{"_index":1130,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:61",{"_index":1129,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:66",{"_index":1126,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:71",{"_index":1074,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:87",{"_index":1127,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface.component.ts:96",{"_index":1104,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["interface/allergens",{"_index":568,"title":{},"body":{"components/AllergensChipsComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["interface/basket/basket.component",{"_index":809,"title":{},"body":{"modules/AppModule.html":{}}}],["interface/basket/basket.component.ts",{"_index":871,"title":{},"body":{"components/BasketComponent.html":{},"coverage.html":{}}}],["interface/basket/basket.component.ts:110",{"_index":899,"title":{},"body":{"components/BasketComponent.html":{}}}],["interface/basket/basket.component.ts:122",{"_index":934,"title":{},"body":{"components/BasketComponent.html":{}}}],["interface/basket/basket.component.ts:141",{"_index":918,"title":{},"body":{"components/BasketComponent.html":{}}}],["interface/basket/basket.component.ts:168",{"_index":914,"title":{},"body":{"components/BasketComponent.html":{}}}],["interface/basket/basket.component.ts:25",{"_index":938,"title":{},"body":{"components/BasketComponent.html":{}}}],["interface/basket/basket.component.ts:30",{"_index":940,"title":{},"body":{"components/BasketComponent.html":{}}}],["interface/basket/basket.component.ts:36",{"_index":937,"title":{},"body":{"components/BasketComponent.html":{}}}],["interface/basket/basket.component.ts:42",{"_index":941,"title":{},"body":{"components/BasketComponent.html":{}}}],["interface/basket/basket.component.ts:47",{"_index":889,"title":{},"body":{"components/BasketComponent.html":{}}}],["interface/basket/basket.component.ts:78",{"_index":909,"title":{},"body":{"components/BasketComponent.html":{}}}],["interface/basket/basket.component.ts:86",{"_index":906,"title":{},"body":{"components/BasketComponent.html":{}}}],["interface/basket/basket.component.ts:97",{"_index":902,"title":{},"body":{"components/BasketComponent.html":{}}}],["interface/call",{"_index":810,"title":{},"body":{"modules/AppModule.html":{},"components/CallWaiterComponent.html":{},"coverage.html":{}}}],["interface/customer",{"_index":759,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CustomerInterfaceComponent.html":{},"coverage.html":{}}}],["interface/expansion",{"_index":794,"title":{},"body":{"modules/AppModule.html":{},"components/ExpansionPannelComponent.html":{},"coverage.html":{}}}],["interface/order",{"_index":838,"title":{},"body":{"modules/AppModule.html":{},"components/OrderTrackerComponent.html":{},"coverage.html":{}}}],["interface/payment/payment.component",{"_index":850,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["interface/payment/payment.component.ts",{"_index":2391,"title":{},"body":{"components/PaymentComponent.html":{},"coverage.html":{}}}],["interface/payment/payment.component.ts:110",{"_index":2425,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:134",{"_index":2441,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:149",{"_index":2436,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:158",{"_index":2416,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:195",{"_index":2437,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:218",{"_index":2424,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:234",{"_index":2434,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:29",{"_index":2451,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:34",{"_index":2450,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:39",{"_index":2447,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:44",{"_index":2443,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:49",{"_index":2442,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:54",{"_index":2448,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:59",{"_index":2453,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:64",{"_index":2446,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:69",{"_index":2445,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/payment/payment.component.ts:74",{"_index":2412,"title":{},"body":{"components/PaymentComponent.html":{}}}],["interface/ready",{"_index":822,"title":{},"body":{"modules/AppModule.html":{},"components/ReadyToOrderComponent.html":{},"coverage.html":{}}}],["intial",{"_index":599,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/LandingPageComponent.html":{}}}],["intialises",{"_index":911,"title":{},"body":{"components/BasketComponent.html":{}}}],["involved",{"_index":61,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["isauth",{"_index":1895,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["iscat",{"_index":401,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["isconfirmed",{"_index":2022,"title":{},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"components/PaymentComponent.html":{}}}],["isdelivered",{"_index":2023,"title":{},"body":{"classes/Order.html":{},"injectables/OrderService.html":{}}}],["iskitchenstaff",{"_index":2071,"title":{},"body":{"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["isoccupied",{"_index":2626,"title":{},"body":{"classes/Table.html":{}}}],["ispaid",{"_index":2024,"title":{},"body":{"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/PaymentComponent.html":{}}}],["ispaid,isready",{"_index":2021,"title":{},"body":{"classes/Order.html":{}}}],["ispaid:boolean",{"_index":2047,"title":{},"body":{"classes/Order.html":{}}}],["ispaidblock",{"_index":2519,"title":{},"body":{"components/PaymentComponent.html":{}}}],["isready",{"_index":2025,"title":{},"body":{"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"classes/Table.html":{}}}],["isselectedcat",{"_index":316,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["isselectedcat(category",{"_index":335,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["iswaiter",{"_index":2329,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"classes/Staff.html":{},"components/TablesListDisplayComponent.html":{}}}],["iswaiterstaff",{"_index":2051,"title":{},"body":{"components/OrderComponent.html":{}}}],["it's",{"_index":309,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/ManagerMenuComponent.html":{}}}],["item",{"_index":303,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"classes/Ingredient.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"classes/Menu.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["item's",{"_index":2102,"title":{},"body":{"components/OrderComponent.html":{}}}],["item.celery",{"_index":1184,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["item.crustaceans",{"_index":1188,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["item.eggs",{"_index":1190,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["item.fish",{"_index":1192,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["item.gluten",{"_index":1186,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["item.lupin",{"_index":1194,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["item.milk",{"_index":1196,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["item.molluscs",{"_index":1198,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["item.mustard",{"_index":1200,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["item.nuts",{"_index":1202,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["item.orderdelivered",{"_index":497,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["item.peanuts",{"_index":1182,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["item.salesprice",{"_index":498,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["item.sesameseeds",{"_index":1206,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["item.soya",{"_index":1204,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["item.sulphites",{"_index":1208,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["items",{"_index":1091,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/selectedCategory.html":{}}}],["jquery",{"_index":2841,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":2843,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["justify",{"_index":1241,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{},"components/OrderTrackerComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["karma",{"_index":2888,"title":{},"body":{"index.html":{}}}],["key",{"_index":663,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["keyframes",{"_index":1135,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["kitchen",{"_index":219,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["kitchenmenucomponent",{"_index":218,"title":{"components/KitchenMenuComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["label",{"_index":1268,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["landing",{"_index":222,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["landingpagecomponent",{"_index":221,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["las",{"_index":1382,"title":{},"body":{"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{}}}],["lblcartcount",{"_index":1271,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/NotificationsComponent.html":{}}}],["leave",{"_index":2909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":166,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["legacy",{"_index":868,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["legend",{"_index":182,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"overview.html":{}}}],["letter",{"_index":1660,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["lg",{"_index":1582,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["li",{"_index":1504,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["light",{"_index":1221,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["line",{"_index":1034,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["link",{"_index":1335,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/TableService.html":{}}}],["list",{"_index":82,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["listen",{"_index":1011,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["listener",{"_index":2359,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["literal",{"_index":270,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/OrderComponent.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":1532,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["log",{"_index":1652,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["logged",{"_index":2354,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["logging",{"_index":2759,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["login",{"_index":224,"title":{"classes/Login.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["logininputcomponent",{"_index":223,"title":{"components/LoginInputComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logs",{"_index":2721,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["look",{"_index":2880,"title":{},"body":{"index.html":{}}}],["loops",{"_index":928,"title":{},"body":{"components/BasketComponent.html":{}}}],["lower",{"_index":596,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["lupin",{"_index":429,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["made",{"_index":2587,"title":{},"body":{"classes/Staff.html":{}}}],["main",{"_index":1384,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["make",{"_index":454,"title":{},"body":{"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["makes",{"_index":459,"title":{},"body":{"components/AddStaffComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["making",{"_index":54,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CallWaiterComponent.html":{},"injectables/CustomerService.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/TableService.html":{}}}],["manage",{"_index":1705,"title":{},"body":{"components/ManagerMenuComponent.html":{}}}],["management",{"_index":2238,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TableService.html":{}}}],["manager",{"_index":100,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["manager/assigntable/${staffid}/${table.tablenumber",{"_index":2698,"title":{},"body":{"injectables/TableService.html":{}}}],["managerassigntable",{"_index":2646,"title":{},"body":{"injectables/TableService.html":{}}}],["managerassigntable(table",{"_index":2659,"title":{},"body":{"injectables/TableService.html":{}}}],["managermenucomponent",{"_index":226,"title":{"components/ManagerMenuComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managers",{"_index":2322,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["manger",{"_index":95,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["many",{"_index":1993,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["map",{"_index":377,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"injectables/InputService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{}}}],["map((allergen",{"_index":678,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["map((menus",{"_index":1943,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["map((orders",{"_index":2368,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["map((sc",{"_index":397,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["map((tables",{"_index":2729,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["map(response",{"_index":1466,"title":{},"body":{"injectables/InputService.html":{},"injectables/MenuFilterService.html":{},"injectables/TableService.html":{}}}],["margin",{"_index":165,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/PaymentComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["mark",{"_index":2015,"title":{},"body":{"components/NotificationsDialogComponent.html":{}}}],["markashelped",{"_index":2702,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["markashelped(table",{"_index":2707,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["marked",{"_index":2543,"title":{},"body":{"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["marks",{"_index":2008,"title":{},"body":{"components/NotificationsDialogComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["maroon",{"_index":1223,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["mat",{"_index":273,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["mat_dialog_data",{"_index":294,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/BasketComponent.html":{},"components/CategoryDialogComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/SalesDialogComponent.html":{}}}],["matautocomplete",{"_index":578,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["matautocompleted",{"_index":636,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["matautocompletemodule",{"_index":798,"title":{},"body":{"modules/AppModule.html":{}}}],["matautocompleteselectedevent",{"_index":634,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["matbadgemodule",{"_index":814,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":775,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":773,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":807,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":260,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/selectedCategory.html":{},"miscellaneous/variables.html":{}}}],["matchipinput",{"_index":610,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["matchipinputevent",{"_index":607,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["matchipsmodule",{"_index":793,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialog",{"_index":39,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["matdialogconfig",{"_index":1133,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["matdialogmodule",{"_index":772,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":269,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["matdividermodule",{"_index":779,"title":{},"body":{"modules/AppModule.html":{}}}],["matexpansionmodule",{"_index":791,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":767,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":777,"title":{},"body":{"modules/AppModule.html":{}}}],["math.floor(window.innerwidth",{"_index":2378,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["math.floor(window.innerwidth/this.order_button_width",{"_index":2346,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["maticonmodule",{"_index":783,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":802,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":781,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":844,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiomodule",{"_index":847,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":769,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":789,"title":{},"body":{"modules/AppModule.html":{}}}],["matslider",{"_index":711,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["matsliderchange",{"_index":347,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{}}}],["matslidermodule",{"_index":799,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":829,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":885,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["matsnackbarmodule",{"_index":835,"title":{},"body":{"modules/AppModule.html":{}}}],["matsteppermodule",{"_index":825,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":800,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":787,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":1234,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["meal",{"_index":891,"title":{"classes/Meal.html":{}},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"components/PaymentComponent.html":{},"coverage.html":{},"classes/selectedCategory.html":{}}}],["meal.menu.name",{"_index":971,"title":{},"body":{"components/BasketComponent.html":{},"components/OrderComponent.html":{},"components/PaymentComponent.html":{}}}],["meal.menu.price",{"_index":955,"title":{},"body":{"components/BasketComponent.html":{},"components/OrderComponent.html":{},"components/PaymentComponent.html":{}}}],["meal.numberselections",{"_index":956,"title":{},"body":{"components/BasketComponent.html":{},"components/OrderComponent.html":{},"components/PaymentComponent.html":{}}}],["meal.service",{"_index":942,"title":{},"body":{"components/BasketComponent.html":{},"components/OrderComponent.html":{}}}],["meallist",{"_index":876,"title":{},"body":{"components/BasketComponent.html":{},"components/PaymentComponent.html":{}}}],["meals",{"_index":904,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/MealService.html":{},"classes/Order.html":{},"components/OrderComponent.html":{}}}],["mealservice",{"_index":886,"title":{"injectables/MealService.html":{}},"body":{"components/BasketComponent.html":{},"injectables/MealService.html":{},"components/OrderComponent.html":{},"coverage.html":{}}}],["mealsurl",{"_index":1715,"title":{},"body":{"injectables/MealService.html":{}}}],["media",{"_index":1580,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["member",{"_index":1624,"title":{},"body":{"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/SalesDialogComponent.html":{},"injectables/StaffService.html":{}}}],["members",{"_index":1615,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["menu",{"_index":256,"title":{"classes/Menu.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"classes/selectedCategory.html":{}}}],["menu's",{"_index":1826,"title":{},"body":{"injectables/MenuService.html":{}}}],["menu'},{'name",{"_index":220,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["menu,title,hasmenuitem",{"_index":1954,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["menu.component",{"_index":758,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/OrderComponent.html":{}}}],["menu.component.html",{"_index":1471,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["menu.component.sass",{"_index":1470,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["menu.component.ts",{"_index":1469,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:101",{"_index":2749,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["menu.component.ts:114",{"_index":2755,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["menu.component.ts:22",{"_index":1688,"title":{},"body":{"components/ManagerMenuComponent.html":{}}}],["menu.component.ts:23",{"_index":1482,"title":{},"body":{"components/KitchenMenuComponent.html":{}}}],["menu.component.ts:25",{"_index":2746,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["menu.component.ts:28",{"_index":1474,"title":{},"body":{"components/KitchenMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":1694,"title":{},"body":{"components/ManagerMenuComponent.html":{}}}],["menu.component.ts:38",{"_index":1479,"title":{},"body":{"components/KitchenMenuComponent.html":{}}}],["menu.component.ts:40",{"_index":1475,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["menu.component.ts:44",{"_index":1691,"title":{},"body":{"components/ManagerMenuComponent.html":{}}}],["menu.component.ts:45",{"_index":1476,"title":{},"body":{"components/KitchenMenuComponent.html":{}}}],["menu.component.ts:50",{"_index":2760,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["menu.component.ts:51",{"_index":1693,"title":{},"body":{"components/ManagerMenuComponent.html":{}}}],["menu.component.ts:56",{"_index":2757,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["menu.component.ts:61",{"_index":1689,"title":{},"body":{"components/ManagerMenuComponent.html":{}}}],["menu.component.ts:62",{"_index":2752,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["menu.component.ts:74",{"_index":1690,"title":{},"body":{"components/ManagerMenuComponent.html":{}}}],["menu.component.ts:77",{"_index":2756,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["menu.component.ts:81",{"_index":1692,"title":{},"body":{"components/ManagerMenuComponent.html":{}}}],["menu.component.ts:87",{"_index":2751,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["menu.component.ts:94",{"_index":2750,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["menu.description",{"_index":1968,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["menu.foreach((menuitem",{"_index":1168,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["menu.ingredients",{"_index":1875,"title":{},"body":{"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{}}}],["menu.ingredients.push(element.ingredient.id",{"_index":1953,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["menu.name",{"_index":1967,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{}}}],["menu.price",{"_index":1969,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{}}}],["menu.service",{"_index":1143,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["menu/add",{"_index":11,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/SalesDialogComponent.html":{},"coverage.html":{}}}],["menu/kitchen",{"_index":828,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/KitchenMenuComponent.html":{},"coverage.html":{}}}],["menu/manager",{"_index":834,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ManagerMenuComponent.html":{},"coverage.html":{}}}],["menu/notifications/notifications",{"_index":816,"title":{},"body":{"modules/AppModule.html":{},"components/NotificationsDialogComponent.html":{},"coverage.html":{}}}],["menu/notifications/notifications.component",{"_index":813,"title":{},"body":{"modules/AppModule.html":{}}}],["menu/notifications/notifications.component.ts",{"_index":1973,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["menu/notifications/notifications.component.ts:20",{"_index":1992,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["menu/notifications/notifications.component.ts:25",{"_index":1984,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["menu/notifications/notifications.component.ts:33",{"_index":1989,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["menu/notifications/notifications.component.ts:42",{"_index":1985,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["menu/notifications/notifications.component.ts:51",{"_index":1986,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["menu/order/order.component",{"_index":771,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/OrdersListDisplayComponent.html":{}}}],["menu/order/order.component.ts",{"_index":2048,"title":{},"body":{"components/OrderComponent.html":{},"coverage.html":{}}}],["menu/order/order.component.ts:110",{"_index":2098,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:120",{"_index":2091,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:130",{"_index":2089,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:140",{"_index":2096,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:149",{"_index":2078,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:158",{"_index":2094,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:170",{"_index":2075,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:181",{"_index":2074,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:214",{"_index":2084,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:226",{"_index":2077,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:27",{"_index":2116,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:32",{"_index":2115,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:37",{"_index":2101,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:43",{"_index":2109,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:48",{"_index":2108,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:54",{"_index":2112,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:59",{"_index":2105,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:64",{"_index":2113,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:65",{"_index":2114,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:66",{"_index":2069,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:77",{"_index":2100,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:78",{"_index":2099,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:80",{"_index":2103,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/order/order.component.ts:88",{"_index":2079,"title":{},"body":{"components/OrderComponent.html":{}}}],["menu/pick",{"_index":820,"title":{},"body":{"modules/AppModule.html":{},"components/ManagerMenuComponent.html":{},"components/PickTableDialogComponent.html":{},"coverage.html":{}}}],["menu/waiter",{"_index":757,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["menu:menu,title:string,hasmenuitem:boolean",{"_index":382,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["menucard",{"_index":1276,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["menucategories",{"_index":386,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["menucategory",{"_index":328,"title":{"classes/MenuCategory.html":{}},"body":{"components/AddMenuDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"components/MenusListDisplayComponent.html":{},"coverage.html":{}}}],["menucategoryservice",{"_index":319,"title":{"injectables/MenuCategoryService.html":{}},"body":{"components/AddMenuDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/MenuCategoryService.html":{},"components/MenusListDisplayComponent.html":{},"coverage.html":{}}}],["menucategoryserviceto",{"_index":380,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["menucategoryurl",{"_index":1776,"title":{},"body":{"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{}}}],["menufilterservice",{"_index":1070,"title":{"injectables/MenuFilterService.html":{}},"body":{"components/CustomerInterfaceComponent.html":{},"injectables/MenuFilterService.html":{},"coverage.html":{}}}],["menuitem",{"_index":1082,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["menuitem.calories",{"_index":1216,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["menuitem.category.category",{"_index":1169,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["menuitem.description",{"_index":1215,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["menuitem.name",{"_index":1213,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["menuitem.price",{"_index":1214,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["menulist",{"_index":1896,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{}}}],["menus",{"_index":228,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["menus.foreach((menu",{"_index":1944,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["menuservice",{"_index":1069,"title":{"injectables/MenuService.html":{}},"body":{"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["menuslistdisplaycomponent",{"_index":227,"title":{"components/MenusListDisplayComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menusubject",{"_index":1828,"title":{},"body":{"injectables/MenuService.html":{}}}],["menutitle",{"_index":1245,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["menuui",{"_index":1244,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["message",{"_index":916,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["messages",{"_index":2705,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["method",{"_index":69,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["methods",{"_index":30,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["middle",{"_index":1579,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["milk",{"_index":430,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["min",{"_index":1278,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["minimum",{"_index":2714,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["minmax(240px,1fr",{"_index":1500,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["miscellaneous",{"_index":2899,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mock",{"_index":2870,"title":{},"body":{"index.html":{}}}],["model",{"_index":1046,"title":{},"body":{"classes/Customer.html":{}}}],["models/customer",{"_index":1338,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/OrderService.html":{},"components/SelectTableDialogComponent.html":{}}}],["models/ingredient",{"_index":112,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"injectables/IngredientService.html":{},"injectables/MenuService.html":{}}}],["models/login",{"_index":1462,"title":{},"body":{"injectables/InputService.html":{}}}],["models/meal",{"_index":944,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/MealService.html":{},"components/OrderComponent.html":{},"components/PaymentComponent.html":{}}}],["models/menu",{"_index":373,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/WaiterMenuComponent.html":{}}}],["models/menucategory",{"_index":375,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"components/MenusListDisplayComponent.html":{}}}],["models/order",{"_index":1483,"title":{},"body":{"components/KitchenMenuComponent.html":{},"injectables/MenuService.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{}}}],["models/selectedcategory",{"_index":1871,"title":{},"body":{"injectables/MenuService.html":{},"injectables/StaffService.html":{}}}],["models/staff",{"_index":486,"title":{},"body":{"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/LoginInputComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/SalesDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["models/table",{"_index":552,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"injectables/CustomerService.html":{},"components/ManagerMenuComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["modification",{"_index":104,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["modified",{"_index":1920,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["modify",{"_index":1925,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["module",{"_index":732,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":734,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["molluscs",{"_index":432,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["more",{"_index":66,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/MenusListDisplayComponent.html":{},"index.html":{}}}],["moz",{"_index":1267,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["ms",{"_index":1399,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["muchas",{"_index":2499,"title":{},"body":{"components/PaymentComponent.html":{}}}],["mustard",{"_index":433,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["mustarrd",{"_index":1757,"title":{},"body":{"classes/Menu.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"classes/selectedCategory.html":{}}}],["navigate",{"_index":1077,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"index.html":{}}}],["navigates",{"_index":1102,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{}}}],["navigatetomenu",{"_index":2406,"title":{},"body":{"components/PaymentComponent.html":{}}}],["navigatetopayment",{"_index":2288,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["navigatetopayment(orderid",{"_index":2295,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["nbsp;&nbsp;&nbsp",{"_index":1210,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["neccessary",{"_index":45,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["need",{"_index":1027,"title":{},"body":{"components/CallWaiterComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"components/ReadyToOrderComponent.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{}}}],["needed",{"_index":1330,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuFilterService.html":{},"injectables/OrderService.html":{},"components/PaymentComponent.html":{},"injectables/TableService.html":{}}}],["needhelp",{"_index":2687,"title":{},"body":{"injectables/TableService.html":{}}}],["needs",{"_index":77,"title":{},"body":{"components/AddIngredientComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{}}}],["needshelp",{"_index":2627,"title":{},"body":{"classes/Table.html":{},"components/TablesListDisplayComponent.html":{}}}],["needshelpreadytoorder",{"_index":2740,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["needtoreview",{"_index":2401,"title":{},"body":{"components/PaymentComponent.html":{}}}],["new",{"_index":96,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["newcustomer",{"_index":1344,"title":{},"body":{"injectables/CustomerService.html":{}}}],["newcustomer.id",{"_index":2570,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["newcustomer.table",{"_index":1345,"title":{},"body":{"injectables/CustomerService.html":{}}}],["newisconfirmed",{"_index":2225,"title":{},"body":{"injectables/OrderService.html":{}}}],["newisdelivered",{"_index":2228,"title":{},"body":{"injectables/OrderService.html":{}}}],["newmeal",{"_index":2153,"title":{},"body":{"components/OrderComponent.html":{}}}],["newmeal.menu",{"_index":2155,"title":{},"body":{"components/OrderComponent.html":{}}}],["newmeal.numberselections",{"_index":2154,"title":{},"body":{"components/OrderComponent.html":{}}}],["newmeal.order",{"_index":2156,"title":{},"body":{"components/OrderComponent.html":{}}}],["newtable",{"_index":2690,"title":{},"body":{"injectables/TableService.html":{}}}],["newtable.isoccupied",{"_index":2691,"title":{},"body":{"injectables/TableService.html":{}}}],["newtable.isready",{"_index":2692,"title":{},"body":{"injectables/TableService.html":{}}}],["newtable.needshelp",{"_index":2693,"title":{},"body":{"injectables/TableService.html":{}}}],["newtable.waiterid",{"_index":2694,"title":{},"body":{"injectables/TableService.html":{}}}],["next",{"_index":2505,"title":{},"body":{"components/PaymentComponent.html":{},"index.html":{}}}],["ng",{"_index":805,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1356,"title":{},"body":{"components/ExpansionPannelComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{}}}],["ngmodule",{"_index":752,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":1899,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["ngoninit",{"_index":33,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["ngotpinputmodule",{"_index":804,"title":{},"body":{"modules/AppModule.html":{}}}],["noisreadytoorder",{"_index":1507,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["none",{"_index":983,"title":{},"body":{"components/BasketComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["noorder",{"_index":1488,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["noorderblock",{"_index":2313,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["notconfirmedblock",{"_index":2520,"title":{},"body":{"components/PaymentComponent.html":{}}}],["notification",{"_index":1987,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification_important",{"_index":2000,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications",{"_index":233,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["notifications'},{'name",{"_index":231,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["notifications.component.html",{"_index":1979,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.sass",{"_index":1978,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationscomponent",{"_index":230,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationsdialogcomponent",{"_index":232,"title":{"components/NotificationsDialogComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notpaidblock",{"_index":2522,"title":{},"body":{"components/PaymentComponent.html":{}}}],["npm",{"_index":2873,"title":{},"body":{"index.html":{}}}],["npx",{"_index":2879,"title":{},"body":{"index.html":{}}}],["nr",{"_index":537,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"components/BasketComponent.html":{}}}],["null",{"_index":547,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["number",{"_index":281,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"classes/Login.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"components/NotificationsComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{}}}],["numberofnotifications",{"_index":1981,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["numberofselections",{"_index":991,"title":{},"body":{"components/BasketComponent.html":{}}}],["numberselections",{"_index":1708,"title":{},"body":{"classes/Meal.html":{},"injectables/MealService.html":{}}}],["nuts",{"_index":434,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["o.id",{"_index":2138,"title":{},"body":{"components/OrderComponent.html":{}}}],["object",{"_index":60,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"injectables/CustomerService.html":{},"classes/Ingredient.html":{},"injectables/InputService.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"classes/Meal.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"components/MenusListDisplayComponent.html":{},"classes/Order.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"classes/Table.html":{},"miscellaneous/variables.html":{}}}],["objects",{"_index":2748,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["observable",{"_index":463,"title":{},"body":{"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/WaiterMenuComponent.html":{}}}],["observables",{"_index":1800,"title":{},"body":{"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/OrderService.html":{},"injectables/TableService.html":{}}}],["observale",{"_index":1110,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"injectables/MenuCategoryService.html":{}}}],["obsrevable",{"_index":2106,"title":{},"body":{"components/OrderComponent.html":{}}}],["occupied",{"_index":2625,"title":{},"body":{"classes/Table.html":{}}}],["occured",{"_index":1622,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["offset",{"_index":1154,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["ok",{"_index":305,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CategoryDialogComponent.html":{}}}],["oncalorieschange",{"_index":317,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["oncalorieschange(event",{"_index":346,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["once",{"_index":87,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["ondestroy",{"_index":1891,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["one",{"_index":2421,"title":{},"body":{"components/PaymentComponent.html":{}}}],["oninit",{"_index":15,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["oninputchange",{"_index":586,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["oninputchange(event",{"_index":623,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["onnoclick",{"_index":265,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CategoryDialogComponent.html":{}}}],["onselect",{"_index":2526,"title":{},"body":{"components/PickTableDialogComponent.html":{}}}],["onsubmit",{"_index":1601,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["onyesclick",{"_index":530,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["opacity",{"_index":1148,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{},"miscellaneous/variables.html":{}}}],["opacity:[0,1",{"_index":1553,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["open",{"_index":2344,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["open/close",{"_index":321,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/NotificationsComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["openaddcategorydialog",{"_index":1900,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["openaddingredientdialog",{"_index":34,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["openaddmenudialog",{"_index":1473,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["openaddstaffdialog",{"_index":448,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["openbasket",{"_index":1064,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["opendialog",{"_index":1982,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["openeditcategorydialog",{"_index":1901,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["openeditcategorydialog(category",{"_index":1918,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["openeditmenudialog",{"_index":35,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["openeditmenudialog(ingredient",{"_index":97,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["openeditmenudialog(menu",{"_index":1921,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["openeditmenudialog(menu:menu",{"_index":1950,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["openeditmenudialog(staff",{"_index":473,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["opening",{"_index":93,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/KitchenMenuComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["opening/closing",{"_index":2070,"title":{},"body":{"components/OrderComponent.html":{}}}],["openingredientsdialog",{"_index":1902,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["openingredientsdialog(menu",{"_index":1923,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["openorderdialog",{"_index":2326,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["openorderdialog(order",{"_index":2342,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["opens",{"_index":470,"title":{},"body":{"components/AddStaffComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["openselecttabledialog",{"_index":1374,"title":{},"body":{"components/HomePageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["opensnackbar",{"_index":882,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["opensnackbar(message",{"_index":912,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["openstaffsalesdialog",{"_index":449,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["openstaffsalesdialog(staff",{"_index":477,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["opentracker",{"_index":1065,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["operations",{"_index":2183,"title":{},"body":{"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["option",{"_index":2018,"title":{},"body":{"components/NotificationsDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["optional",{"_index":51,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["options",{"_index":2050,"title":{},"body":{"components/OrderComponent.html":{}}}],["order",{"_index":191,"title":{"classes/Order.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["order's",{"_index":2092,"title":{},"body":{"components/OrderComponent.html":{}}}],["order'},{'name",{"_index":235,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["order).subscribe((order",{"_index":2274,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.component",{"_index":824,"title":{},"body":{"modules/AppModule.html":{}}}],["order.component.html",{"_index":2054,"title":{},"body":{"components/OrderComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["order.component.sass",{"_index":2053,"title":{},"body":{"components/OrderComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["order.component.ts",{"_index":2532,"title":{},"body":{"components/ReadyToOrderComponent.html":{},"coverage.html":{}}}],["order.component.ts:21",{"_index":2545,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["order.component.ts:26",{"_index":2534,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["order.component.ts:44",{"_index":2541,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["order.component.ts:55",{"_index":2539,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["order.component.ts:68",{"_index":2544,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["order.component.ts:84",{"_index":2536,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["order.component.ts:99",{"_index":2542,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["order.id",{"_index":2266,"title":{},"body":{"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["order.isconfirmed",{"_index":2280,"title":{},"body":{"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{}}}],["order.isdelivered",{"_index":2277,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.ispaid",{"_index":2310,"title":{},"body":{"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{}}}],["order.isready",{"_index":2370,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["order.meal",{"_index":2475,"title":{},"body":{"components/PaymentComponent.html":{}}}],["order.service",{"_index":943,"title":{},"body":{"components/BasketComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["order.total",{"_index":2143,"title":{},"body":{"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["order.waiterid",{"_index":2372,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["order/ready",{"_index":823,"title":{},"body":{"modules/AppModule.html":{},"components/ReadyToOrderComponent.html":{},"coverage.html":{}}}],["order_button_width",{"_index":2323,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["orderbtn",{"_index":2389,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["ordercomponent",{"_index":234,"title":{"components/OrderComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["orderdelivered",{"_index":2578,"title":{},"body":{"classes/Staff.html":{}}}],["ordered",{"_index":2040,"title":{},"body":{"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{}}}],["ordereditemstable",{"_index":2174,"title":{},"body":{"components/OrderComponent.html":{}}}],["orderedmealitems",{"_index":2055,"title":{},"body":{"components/OrderComponent.html":{}}}],["orderedmealitemssubject",{"_index":2056,"title":{},"body":{"components/OrderComponent.html":{}}}],["orderid",{"_index":2206,"title":{},"body":{"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{}}}],["orderplaced",{"_index":877,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{}}}],["orderplacedmessage",{"_index":985,"title":{},"body":{"components/BasketComponent.html":{}}}],["orderplacedtime",{"_index":2026,"title":{},"body":{"classes/Order.html":{},"components/OrdersListDisplayComponent.html":{}}}],["orderreview",{"_index":2515,"title":{},"body":{"components/PaymentComponent.html":{}}}],["orderreviewblock",{"_index":2517,"title":{},"body":{"components/PaymentComponent.html":{}}}],["orderreviewed",{"_index":2407,"title":{},"body":{"components/PaymentComponent.html":{}}}],["orders",{"_index":237,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["orders.filter((order",{"_index":2369,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["orders.foreach((order",{"_index":2304,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["orderservice",{"_index":887,"title":{"injectables/OrderService.html":{}},"body":{"components/BasketComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["orderslistdisplaycomponent",{"_index":236,"title":{"components/OrdersListDisplayComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ordersnackbar",{"_index":1033,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/LoginInputComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["orderstatus",{"_index":2314,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["orderstatustitle",{"_index":2312,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["ordersubject",{"_index":2057,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderService.html":{}}}],["ordertitle",{"_index":2387,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["ordertotal",{"_index":878,"title":{},"body":{"components/BasketComponent.html":{}}}],["ordertrackercomponent",{"_index":238,"title":{"components/OrderTrackerComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["orderwithcustomer",{"_index":2245,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderwithcustomer.customer",{"_index":2246,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderwithcustomer.ispaid",{"_index":2247,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderwithcustomer.total",{"_index":2248,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderwithcustomer.waiterid",{"_index":2249,"title":{},"body":{"injectables/OrderService.html":{}}}],["otp",{"_index":806,"title":{},"body":{"modules/AppModule.html":{},"classes/Login.html":{},"dependencies.html":{}}}],["out",{"_index":746,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["outlet",{"_index":720,"title":{},"body":{"components/AppComponent.html":{}}}],["outlet.activatedroutedata",{"_index":727,"title":{},"body":{"components/AppComponent.html":{}}}],["outline",{"_index":1665,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["outstanding",{"_index":2576,"title":{},"body":{"classes/Staff.html":{}}}],["overflow",{"_index":2177,"title":{},"body":{"components/OrderComponent.html":{}}}],["overview",{"_index":2893,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2827,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":523,"title":{},"body":{"components/AddStaffComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["page",{"_index":119,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["page'},{'name",{"_index":216,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["page.component",{"_index":763,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.html",{"_index":1372,"title":{},"body":{"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.sass",{"_index":1371,"title":{},"body":{"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":1370,"title":{},"body":{"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:15",{"_index":1375,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:17",{"_index":1520,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:27",{"_index":1533,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:32",{"_index":1377,"title":{},"body":{"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{}}}],["page.component.ts:37",{"_index":1378,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page.component.ts:39",{"_index":1530,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:48",{"_index":1376,"title":{},"body":{"components/HomePageComponent.html":{}}}],["page/home",{"_index":762,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"coverage.html":{}}}],["page/landing",{"_index":859,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page/select",{"_index":818,"title":{},"body":{"modules/AppModule.html":{},"components/LandingPageComponent.html":{},"components/SelectTableDialogComponent.html":{},"coverage.html":{}}}],["pages",{"_index":1538,"title":{},"body":{"components/LandingPageComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["paid",{"_index":2036,"title":{},"body":{"classes/Order.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{}}}],["panel",{"_index":1477,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["panelclass",{"_index":1032,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/LoginInputComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["panels",{"_index":65,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["pannel",{"_index":1353,"title":{},"body":{"components/ExpansionPannelComponent.html":{}}}],["pannel'},{'name",{"_index":213,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["pannel.component",{"_index":796,"title":{},"body":{"modules/AppModule.html":{}}}],["pannel.component.html",{"_index":1355,"title":{},"body":{"components/ExpansionPannelComponent.html":{}}}],["pannel.component.sass",{"_index":1354,"title":{},"body":{"components/ExpansionPannelComponent.html":{}}}],["pannel.component.ts",{"_index":1351,"title":{},"body":{"components/ExpansionPannelComponent.html":{},"coverage.html":{}}}],["pannel.component.ts:11",{"_index":1358,"title":{},"body":{"components/ExpansionPannelComponent.html":{}}}],["pannel.component.ts:23",{"_index":1359,"title":{},"body":{"components/ExpansionPannelComponent.html":{}}}],["pannel/expansion",{"_index":795,"title":{},"body":{"modules/AppModule.html":{},"components/ExpansionPannelComponent.html":{},"coverage.html":{}}}],["param",{"_index":121,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["parameters",{"_index":47,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["paramobject",{"_index":2758,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["params",{"_index":1107,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["params.keys",{"_index":1161,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["paramsobject",{"_index":1056,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["parent",{"_index":326,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/OrderComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SalesDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["parsed",{"_index":2335,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["parseint(date[0",{"_index":2492,"title":{},"body":{"components/PaymentComponent.html":{}}}],["parseint(date[1",{"_index":2495,"title":{},"body":{"components/PaymentComponent.html":{}}}],["parseint(truedatestring[0",{"_index":2493,"title":{},"body":{"components/PaymentComponent.html":{}}}],["parseint(truedatestring[1",{"_index":2494,"title":{},"body":{"components/PaymentComponent.html":{}}}],["particular",{"_index":76,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["pass",{"_index":1672,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["pass:focus",{"_index":1674,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["passed",{"_index":890,"title":{},"body":{"components/BasketComponent.html":{},"injectables/MenuFilterService.html":{}}}],["passing",{"_index":1115,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LoginInputComponent.html":{}}}],["password",{"_index":565,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"injectables/InputService.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{}}}],["path",{"_index":861,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":863,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pay",{"_index":2311,"title":{},"body":{"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{}}}],["payment",{"_index":241,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["payment.component.html",{"_index":2398,"title":{},"body":{"components/PaymentComponent.html":{}}}],["payment.component.sass",{"_index":2397,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymentcomponent",{"_index":240,"title":{"components/PaymentComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paymentgroup",{"_index":2402,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymentstepper",{"_index":2516,"title":{},"body":{"components/PaymentComponent.html":{}}}],["paymenttitle",{"_index":2514,"title":{},"body":{"components/PaymentComponent.html":{}}}],["pays",{"_index":2438,"title":{},"body":{"components/PaymentComponent.html":{}}}],["peanuts",{"_index":640,"title":{},"body":{"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["peoperty",{"_index":2444,"title":{},"body":{"components/PaymentComponent.html":{}}}],["per",{"_index":302,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"classes/Ingredient.html":{},"classes/Meal.html":{}}}],["perform",{"_index":323,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["performs",{"_index":2182,"title":{},"body":{"injectables/OrderService.html":{}}}],["perfrom",{"_index":2072,"title":{},"body":{"components/OrderComponent.html":{}}}],["permission",{"_index":2331,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["permissions",{"_index":2744,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["pick",{"_index":244,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["picking",{"_index":2525,"title":{},"body":{"components/PickTableDialogComponent.html":{}}}],["picktabledialogcomponent",{"_index":243,"title":{"components/PickTableDialogComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["picture",{"_index":424,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"classes/Menu.html":{}}}],["pictureurl",{"_index":1738,"title":{},"body":{"classes/Menu.html":{}}}],["pipe",{"_index":1349,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/InputService.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuFilterService.html":{},"components/MenusListDisplayComponent.html":{},"injectables/OrderService.html":{},"injectables/TableService.html":{},"components/WaiterMenuComponent.html":{}}}],["pipe(debouncetime(250",{"_index":2375,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["place",{"_index":974,"title":{},"body":{"components/BasketComponent.html":{}}}],["placed",{"_index":919,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"classes/Order.html":{}}}],["placeholder",{"_index":1576,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["placeorder",{"_index":883,"title":{},"body":{"components/BasketComponent.html":{}}}],["places",{"_index":917,"title":{},"body":{"components/BasketComponent.html":{}}}],["placing",{"_index":946,"title":{},"body":{"components/BasketComponent.html":{}}}],["please",{"_index":1023,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["pointer",{"_index":1402,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["polling",{"_index":2082,"title":{},"body":{"components/OrderComponent.html":{}}}],["pop",{"_index":63,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/LandingPageComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["popperjs/core",{"_index":2836,"title":{},"body":{"dependencies.html":{}}}],["pops",{"_index":2704,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["populating",{"_index":81,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["position",{"_index":152,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderComponent.html":{},"components/WaiterMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":896,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"injectables/CustomerService.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"components/PaymentComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["prepared",{"_index":2309,"title":{},"body":{"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["prepareroute",{"_index":716,"title":{},"body":{"components/AppComponent.html":{}}}],["prepareroute(outlet",{"_index":717,"title":{},"body":{"components/AppComponent.html":{}}}],["present",{"_index":366,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{}}}],["press",{"_index":74,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["price",{"_index":301,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"classes/Ingredient.html":{},"components/KitchenMenuComponent.html":{},"classes/Menu.html":{},"components/MenusListDisplayComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"classes/Staff.html":{}}}],["price(suggested",{"_index":421,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["price/item",{"_index":144,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["priceperitem",{"_index":1408,"title":{},"body":{"classes/Ingredient.html":{}}}],["prices",{"_index":2575,"title":{},"body":{"classes/Staff.html":{}}}],["private",{"_index":381,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/HomePageComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["proceed",{"_index":1625,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["production",{"_index":2907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profit",{"_index":361,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["project",{"_index":2856,"title":{},"body":{"index.html":{}}}],["promise",{"_index":1096,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["properties",{"_index":26,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"classes/selectedCategory.html":{}}}],["property",{"_index":2052,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/TablesListDisplayComponent.html":{}}}],["provide",{"_index":2392,"title":{},"body":{"components/PaymentComponent.html":{}}}],["provided",{"_index":2420,"title":{},"body":{"components/PaymentComponent.html":{}}}],["providedin",{"_index":1340,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["providers",{"_index":738,"title":{},"body":{"modules/AppModule.html":{},"components/PaymentComponent.html":{},"overview.html":{}}}],["providing",{"_index":1522,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{}}}],["public",{"_index":27,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["pulling",{"_index":2916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pure",{"_index":1218,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["purposed",{"_index":70,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["put",{"_index":895,"title":{},"body":{"components/BasketComponent.html":{},"injectables/CustomerService.html":{},"components/KitchenMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"injectables/TableService.html":{}}}],["qty",{"_index":2169,"title":{},"body":{"components/OrderComponent.html":{}}}],["quantity",{"_index":143,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"classes/Ingredient.html":{}}}],["queried",{"_index":1789,"title":{},"body":{"injectables/MenuCategoryService.html":{},"injectables/TableService.html":{}}}],["query",{"_index":1106,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["query(':enter",{"_index":1147,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"miscellaneous/variables.html":{}}}],["querying",{"_index":1450,"title":{},"body":{"injectables/InputService.html":{},"injectables/OrderService.html":{}}}],["queryparams",{"_index":1640,"title":{},"body":{"components/LoginInputComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["queryurl",{"_index":1463,"title":{},"body":{"injectables/InputService.html":{}}}],["quickaddbutton",{"_index":154,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["radius",{"_index":171,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["raleway",{"_index":519,"title":{},"body":{"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["random",{"_index":2603,"title":{},"body":{"injectables/StaffService.html":{}}}],["randomwaiter",{"_index":2622,"title":{},"body":{"injectables/StaffService.html":{}}}],["range",{"_index":345,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["reactive",{"_index":2110,"title":{},"body":{"components/OrderComponent.html":{}}}],["reactiveformsmodule",{"_index":827,"title":{},"body":{"modules/AppModule.html":{}}}],["reactively",{"_index":1865,"title":{},"body":{"injectables/MenuService.html":{}}}],["read",{"_index":1414,"title":{},"body":{"injectables/IngredientService.html":{},"injectables/MealService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{}}}],["readonly",{"_index":1302,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuService.html":{},"injectables/TableService.html":{}}}],["ready",{"_index":247,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Table.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["readytoorder",{"_index":1506,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["readytoordercomponent",{"_index":246,"title":{"components/ReadyToOrderComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["real",{"_index":2080,"title":{},"body":{"components/OrderComponent.html":{}}}],["red",{"_index":1489,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["redirecting",{"_index":1609,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["redirectto",{"_index":862,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reenie",{"_index":1237,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["ref",{"_index":275,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderTrackerComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["reference",{"_index":1526,"title":{},"body":{"components/LandingPageComponent.html":{},"components/OrderComponent.html":{}}}],["references",{"_index":543,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"injectables/StaffService.html":{}}}],["refresh",{"_index":1329,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{}}}],["refreshed",{"_index":1332,"title":{},"body":{"injectables/CustomerService.html":{}}}],["refreshes",{"_index":2432,"title":{},"body":{"components/PaymentComponent.html":{}}}],["refreshneeded",{"_index":1010,"title":{},"body":{"components/CallWaiterComponent.html":{},"injectables/CustomerService.html":{},"injectables/MenuFilterService.html":{},"injectables/TableService.html":{}}}],["refreshtimer",{"_index":444,"title":{},"body":{"components/AddStaffComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["related",{"_index":2743,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["relative",{"_index":1397,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{},"components/OrderComponent.html":{}}}],["relativelinkresolution",{"_index":867,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["relevant",{"_index":2700,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["reload",{"_index":2868,"title":{},"body":{"index.html":{}}}],["removable",{"_index":579,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["remove",{"_index":587,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/OrderComponent.html":{}}}],["remove(allergen",{"_index":627,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["remove(meal",{"_index":933,"title":{},"body":{"components/BasketComponent.html":{}}}],["removed",{"_index":630,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{}}}],["removemeal",{"_index":1066,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["removemeal(menuitem",{"_index":1121,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["removes",{"_index":629,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/NotificationsDialogComponent.html":{}}}],["removeunderline",{"_index":1586,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["removeunderline:hover",{"_index":1588,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["reorder",{"_index":1704,"title":{},"body":{"components/ManagerMenuComponent.html":{}}}],["repeat",{"_index":1229,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"injectables/MenuService.html":{},"injectables/StaffService.html":{}}}],["repeat(auto",{"_index":1498,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["reqest",{"_index":2440,"title":{},"body":{"components/PaymentComponent.html":{}}}],["request",{"_index":460,"title":{},"body":{"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["requests",{"_index":455,"title":{},"body":{"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["requets",{"_index":1075,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["requetsts",{"_index":1460,"title":{},"body":{"injectables/InputService.html":{}}}],["require",{"_index":2825,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":2905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requst",{"_index":1812,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["reset",{"_index":588,"title":{},"body":{"components/AllergensChipsComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["resets",{"_index":632,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["resize",{"_index":2324,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["resizes",{"_index":2339,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["response",{"_index":1467,"title":{},"body":{"injectables/InputService.html":{},"injectables/MenuFilterService.html":{},"injectables/TableService.html":{}}}],["restaurant",{"_index":1714,"title":{},"body":{"injectables/MealService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{}}}],["restaurant_menu",{"_index":2548,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["restaurantorderisconfirmedurl",{"_index":2279,"title":{},"body":{"injectables/OrderService.html":{}}}],["restaurantorderisdeliveredurl",{"_index":2276,"title":{},"body":{"injectables/OrderService.html":{}}}],["restauranttablesneedhelpurl",{"_index":2686,"title":{},"body":{"injectables/TableService.html":{}}}],["restauranttablesunoccupiedurl",{"_index":2683,"title":{},"body":{"injectables/TableService.html":{}}}],["restauranttablesurl",{"_index":2638,"title":{},"body":{"injectables/TableService.html":{}}}],["restaurantwebapiurl",{"_index":1303,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{}}}],["restaurantwebapp",{"_index":721,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["result",{"_index":259,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/selectedCategory.html":{},"miscellaneous/variables.html":{}}}],["result.concat(\"0",{"_index":698,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["result.concat(\"1",{"_index":697,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["result.concat(string(this.calories",{"_index":701,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["result.concat(this.getallergens",{"_index":700,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["result.ingredients",{"_index":1957,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["results",{"_index":261,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"classes/selectedCategory.html":{},"miscellaneous/variables.html":{}}}],["retuns",{"_index":2537,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["return",{"_index":297,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/WaiterMenuComponent.html":{}}}],["returned",{"_index":925,"title":{},"body":{"components/BasketComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["returns",{"_index":78,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["reuqest",{"_index":1108,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["reusable",{"_index":2316,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["review",{"_index":2426,"title":{},"body":{"components/PaymentComponent.html":{}}}],["revieworder",{"_index":2452,"title":{},"body":{"components/PaymentComponent.html":{}}}],["reviewordergroup",{"_index":2403,"title":{},"body":{"components/PaymentComponent.html":{}}}],["rgb(230",{"_index":1366,"title":{},"body":{"components/ExpansionPannelComponent.html":{}}}],["rgb(38",{"_index":1656,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["rgb(59",{"_index":1224,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["rgba(0",{"_index":1391,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["rgba(136",{"_index":1662,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["rgba(224,64,251",{"_index":1680,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["right",{"_index":168,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/PaymentComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["root",{"_index":713,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["root'},{'name",{"_index":200,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["route",{"_index":1071,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["route's",{"_index":2428,"title":{},"body":{"components/PaymentComponent.html":{}}}],["routeanimations",{"_index":725,"title":{},"body":{"components/AppComponent.html":{}}}],["router",{"_index":1073,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["routermodule",{"_index":858,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(app_routes",{"_index":866,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":718,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":857,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/HomePageComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/SelectTableDialogComponent.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":1605,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["routing.module",{"_index":753,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":856,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":75,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/KitchenMenuComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["rows",{"_index":2340,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["run",{"_index":2863,"title":{},"body":{"index.html":{}}}],["running",{"_index":2883,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":379,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":378,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"injectables/CustomerService.html":{},"injectables/InputService.html":{},"components/LandingPageComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["sa.total",{"_index":502,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["sale",{"_index":499,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["sale.foreach((sa",{"_index":501,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["sale.length",{"_index":500,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["sales",{"_index":249,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["salesdelivered",{"_index":525,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["salesdialogcomponent",{"_index":248,"title":{"components/SalesDialogComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["salesprice",{"_index":2579,"title":{},"body":{"classes/Staff.html":{}}}],["sans",{"_index":520,"title":{},"body":{"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["save",{"_index":2063,"title":{},"body":{"components/OrderComponent.html":{}}}],["save's",{"_index":2085,"title":{},"body":{"components/OrderComponent.html":{}}}],["save(order",{"_index":2083,"title":{},"body":{"components/OrderComponent.html":{}}}],["sc",{"_index":404,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["sc.id",{"_index":398,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["scale",{"_index":1546,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["scale(0",{"_index":2910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scale(1",{"_index":2914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["screen",{"_index":1610,"title":{},"body":{"components/LoginInputComponent.html":{},"components/OrdersListDisplayComponent.html":{},"miscellaneous/variables.html":{}}}],["scroll",{"_index":2179,"title":{},"body":{"components/OrderComponent.html":{}}}],["scrollbar",{"_index":2176,"title":{},"body":{"components/OrderComponent.html":{}}}],["scrollpositionrestoration",{"_index":869,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["second",{"_index":2081,"title":{},"body":{"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["section",{"_index":1679,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["see",{"_index":1558,"title":{},"body":{"components/LandingPageComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["seeds",{"_index":436,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{},"classes/Menu.html":{}}}],["selcting",{"_index":1042,"title":{},"body":{"components/CategoryDialogComponent.html":{}}}],["select",{"_index":251,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["selectable",{"_index":580,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["selectcategory",{"_index":1067,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["selectcategory(category",{"_index":1123,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["selected",{"_index":338,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ManagerMenuComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["selected(event",{"_index":633,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["selectedcategory",{"_index":312,"title":{"classes/selectedCategory.html":{}},"body":{"components/AddMenuDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/MenuService.html":{},"injectables/StaffService.html":{},"coverage.html":{},"classes/selectedCategory.html":{}}}],["selectedingredient",{"_index":417,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["selecteditems",{"_index":993,"title":{},"body":{"components/BasketComponent.html":{}}}],["selecteditemstitle",{"_index":980,"title":{},"body":{"components/BasketComponent.html":{}}}],["selectedmeals",{"_index":1057,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["selectedmeals.length",{"_index":1212,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["selectedtable",{"_index":526,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["selection",{"_index":673,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{}}}],["selections",{"_index":936,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["selects",{"_index":1125,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["selecttabledialogcomponent",{"_index":250,"title":{"components/SelectTableDialogComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["seletected",{"_index":900,"title":{},"body":{"components/BasketComponent.html":{}}}],["send",{"_index":2087,"title":{},"body":{"components/OrderComponent.html":{}}}],["sends",{"_index":1851,"title":{},"body":{"injectables/MenuService.html":{},"components/OrderComponent.html":{}}}],["separatorkeyscodes",{"_index":581,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["sepparate",{"_index":665,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["serif",{"_index":521,"title":{},"body":{"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["serve",{"_index":2864,"title":{},"body":{"index.html":{}}}],["served",{"_index":2038,"title":{},"body":{"classes/Order.html":{}}}],["server",{"_index":2845,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["servic",{"_index":897,"title":{},"body":{"components/BasketComponent.html":{}}}],["service",{"_index":53,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/IngredientService.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{}}}],["services",{"_index":44,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["serving",{"_index":2046,"title":{},"body":{"classes/Order.html":{},"classes/Table.html":{}}}],["sesame",{"_index":435,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["sesameseeds",{"_index":1739,"title":{},"body":{"classes/Menu.html":{}}}],["session",{"_index":1461,"title":{},"body":{"injectables/InputService.html":{},"classes/Login.html":{}}}],["set",{"_index":84,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["setcalories",{"_index":266,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{}}}],["setcalories(value",{"_index":280,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{}}}],["setdata",{"_index":267,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{}}}],["setdata(ingredient",{"_index":286,"title":{},"body":{"components/AddIngredientDialogComponent.html":{}}}],["setdata(menu",{"_index":355,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["setdata(menu:menu",{"_index":391,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["setdata(staff",{"_index":538,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["setmenus",{"_index":1835,"title":{},"body":{"injectables/MenuService.html":{}}}],["setmenus(menus",{"_index":1852,"title":{},"body":{"injectables/MenuService.html":{}}}],["sets",{"_index":283,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"injectables/MenuService.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["settable",{"_index":531,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["settablehelped",{"_index":2002,"title":{},"body":{"components/NotificationsDialogComponent.html":{}}}],["settablehelped(table",{"_index":2007,"title":{},"body":{"components/NotificationsDialogComponent.html":{}}}],["shadow",{"_index":1246,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{}}}],["share",{"_index":1795,"title":{},"body":{"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["shopping",{"_index":969,"title":{},"body":{"components/BasketComponent.html":{}}}],["shopping_cart",{"_index":1211,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["show",{"_index":1974,"title":{},"body":{"components/NotificationsComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["showerror",{"_index":2395,"title":{},"body":{"components/PaymentComponent.html":{}}}],["shows",{"_index":2549,"title":{},"body":{"components/SalesDialogComponent.html":{}}}],["sidenav",{"_index":151,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/ManagerMenuComponent.html":{}}}],["size",{"_index":177,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["sizing",{"_index":1666,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["slider",{"_index":285,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{}}}],["snack",{"_index":894,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["snackbar",{"_index":893,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["solid",{"_index":1667,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["sorder",{"_index":1829,"title":{},"body":{"injectables/MenuService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"index.html":{},"classes/selectedCategory.html":{}}}],["soya",{"_index":437,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["spacer",{"_index":173,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["spacing",{"_index":1661,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["spec\\.ts",{"_index":2906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":2706,"title":{},"body":{"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["specified",{"_index":2243,"title":{},"body":{"injectables/OrderService.html":{}}}],["spinner",{"_index":846,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../environment.prod.ts",{"_index":2902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../routeanimations.ts",{"_index":2904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":2901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":855,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":712,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":722,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":719,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":747,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/category",{"_index":1037,"title":{},"body":{"components/CategoryDialogComponent.html":{},"coverage.html":{}}}],["src/app/customer",{"_index":567,"title":{},"body":{"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"coverage.html":{}}}],["src/app/customer.service.ts",{"_index":1300,"title":{},"body":{"injectables/CustomerService.html":{},"coverage.html":{}}}],["src/app/customer.service.ts:20",{"_index":1334,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/customer.service.ts:25",{"_index":1328,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/customer.service.ts:30",{"_index":1337,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/customer.service.ts:32",{"_index":1312,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/customer.service.ts:46",{"_index":1323,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/customer.service.ts:56",{"_index":1316,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/customer.service.ts:66",{"_index":1318,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/customer.service.ts:78",{"_index":1326,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/customer.service.ts:87",{"_index":1320,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/customer.service.ts:97",{"_index":1322,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/app/home",{"_index":1369,"title":{},"body":{"components/HomePageComponent.html":{},"components/SelectTableDialogComponent.html":{},"coverage.html":{}}}],["src/app/ingredient.service.ts",{"_index":1413,"title":{},"body":{"injectables/IngredientService.html":{},"coverage.html":{}}}],["src/app/ingredient.service.ts:12",{"_index":1420,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/ingredient.service.ts:21",{"_index":1432,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/ingredient.service.ts:26",{"_index":1428,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/ingredient.service.ts:34",{"_index":1426,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/ingredient.service.ts:42",{"_index":1422,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/ingredient.service.ts:50",{"_index":1430,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/ingredient.service.ts:58",{"_index":1424,"title":{},"body":{"injectables/IngredientService.html":{}}}],["src/app/kitchen",{"_index":1468,"title":{},"body":{"components/KitchenMenuComponent.html":{},"coverage.html":{}}}],["src/app/landing",{"_index":1515,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/login",{"_index":1443,"title":{},"body":{"injectables/InputService.html":{},"components/LoginInputComponent.html":{},"coverage.html":{}}}],["src/app/manager",{"_index":10,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/ManagerMenuComponent.html":{},"components/SalesDialogComponent.html":{},"coverage.html":{}}}],["src/app/meal.service.ts",{"_index":1713,"title":{},"body":{"injectables/MealService.html":{},"coverage.html":{}}}],["src/app/meal.service.ts:17",{"_index":1720,"title":{},"body":{"injectables/MealService.html":{}}}],["src/app/meal.service.ts:25",{"_index":1722,"title":{},"body":{"injectables/MealService.html":{}}}],["src/app/meal.service.ts:33",{"_index":1724,"title":{},"body":{"injectables/MealService.html":{}}}],["src/app/meal.service.ts:41",{"_index":1726,"title":{},"body":{"injectables/MealService.html":{}}}],["src/app/meal.service.ts:49",{"_index":1728,"title":{},"body":{"injectables/MealService.html":{}}}],["src/app/menu",{"_index":1774,"title":{},"body":{"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"coverage.html":{}}}],["src/app/menu.service.ts",{"_index":1824,"title":{},"body":{"injectables/MenuService.html":{},"coverage.html":{}}}],["src/app/menu.service.ts:107",{"_index":1847,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:115",{"_index":1843,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:133",{"_index":1858,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:145",{"_index":1855,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:22",{"_index":1868,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:24",{"_index":1869,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:25",{"_index":1859,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:31",{"_index":1863,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:32",{"_index":1866,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:37",{"_index":1850,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:44",{"_index":1861,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:54",{"_index":1853,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:56",{"_index":1837,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:64",{"_index":1844,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:75",{"_index":1849,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:83",{"_index":1841,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menu.service.ts:96",{"_index":1839,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/menus",{"_index":1437,"title":{},"body":{"components/IngredientsDialogComponent.html":{},"components/MenusListDisplayComponent.html":{},"coverage.html":{}}}],["src/app/order.service.ts",{"_index":2181,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/app/order.service.ts:101",{"_index":2199,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:113",{"_index":2210,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:125",{"_index":2205,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:141",{"_index":2223,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:149",{"_index":2222,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:157",{"_index":2230,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:165",{"_index":2221,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:182",{"_index":2232,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:20",{"_index":2241,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:200",{"_index":2219,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:211",{"_index":2212,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:220",{"_index":2229,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:236",{"_index":2226,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:250",{"_index":2208,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:258",{"_index":2217,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:26",{"_index":2233,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:31",{"_index":2242,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:36",{"_index":2236,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:41",{"_index":2239,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:46",{"_index":2235,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:49",{"_index":2197,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:61",{"_index":2213,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:68",{"_index":2214,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/order.service.ts:79",{"_index":2203,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/app/orders",{"_index":2315,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"coverage.html":{}}}],["src/app/routeanimations.ts",{"_index":2803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/staff.service.ts",{"_index":2590,"title":{},"body":{"injectables/StaffService.html":{},"coverage.html":{}}}],["src/app/staff.service.ts:20",{"_index":2597,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/staff.service.ts:33",{"_index":2615,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/staff.service.ts:35",{"_index":2614,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/staff.service.ts:37",{"_index":2617,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/staff.service.ts:42",{"_index":2609,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/staff.service.ts:49",{"_index":2610,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/staff.service.ts:57",{"_index":2607,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/staff.service.ts:65",{"_index":2605,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/staff.service.ts:73",{"_index":2599,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/staff.service.ts:81",{"_index":2612,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/staff.service.ts:88",{"_index":2601,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/staff.service.ts:92",{"_index":2600,"title":{},"body":{"injectables/StaffService.html":{}}}],["src/app/table.service.ts",{"_index":2636,"title":{},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["src/app/table.service.ts:108",{"_index":2662,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:126",{"_index":2657,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:139",{"_index":2653,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:153",{"_index":2652,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:167",{"_index":2650,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:182",{"_index":2649,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:186",{"_index":2660,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:22",{"_index":2667,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:27",{"_index":2664,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:32",{"_index":2670,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:37",{"_index":2663,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:42",{"_index":2671,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:49",{"_index":2665,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:54",{"_index":2669,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:57",{"_index":2647,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:71",{"_index":2656,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:81",{"_index":2658,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/table.service.ts:94",{"_index":2655,"title":{},"body":{"injectables/TableService.html":{}}}],["src/app/tables",{"_index":2699,"title":{},"body":{"components/TablesListDisplayComponent.html":{},"coverage.html":{}}}],["src/app/waiter",{"_index":306,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/PickTableDialogComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["src/assets/mockdb.json",{"_index":2875,"title":{},"body":{"index.html":{}}}],["src/environments/environment.prod.ts",{"_index":2810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/models/customer.ts",{"_index":1045,"title":{},"body":{"classes/Customer.html":{},"coverage.html":{}}}],["src/models/customer.ts:12",{"_index":1047,"title":{},"body":{"classes/Customer.html":{}}}],["src/models/customer.ts:17",{"_index":1050,"title":{},"body":{"classes/Customer.html":{}}}],["src/models/customer.ts:22",{"_index":1048,"title":{},"body":{"classes/Customer.html":{}}}],["src/models/ingredient.ts",{"_index":1407,"title":{},"body":{"classes/Ingredient.html":{},"coverage.html":{}}}],["src/models/ingredient.ts:14",{"_index":1410,"title":{},"body":{"classes/Ingredient.html":{}}}],["src/models/ingredient.ts:19",{"_index":1412,"title":{},"body":{"classes/Ingredient.html":{}}}],["src/models/ingredient.ts:24",{"_index":1411,"title":{},"body":{"classes/Ingredient.html":{}}}],["src/models/ingredient.ts:9",{"_index":1409,"title":{},"body":{"classes/Ingredient.html":{}}}],["src/models/login.ts",{"_index":1589,"title":{},"body":{"classes/Login.html":{},"coverage.html":{}}}],["src/models/login.ts:14",{"_index":1595,"title":{},"body":{"classes/Login.html":{}}}],["src/models/login.ts:19",{"_index":1594,"title":{},"body":{"classes/Login.html":{}}}],["src/models/login.ts:24",{"_index":1590,"title":{},"body":{"classes/Login.html":{}}}],["src/models/login.ts:29",{"_index":1596,"title":{},"body":{"classes/Login.html":{}}}],["src/models/login.ts:34",{"_index":1592,"title":{},"body":{"classes/Login.html":{}}}],["src/models/login.ts:39",{"_index":1593,"title":{},"body":{"classes/Login.html":{}}}],["src/models/login.ts:9",{"_index":1591,"title":{},"body":{"classes/Login.html":{}}}],["src/models/meal.ts",{"_index":1707,"title":{},"body":{"classes/Meal.html":{},"coverage.html":{}}}],["src/models/meal.ts:12",{"_index":1709,"title":{},"body":{"classes/Meal.html":{}}}],["src/models/meal.ts:17",{"_index":1710,"title":{},"body":{"classes/Meal.html":{}}}],["src/models/meal.ts:22",{"_index":1712,"title":{},"body":{"classes/Meal.html":{}}}],["src/models/meal.ts:27",{"_index":1711,"title":{},"body":{"classes/Meal.html":{}}}],["src/models/menu.ts",{"_index":1736,"title":{},"body":{"classes/Menu.html":{},"coverage.html":{}}}],["src/models/menu.ts:102",{"_index":1764,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:107",{"_index":1763,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:112",{"_index":1766,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:117",{"_index":1741,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:12",{"_index":1749,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:122",{"_index":1767,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:127",{"_index":1750,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:132",{"_index":1751,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:17",{"_index":1758,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:22",{"_index":1742,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:27",{"_index":1765,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:32",{"_index":1745,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:37",{"_index":1762,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:42",{"_index":1761,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:47",{"_index":1760,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:52",{"_index":1743,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:57",{"_index":1748,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:62",{"_index":1744,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:67",{"_index":1746,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:72",{"_index":1747,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:77",{"_index":1753,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:82",{"_index":1754,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:87",{"_index":1755,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:92",{"_index":1756,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menu.ts:97",{"_index":1759,"title":{},"body":{"classes/Menu.html":{}}}],["src/models/menucategory.ts",{"_index":1770,"title":{},"body":{"classes/MenuCategory.html":{},"coverage.html":{}}}],["src/models/menucategory.ts:13",{"_index":1771,"title":{},"body":{"classes/MenuCategory.html":{}}}],["src/models/menucategory.ts:8",{"_index":1772,"title":{},"body":{"classes/MenuCategory.html":{}}}],["src/models/order.ts",{"_index":2019,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/models/order.ts:15",{"_index":2031,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.ts:20",{"_index":2039,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.ts:25",{"_index":2028,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.ts:30",{"_index":2034,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.ts:35",{"_index":2032,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.ts:40",{"_index":2037,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.ts:45",{"_index":2042,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.ts:50",{"_index":2045,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.ts:55",{"_index":2035,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.ts:60",{"_index":2043,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.ts:65",{"_index":2041,"title":{},"body":{"classes/Order.html":{}}}],["src/models/order.ts:70",{"_index":2029,"title":{},"body":{"classes/Order.html":{}}}],["src/models/selectedcategory.ts",{"_index":2822,"title":{},"body":{"coverage.html":{},"classes/selectedCategory.html":{}}}],["src/models/selectedcategory.ts:13",{"_index":2897,"title":{},"body":{"classes/selectedCategory.html":{}}}],["src/models/selectedcategory.ts:8",{"_index":2898,"title":{},"body":{"classes/selectedCategory.html":{}}}],["src/models/staff.ts",{"_index":2574,"title":{},"body":{"classes/Staff.html":{},"coverage.html":{}}}],["src/models/staff.ts:10",{"_index":2582,"title":{},"body":{"classes/Staff.html":{}}}],["src/models/staff.ts:15",{"_index":2580,"title":{},"body":{"classes/Staff.html":{}}}],["src/models/staff.ts:20",{"_index":2588,"title":{},"body":{"classes/Staff.html":{}}}],["src/models/staff.ts:25",{"_index":2585,"title":{},"body":{"classes/Staff.html":{}}}],["src/models/staff.ts:30",{"_index":2589,"title":{},"body":{"classes/Staff.html":{}}}],["src/models/staff.ts:35",{"_index":2583,"title":{},"body":{"classes/Staff.html":{}}}],["src/models/staff.ts:40",{"_index":2586,"title":{},"body":{"classes/Staff.html":{}}}],["src/models/staff.ts:45",{"_index":2584,"title":{},"body":{"classes/Staff.html":{}}}],["src/models/table.ts",{"_index":2624,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/models/table.ts:13",{"_index":2634,"title":{},"body":{"classes/Table.html":{}}}],["src/models/table.ts:18",{"_index":2629,"title":{},"body":{"classes/Table.html":{}}}],["src/models/table.ts:23",{"_index":2632,"title":{},"body":{"classes/Table.html":{}}}],["src/models/table.ts:28",{"_index":2631,"title":{},"body":{"classes/Table.html":{}}}],["src/models/table.ts:33",{"_index":2628,"title":{},"body":{"classes/Table.html":{}}}],["src/models/table.ts:38",{"_index":2635,"title":{},"body":{"classes/Table.html":{}}}],["src/test.ts",{"_index":2823,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staff",{"_index":195,"title":{"classes/Staff.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["staff's",{"_index":1606,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["staff'},{'name",{"_index":193,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["staff.component",{"_index":842,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["staff.component.html",{"_index":442,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.component.sass",{"_index":441,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.component.ts",{"_index":440,"title":{},"body":{"components/AddStaffComponent.html":{},"coverage.html":{}}}],["staff.component.ts:117",{"_index":478,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.component.ts:123",{"_index":457,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.component.ts:18",{"_index":452,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.component.ts:27",{"_index":480,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.component.ts:32",{"_index":484,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.component.ts:33",{"_index":479,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.component.ts:34",{"_index":485,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.component.ts:35",{"_index":483,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.component.ts:43",{"_index":458,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.component.ts:69",{"_index":469,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.component.ts:96",{"_index":474,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.email",{"_index":506,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.id",{"_index":2621,"title":{},"body":{"injectables/StaffService.html":{}}}],["staff.password",{"_index":507,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff.service",{"_index":487,"title":{},"body":{"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["staff.username",{"_index":505,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staff/add",{"_index":439,"title":{},"body":{"components/AddStaffComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["staff/sales",{"_index":854,"title":{},"body":{"modules/AppModule.html":{},"components/SalesDialogComponent.html":{},"coverage.html":{}}}],["staff:staff,title:string",{"_index":554,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["staffid",{"_index":1641,"title":{},"body":{"components/LoginInputComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["stafflogin",{"_index":1584,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["staffs",{"_index":445,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["staffservice",{"_index":451,"title":{"injectables/StaffService.html":{}},"body":{"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/OrdersListDisplayComponent.html":{},"injectables/StaffService.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["stafftitle",{"_index":516,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["stagger",{"_index":1136,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["stagger('100ms",{"_index":1149,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["started",{"_index":2855,"title":{"index.html":{}},"body":{}}],["startwith",{"_index":671,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["startwith(null",{"_index":677,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["state",{"_index":2215,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TableService.html":{}}}],["statements",{"_index":2767,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":2351,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["stating",{"_index":1621,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["status",{"_index":2020,"title":{},"body":{"classes/Order.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["stepper",{"_index":2396,"title":{},"body":{"components/PaymentComponent.html":{}}}],["stepper'},{'name",{"_index":242,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["stepper_global_options",{"_index":2393,"title":{},"body":{"components/PaymentComponent.html":{}}}],["steps",{"_index":2511,"title":{},"body":{"components/PaymentComponent.html":{}}}],["still",{"_index":1026,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["stock",{"_index":118,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/ManagerMenuComponent.html":{}}}],["store",{"_index":2237,"title":{},"body":{"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"injectables/TableService.html":{}}}],["string",{"_index":296,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"classes/selectedCategory.html":{}}}],["stt",{"_index":510,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["style",{"_index":1137,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["style({opacity:1",{"_index":2913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["styleurls",{"_index":21,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["subject",{"_index":370,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/CallWaiterComponent.html":{},"injectables/CustomerService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/PaymentComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["subjected",{"_index":103,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["submit",{"_index":1396,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["submit2",{"_index":1404,"title":{},"body":{"components/HomePageComponent.html":{}}}],["submitselect",{"_index":2531,"title":{},"body":{"components/PickTableDialogComponent.html":{}}}],["subscribe",{"_index":2006,"title":{},"body":{"components/NotificationsDialogComponent.html":{},"injectables/OrderService.html":{}}}],["subscribe((a",{"_index":1701,"title":{},"body":{"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["subscribe((ingredients",{"_index":1946,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["subscribe((iscat",{"_index":400,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["subscribe((menu",{"_index":1876,"title":{},"body":{"injectables/MenuService.html":{}}}],["subscribe((menucategories",{"_index":384,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["subscribe((menulist",{"_index":1873,"title":{},"body":{"injectables/MenuService.html":{}}}],["subscribe((menus",{"_index":1947,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["subscribe((neworder",{"_index":2133,"title":{},"body":{"components/OrderComponent.html":{}}}],["subscribe((order",{"_index":2251,"title":{},"body":{"injectables/OrderService.html":{}}}],["subscribe((orders",{"_index":2244,"title":{},"body":{"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{}}}],["subscribe((table",{"_index":2677,"title":{},"body":{"injectables/TableService.html":{}}}],["subscribe((tables",{"_index":2673,"title":{},"body":{"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{}}}],["subscribe((w",{"_index":2376,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["subscribed",{"_index":1105,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"injectables/TableService.html":{}}}],["subscribes",{"_index":920,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{}}}],["subscribing",{"_index":461,"title":{},"body":{"components/AddStaffComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["subscription",{"_index":446,"title":{},"body":{"components/AddStaffComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["subscriptionmenus",{"_index":2058,"title":{},"body":{"components/OrderComponent.html":{}}}],["suggested",{"_index":344,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"classes/Menu.html":{}}}],["suggestedpricerange",{"_index":313,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["suggestedpricerange[0",{"_index":422,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["suggestedpricerange[1",{"_index":423,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["sulphites",{"_index":431,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"classes/Menu.html":{}}}],["sum",{"_index":2117,"title":{},"body":{"components/OrderComponent.html":{}}}],["summing",{"_index":359,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["support",{"_index":2889,"title":{},"body":{"modules.html":{}}}],["susbcribes",{"_index":2430,"title":{},"body":{"components/PaymentComponent.html":{}}}],["svg",{"_index":2890,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":1695,"title":{},"body":{"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["switchmap((dialogresult",{"_index":1699,"title":{},"body":{"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["system",{"_index":2560,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["table",{"_index":245,"title":{"classes/Table.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["table.isready",{"_index":964,"title":{},"body":{"components/BasketComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["table.needshelp",{"_index":1005,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["table.ready",{"_index":2540,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["table.service",{"_index":553,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/ManagerMenuComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["table.tablenumber",{"_index":566,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{}}}],["table.waiterid",{"_index":963,"title":{},"body":{"components/BasketComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["table/:id",{"_index":865,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["tablebut",{"_index":1510,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["tablebutcol",{"_index":1495,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["tablehead",{"_index":1971,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["tablelist",{"_index":527,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["tablenumber",{"_index":879,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/OrderTrackerComponent.html":{},"components/ReadyToOrderComponent.html":{},"classes/Table.html":{},"components/TablesListDisplayComponent.html":{}}}],["tablenumberinput",{"_index":2173,"title":{},"body":{"components/OrderComponent.html":{}}}],["tables",{"_index":253,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["tables.filter(table",{"_index":2730,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["tables.length",{"_index":1998,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["tableselection",{"_index":2573,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["tableservice",{"_index":528,"title":{"injectables/TableService.html":{}},"body":{"components/AddStaffDialogComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/ManagerMenuComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{}}}],["tableslistdisplaycomponent",{"_index":252,"title":{"components/TablesListDisplayComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2826,"title":{},"body":{"coverage.html":{}}}],["tablesubject",{"_index":2639,"title":{},"body":{"injectables/TableService.html":{}}}],["tabletitle",{"_index":175,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["tacker",{"_index":1119,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["take",{"_index":2348,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["taked",{"_index":1521,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["taking",{"_index":1614,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["tap",{"_index":1339,"title":{},"body":{"injectables/CustomerService.html":{},"components/LandingPageComponent.html":{},"injectables/MenuFilterService.html":{},"components/MenusListDisplayComponent.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{}}}],["targets",{"_index":1544,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["tasked",{"_index":42,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["teal",{"_index":1226,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["temp",{"_index":1821,"title":{},"body":{"injectables/MenuFilterService.html":{},"components/PaymentComponent.html":{}}}],["temp[0",{"_index":2488,"title":{},"body":{"components/PaymentComponent.html":{}}}],["temp[1",{"_index":2489,"title":{},"body":{"components/PaymentComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["templateurl",{"_index":23,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["test",{"_index":2886,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2885,"title":{},"body":{"index.html":{}}}],["text",{"_index":981,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["tha",{"_index":2414,"title":{},"body":{"components/PaymentComponent.html":{}}}],["theme",{"_index":1528,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this._filter(allergen",{"_index":679,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this._formbuilder.group",{"_index":2465,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this._refreshneeded",{"_index":1341,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuFilterService.html":{},"injectables/TableService.html":{}}}],["this._refreshneeded$.next",{"_index":1350,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/TableService.html":{}}}],["this._refreshneeded.next",{"_index":1823,"title":{},"body":{"injectables/MenuFilterService.html":{},"injectables/OrderService.html":{}}}],["this.addingredients(menu.id",{"_index":1877,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.allallergens",{"_index":695,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.allallergens.filter(allergen",{"_index":693,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.allallergens.slice",{"_index":680,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.allergeninput.nativeelement.value",{"_index":690,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.allergens.includes(allergen",{"_index":696,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.allergens.indexof(allergen",{"_index":687,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.allergens.push(event.option.viewvalue",{"_index":689,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.allergens.push(value.trim",{"_index":684,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.allergens.splice(index",{"_index":688,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.allergensctrl.setvalue(null",{"_index":686,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.allergensctrl.valuechanges.pipe",{"_index":676,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.calories",{"_index":699,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.categories",{"_index":385,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/MenusListDisplayComponent.html":{}}}],["this.categories[0",{"_index":1164,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["this.categoryservice.categories$.subscribe((categories",{"_index":1939,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.categoryservice.createnewcategory(result).subscribe",{"_index":1964,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.categoryservice.deletecategory(category).subscribe",{"_index":1963,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.categoryservice.updatecategory(result).subscribe",{"_index":1962,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.catsubscription",{"_index":1937,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.columns",{"_index":2377,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["this.correct",{"_index":1647,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["this.correctinputs",{"_index":2459,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.createnewcustomer",{"_index":2567,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["this.createnewstaff",{"_index":560,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["this.currentstaff",{"_index":2695,"title":{},"body":{"injectables/TableService.html":{}}}],["this.customer",{"_index":2564,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["this.customer.orders",{"_index":2566,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["this.customer.table",{"_index":2565,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["this.customerid",{"_index":949,"title":{},"body":{"components/BasketComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["this.customerinterface.paramsobject.params.selectedtable",{"_index":1017,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["this.customerinterfacecomponent.filter(this.getallergensandcalories",{"_index":702,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.customerinterfacecomponent.findcategoryitems",{"_index":703,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.customerservice.createcustomer(this.customer).subscribe((newcustomer",{"_index":2569,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["this.customerservice.createcustomerwithtable(dialogresult",{"_index":1700,"title":{},"body":{"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.customerservice.getcustomerbyid(this.customerid).subscribe((customer",{"_index":966,"title":{},"body":{"components/BasketComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["this.customerservice.refreshneeded.subscribe",{"_index":2472,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.data.hasmenuitem",{"_index":407,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.data.ingredient",{"_index":299,"title":{},"body":{"components/AddIngredientDialogComponent.html":{}}}],["this.data.iskitchenstaff",{"_index":2128,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.data.menu",{"_index":392,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.data.menu.calories",{"_index":393,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.data.menu.category",{"_index":403,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.data.menu.ingredients.foreach((selectedingredient",{"_index":410,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.data.order",{"_index":2126,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.data.order.total",{"_index":2166,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.data.staff",{"_index":557,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["this.data.staff.id).subscribe((data",{"_index":563,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["this.dburl.concat(`/${username}/${password",{"_index":1464,"title":{},"body":{"injectables/InputService.html":{}}}],["this.dialog.open(addingredientdialogcomponent",{"_index":131,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["this.dialog.open(addmenudialogcomponent",{"_index":1484,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.dialog.open(addstaffdialogcomponent",{"_index":504,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["this.dialog.open(categorydialogcomponent",{"_index":1960,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.dialog.open(ingredientsdialogcomponent",{"_index":1965,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.dialog.open(notificationsdialogcomponent",{"_index":1999,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.dialog.open(ordercomponent",{"_index":2382,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["this.dialog.open(ordertrackercomponent",{"_index":1178,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["this.dialog.open(picktabledialogcomponent",{"_index":1696,"title":{},"body":{"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.dialog.open(salesdialogcomponent",{"_index":512,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["this.dialog.open(selecttabledialogcomponent",{"_index":1379,"title":{},"body":{"components/HomePageComponent.html":{},"components/LandingPageComponent.html":{}}}],["this.dialogref.close",{"_index":298,"title":{},"body":{"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["this.dialogref.close(order",{"_index":2163,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.dialogref.close(this.data",{"_index":1043,"title":{},"body":{"components/CategoryDialogComponent.html":{}}}],["this.dialogref.close(this.data.menu",{"_index":405,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.dialogref.close(this.selectedtable",{"_index":2530,"title":{},"body":{"components/PickTableDialogComponent.html":{}}}],["this.displayorders",{"_index":2301,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["this.edit",{"_index":558,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["this.elementref.nativeelement.ownerdocument.body.backgroundimage",{"_index":1541,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.elementref.nativeelement.ownerdocument.body.style.backgroundcolor",{"_index":1361,"title":{},"body":{"components/ExpansionPannelComponent.html":{},"components/LoginInputComponent.html":{}}}],["this.filteredallergens",{"_index":675,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["this.filtereddb",{"_index":1819,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["this.filtereddb.concat(val",{"_index":1820,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["this.findcategoryitems",{"_index":1165,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["this.getall",{"_index":123,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["this.getallupdatedmenus",{"_index":1882,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.getinitialordertotal",{"_index":953,"title":{},"body":{"components/BasketComponent.html":{}}}],["this.getmenucategories",{"_index":1794,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["this.getmenus",{"_index":1860,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.getneedhelp",{"_index":1019,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["this.getneedhelptables",{"_index":2010,"title":{},"body":{"components/NotificationsDialogComponent.html":{}}}],["this.getorders",{"_index":2234,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.getreadytoorder",{"_index":2546,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["this.getstaffs",{"_index":2616,"title":{},"body":{"injectables/StaffService.html":{}}}],["this.gettables",{"_index":2668,"title":{},"body":{"injectables/TableService.html":{}}}],["this.getupdatedorders",{"_index":2255,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.hidematbadge",{"_index":1996,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.httpclient.delete(`${this.mealsurl}/${meal.id",{"_index":1731,"title":{},"body":{"injectables/MealService.html":{}}}],["this.httpclient.delete(`${this.menucategoryurl}/${category.id",{"_index":1805,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["this.httpclient.delete(`${this.restauranttablesurl}/${table.tablenumber",{"_index":2689,"title":{},"body":{"injectables/TableService.html":{}}}],["this.httpclient.delete(`${this.restaurantwebapiurl}/${customer.id",{"_index":1347,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.httpclient.delete(`${this.restaurantwebapiurl}/${ingredient.id",{"_index":1436,"title":{},"body":{"injectables/IngredientService.html":{}}}],["this.httpclient.delete(`${this.restaurantwebapiurl}/${menu.id",{"_index":1886,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.httpclient.delete(`${this.restaurantwebapiurl}/${orderid",{"_index":2257,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.httpclient.delete(`${this.restaurantwebapiurl}/${staff.id}`).subscribe",{"_index":2623,"title":{},"body":{"injectables/StaffService.html":{}}}],["this.httpclient.get(`${this.menucategoryurl}/${id",{"_index":1803,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["this.httpclient.get(`${this.restauranttablesurl}/${id",{"_index":2675,"title":{},"body":{"injectables/TableService.html":{}}}],["this.httpclient.get(`${this.restaurantwebapiurl}/${id",{"_index":1348,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MenuService.html":{}}}],["this.httpclient.get(`${this.restaurantwebapiurl}/${ingredientid",{"_index":1435,"title":{},"body":{"injectables/IngredientService.html":{}}}],["this.httpclient.get(`${this.restaurantwebapiurl}/${order.id}/orderedmenuitems",{"_index":2275,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.httpclient.get(`${this.restaurantwebapiurl}/${orderid",{"_index":2256,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.httpclient.get(`${this.restaurantwebapiurl}/${staffid",{"_index":2619,"title":{},"body":{"injectables/StaffService.html":{}}}],["this.httpclient.get(`${this.restaurantwebapiurl}/noisconfirmed",{"_index":2282,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.httpclient.get(`${this.restaurantwebapiurl}/waiterid/${waiterid",{"_index":2283,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.httpclient.get(queryurl",{"_index":1465,"title":{},"body":{"injectables/InputService.html":{}}}],["this.httpclient.get(restauranttablesneedhelpurl",{"_index":2688,"title":{},"body":{"injectables/TableService.html":{}}}],["this.httpclient.get(restauranttablesunoccupiedurl",{"_index":2685,"title":{},"body":{"injectables/TableService.html":{}}}],["this.httpclient.get(temp",{"_index":1822,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["this.httpclient.get(this.menucategoryurl",{"_index":1802,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["this.httpclient.get(this.restauranttablesurl",{"_index":2672,"title":{},"body":{"injectables/TableService.html":{}}}],["this.httpclient.get(this.restaurantwebapiurl",{"_index":1342,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{}}}],["this.httpclient.post(this.mealsurl",{"_index":1730,"title":{},"body":{"injectables/MealService.html":{}}}],["this.httpclient.post(this.menucategoryurl",{"_index":1804,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["this.httpclient.post(this.restauranttablesurl",{"_index":2696,"title":{},"body":{"injectables/TableService.html":{}}}],["this.httpclient.post(this.restaurantwebapiurl",{"_index":1343,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{}}}],["this.httpclient.put(`${restaurantorderisconfirmedurl}/${newisconfirmed.valueof",{"_index":2281,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.httpclient.put(`${restaurantorderisdeliveredurl}/${newisdelivered.valueof",{"_index":2278,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.httpclient.put(`${this.mealsurl}/${meal.id}`,meal",{"_index":1732,"title":{},"body":{"injectables/MealService.html":{}}}],["this.httpclient.put(`${this.menucategoryurl}/${category.id}`,category",{"_index":1806,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["this.httpclient.put(`${this.restauranttablesurl}/${table.tablenumber",{"_index":2676,"title":{},"body":{"injectables/TableService.html":{}}}],["this.httpclient.put(`${this.restaurantwebapiurl}/${menu.id",{"_index":1889,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.httpclient.put(`${this.restaurantwebapiurl}/${order.id",{"_index":2263,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.httpclient.put(`${this.restaurantwebapiurl}/${order.id}/isconfirmed/${order.isconfirmed",{"_index":2261,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.httpclient.put(`${this.restaurantwebapiurl}/${order.id}/isdelivered/${order.isdelivered",{"_index":2260,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.httpclient.put(`${this.restaurantwebapiurl}/${order.id}/isready/${order.isready",{"_index":2262,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.httpclient.put(`${updateispaidurl}/${order.id}/${order.ispaid",{"_index":2273,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.httpclient.put(`${updatenumberselectionsurl}/${meal.id}/${meal.numberselections}`,meal).subscribe((meal",{"_index":1735,"title":{},"body":{"injectables/MealService.html":{}}}],["this.httpclient.put(`${updatetotalurl}/${order.id}/${order.total",{"_index":2271,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.httpclient.put(this.restauranttablesurl",{"_index":2697,"title":{},"body":{"injectables/TableService.html":{}}}],["this.httpclient.put(this.restaurantwebapiurl",{"_index":1346,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/StaffService.html":{}}}],["this.ingredients",{"_index":126,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddMenuDialogComponent.html":{}}}],["this.ingredients.foreach((ingredient",{"_index":413,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.ingredientservice.createingredient(ingredient).subscribe((st",{"_index":140,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["this.ingredientservice.deleteingredient(row).subscribe((ing",{"_index":124,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["this.ingredientservice.getingredients().subscribe((ing",{"_index":125,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddMenuDialogComponent.html":{}}}],["this.ingredientservice.updateingredient(ingredient).subscribe((st",{"_index":142,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["this.input.getlogin(this.username",{"_index":1631,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["this.interacted",{"_index":2458,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.isauth",{"_index":1936,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.isconfirmed",{"_index":2463,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.iskitchenstaff",{"_index":2366,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["this.ispaid",{"_index":2462,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.iswaiter",{"_index":2724,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["this.meallist",{"_index":947,"title":{},"body":{"components/BasketComponent.html":{},"components/PaymentComponent.html":{}}}],["this.meallist.indexof(meal",{"_index":957,"title":{},"body":{"components/BasketComponent.html":{}}}],["this.meallist.splice(index",{"_index":958,"title":{},"body":{"components/BasketComponent.html":{}}}],["this.meallist[index].numberselections",{"_index":959,"title":{},"body":{"components/BasketComponent.html":{}}}],["this.mealservice.createnewmeal(newmeal).subscribe((meal",{"_index":2157,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.mealservice.deletemeal(meal).subscribe((deletedmeal",{"_index":2164,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.mealservice.updatenumberselections(meal",{"_index":2151,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.mealsurl",{"_index":1734,"title":{},"body":{"injectables/MealService.html":{}}}],["this.menu",{"_index":1167,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["this.menu.push(menuitem",{"_index":1171,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["this.menucategoryservice.getmenucategories",{"_index":383,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.menucategoryservice.getmenucategories().subscribe((categories",{"_index":1162,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["this.menufilterservice.filter(filteredargs).subscribe((filteredmenu",{"_index":1172,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["this.menulist",{"_index":1948,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{}}}],["this.menuservice.addingredients(result.id",{"_index":1956,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.menuservice.createmenuitem(menu",{"_index":1487,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.menuservice.deletemenu(menu",{"_index":1959,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.menuservice.getallupdatedmenus",{"_index":1941,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.menuservice.getingredients(menu.id",{"_index":1945,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.menuservice.getingredients(menu.id).subscribe(ings",{"_index":1951,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.menuservice.getmenus().subscribe((menu",{"_index":1166,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["this.menuservice.menus",{"_index":1942,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.menuservice.menus$.subscribe((menu",{"_index":2120,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.menuservice.update(result).subscribe",{"_index":1955,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.menusubject.getvalue",{"_index":1879,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusubject.next",{"_index":1887,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusubject.next(currentlist",{"_index":1881,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusubject.next(menulist",{"_index":1874,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusubject.next(menus",{"_index":1872,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.needtoreview",{"_index":2460,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.numberofnotifications",{"_index":1995,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.openselecttabledialog",{"_index":1698,"title":{},"body":{"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.opensnackbar(\"a",{"_index":1021,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["this.opensnackbar(\"login",{"_index":1648,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["this.opensnackbar(\"table",{"_index":2736,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["this.opensnackbar(\"you",{"_index":1025,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["this.opensnackbar(\"your",{"_index":2498,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.order$.subscribe((o",{"_index":2137,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.order$.subscribe((order",{"_index":2140,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.order_button_width",{"_index":2379,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["this.orderedmealitemssubject$.asobservable",{"_index":2107,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderedmealitemssubject$.complete",{"_index":2162,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderedmealitemssubject$.getvalue",{"_index":2147,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderedmealitemssubject$.next(_orderedmealitems",{"_index":2159,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderedmealitemssubject$.next(order.meal",{"_index":2141,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderplaced",{"_index":960,"title":{},"body":{"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{}}}],["this.orders",{"_index":2294,"title":{},"body":{"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["this.orders.push(order",{"_index":2306,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["this.orderservice.createneworder(customer",{"_index":967,"title":{},"body":{"components/BasketComponent.html":{}}}],["this.orderservice.createneworderwithcustomer(a",{"_index":1702,"title":{},"body":{"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.orderservice.deleteorderbyid(this.data.order.id",{"_index":2145,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderservice.getorderbyid(this.data.order.id).subscribe((orders",{"_index":2124,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderservice.getorderbyid(this.paramsobject.params.orderid).subscribe((order",{"_index":2474,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.orderservice.getorders().subscribe((orders",{"_index":2303,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["this.orderservice.getupdatedorders",{"_index":2383,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["this.orderservice.orders$.pipe",{"_index":2367,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["this.orderservice.orders$.subscribe((orders",{"_index":2373,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["this.orderservice.updateispaid(order",{"_index":2136,"title":{},"body":{"components/OrderComponent.html":{},"components/PaymentComponent.html":{}}}],["this.orderservice.updateorderconfirmed(order",{"_index":2132,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderservice.updateorderdelivered(order).subscribe((order",{"_index":2131,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderservice.updateorderready(order).subscribe((order",{"_index":2129,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderservice.updatetotal(order",{"_index":2150,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderservice.updatetotal(this.data.order",{"_index":2167,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.orderservice.waiterid",{"_index":962,"title":{},"body":{"components/BasketComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.ordersubject$.asobservable",{"_index":2104,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.ordersubject$.getvalue",{"_index":2161,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderService.html":{}}}],["this.ordersubject$.next",{"_index":2254,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.ordersubject$.next(_orders",{"_index":2268,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.ordersubject$.next(neworder",{"_index":2134,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.ordersubject$.next(order",{"_index":2130,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.ordersubject$.next(orders",{"_index":2125,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderService.html":{}}}],["this.ordertotal",{"_index":954,"title":{},"body":{"components/BasketComponent.html":{}}}],["this.ordertotal).subscribe((order",{"_index":968,"title":{},"body":{"components/BasketComponent.html":{}}}],["this.paramsobject",{"_index":1160,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.paramsobject.params.customerid",{"_index":1175,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/PaymentComponent.html":{}}}],["this.paramsobject.params.selectedtable",{"_index":1176,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["this.paramsobject.params.tablenumber",{"_index":2502,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.password",{"_index":1651,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["this.password).subscribe(user",{"_index":1632,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["this.paymentgroup",{"_index":2468,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentgroup.get('cardnumbercontrol').value.length",{"_index":2476,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentgroup.get('cvvcodecontrol').value.length",{"_index":2496,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentgroup.get('expdatecontrol').value.length",{"_index":2478,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.paymentgroup.get('expdatecontrol').value.split",{"_index":2486,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.ready",{"_index":2547,"title":{},"body":{"components/ReadyToOrderComponent.html":{}}}],["this.refresh$.pipe",{"_index":1792,"title":{},"body":{"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["this.refreshtimer$.subscribe",{"_index":1958,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.refreshtimer$.subscribe(this.categoryservice.refresh",{"_index":1938,"title":{},"body":{"components/MenusListDisplayComponent.html":{}}}],["this.refreshtimer$.subscribe(this.menuservice.refresh",{"_index":1940,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{}}}],["this.refreshtimer$.subscribe(this.orderservice.refresh",{"_index":2123,"title":{},"body":{"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["this.refreshtimer$.subscribe(this.staffservice.refresh",{"_index":491,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["this.refreshtimer$.subscribe(this.tableservice.refresh",{"_index":2726,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["this.resize",{"_index":2374,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["this.restauranttablesurl",{"_index":2684,"title":{},"body":{"injectables/TableService.html":{}}}],["this.restaurantwebapiurl",{"_index":2270,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.reviewordergroup",{"_index":2464,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.route.queryparammap.subscribe((params",{"_index":1159,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.router.navigate(['/customer",{"_index":2501,"title":{},"body":{"components/PaymentComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["this.router.navigate(['/manager",{"_index":1644,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["this.router.navigate(['/payment",{"_index":2307,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["this.router.navigate(['/waiter",{"_index":1639,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["this.router.navigatebyurl('/home",{"_index":1180,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LoginInputComponent.html":{}}}],["this.router.navigatebyurl('kitchen",{"_index":1645,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["this.router.navigatebyurl('login",{"_index":1381,"title":{},"body":{"components/HomePageComponent.html":{}}}],["this.selectedcategory",{"_index":1163,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["this.selectedcategory.category",{"_index":1170,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["this.selectedcategory.next(category",{"_index":395,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.selectedcategory.pipe",{"_index":396,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.selectedcategory.subscribe((sc",{"_index":402,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.selectedtable",{"_index":561,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["this.selectedtable.tablenumber",{"_index":2571,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["this.settable",{"_index":559,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["this.snackbar.open(message",{"_index":1029,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["this.staff",{"_index":1633,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["this.staff.manager",{"_index":1638,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["this.staff.waiter",{"_index":1643,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["this.staffs",{"_index":493,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["this.staffs.foreach((item",{"_index":495,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["this.staffs.length",{"_index":494,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["this.staffservice.createstaff(staff).subscribe((st",{"_index":508,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["this.staffservice.createstaff(this.data.staff).subscribe((data",{"_index":564,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["this.staffservice.deletestaff(staff",{"_index":513,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["this.staffservice.edit",{"_index":503,"title":{},"body":{"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{}}}],["this.staffservice.getsales(item.id).subscribe((sale",{"_index":496,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["this.staffservice.getstaffbyid(this.paramsobject.params.staffid).subscribe((staff",{"_index":2380,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.staffservice.getstaffs().subscribe((stt",{"_index":509,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["this.staffservice.staff$.subscribe((staff",{"_index":492,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["this.staffservice.updatestaff(staff).subscribe((st",{"_index":511,"title":{},"body":{"components/AddStaffComponent.html":{}}}],["this.subscription",{"_index":490,"title":{},"body":{"components/AddStaffComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":1949,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["this.subscriptionmenus",{"_index":2119,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.suggestedpricerange",{"_index":387,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.suggestedpricerange[0",{"_index":388,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.suggestedpricerange[1",{"_index":390,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["this.tablelist",{"_index":556,"title":{},"body":{"components/AddStaffDialogComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["this.tablenumber",{"_index":951,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/OrderTrackerComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["this.tables",{"_index":2012,"title":{},"body":{"components/NotificationsDialogComponent.html":{},"components/PickTableDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["this.tableservice.assigntable(this.selectedtable).subscribe((obj",{"_index":2568,"title":{},"body":{"components/SelectTableDialogComponent.html":{}}}],["this.tableservice.createtable().subscribe",{"_index":1703,"title":{},"body":{"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.tableservice.currentstaff",{"_index":2731,"title":{},"body":{"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.tableservice.getneedhelptables().subscribe((tables",{"_index":1997,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.tableservice.getneedhelptables().subscribe(tables",{"_index":2011,"title":{},"body":{"components/NotificationsDialogComponent.html":{}}}],["this.tableservice.gettablebynumber(table.tablenumber).subscribe((table",{"_index":2013,"title":{},"body":{"components/NotificationsDialogComponent.html":{}}}],["this.tableservice.gettablebynumber(table.tablenumber).subscribe((updatedtable",{"_index":2733,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["this.tableservice.gettablebynumber(this.tablenumber).subscribe((table",{"_index":961,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["this.tableservice.gettables().subscribe(table",{"_index":555,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["this.tableservice.getunoccupiedtables().subscribe(tables",{"_index":2529,"title":{},"body":{"components/PickTableDialogComponent.html":{},"components/SelectTableDialogComponent.html":{}}}],["this.tableservice.getupdatedtables",{"_index":2723,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["this.tableservice.managerassigntable(this.selectedtable",{"_index":562,"title":{},"body":{"components/AddStaffDialogComponent.html":{}}}],["this.tableservice.refreshneeded.subscribe",{"_index":1018,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/NotificationsDialogComponent.html":{}}}],["this.tableservice.tables$.pipe",{"_index":2728,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["this.tableservice.tables$.subscribe((tables",{"_index":2725,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["this.tableservice.updatetable(table",{"_index":965,"title":{},"body":{"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["this.tableservice.updatetable(updatedtable",{"_index":2735,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["this.tablesubject$.getvalue",{"_index":2678,"title":{},"body":{"injectables/TableService.html":{}}}],["this.tablesubject$.next(_orders",{"_index":2682,"title":{},"body":{"injectables/TableService.html":{}}}],["this.tablesubject$.next(tables",{"_index":2674,"title":{},"body":{"injectables/TableService.html":{}}}],["this.total",{"_index":2142,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.updatemeallist",{"_index":2473,"title":{},"body":{"components/PaymentComponent.html":{}}}],["this.updateorderedmealitems",{"_index":2118,"title":{},"body":{"components/OrderComponent.html":{}}}],["this.username",{"_index":1650,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["this.waiter",{"_index":2381,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["this.waiter.id",{"_index":2761,"title":{},"body":{"components/WaiterMenuComponent.html":{}}}],["this.waitercalled",{"_index":1020,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["this.waiterid",{"_index":2250,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.windowwidth",{"_index":2727,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["this.wrongdetails",{"_index":2461,"title":{},"body":{"components/PaymentComponent.html":{}}}],["through",{"_index":929,"title":{},"body":{"components/BasketComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["ticks",{"_index":2356,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["tile",{"_index":2171,"title":{},"body":{"components/OrderComponent.html":{}}}],["time",{"_index":1768,"title":{},"body":{"classes/Menu.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["timer",{"_index":489,"title":{},"body":{"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["timer(0",{"_index":481,"title":{},"body":{"components/AddStaffComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["timetocook",{"_index":1740,"title":{},"body":{"classes/Menu.html":{}}}],["title",{"_index":129,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderTrackerComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["titleandinfo",{"_index":2016,"title":{},"body":{"components/NotificationsDialogComponent.html":{}}}],["titlediv",{"_index":1562,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["titlefont",{"_index":1561,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["titlerow",{"_index":1564,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["toggle",{"_index":831,"title":{},"body":{"modules/AppModule.html":{}}}],["tomenu",{"_index":1519,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["toolbar",{"_index":157,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["toolbartitle",{"_index":517,"title":{},"body":{"components/AddStaffComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["top",{"_index":1275,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{},"components/NotificationsComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{}}}],["total",{"_index":418,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/BasketComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{}}}],["total(from",{"_index":908,"title":{},"body":{"components/BasketComponent.html":{}}}],["total:number",{"_index":409,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"classes/Order.html":{}}}],["tracker",{"_index":1120,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/OrderTrackerComponent.html":{}}}],["tracker'},{'name",{"_index":239,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["tracker.component",{"_index":840,"title":{},"body":{"modules/AppModule.html":{},"components/CustomerInterfaceComponent.html":{}}}],["tracker.component.html",{"_index":2286,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["tracker.component.sass",{"_index":2285,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["tracker.component.ts",{"_index":2284,"title":{},"body":{"components/OrderTrackerComponent.html":{},"coverage.html":{}}}],["tracker.component.ts:24",{"_index":2299,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["tracker.component.ts:29",{"_index":2300,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["tracker.component.ts:34",{"_index":2289,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["tracker.component.ts:62",{"_index":2298,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["tracker.component.ts:73",{"_index":2292,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["tracker.component.ts:93",{"_index":2296,"title":{},"body":{"components/OrderTrackerComponent.html":{}}}],["tracker/order",{"_index":839,"title":{},"body":{"modules/AppModule.html":{},"components/CustomerInterfaceComponent.html":{},"components/OrderTrackerComponent.html":{},"coverage.html":{}}}],["transform",{"_index":1152,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{},"miscellaneous/variables.html":{}}}],["transition",{"_index":1138,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"miscellaneous/variables.html":{}}}],["translate",{"_index":1400,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["translatey",{"_index":1153,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["translatey(0",{"_index":1158,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"miscellaneous/variables.html":{}}}],["translatey(100",{"_index":2911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatey(15px",{"_index":1156,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["transparent",{"_index":1570,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["trigger",{"_index":1139,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["trigger('listanimation",{"_index":1146,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["trigger('routeanimations",{"_index":2908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trim",{"_index":683,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["true",{"_index":342,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/TablesListDisplayComponent.html":{},"miscellaneous/variables.html":{}}}],["truedate",{"_index":2480,"title":{},"body":{"components/PaymentComponent.html":{}}}],["truedate.split",{"_index":2485,"title":{},"body":{"components/PaymentComponent.html":{}}}],["truedatestring",{"_index":2484,"title":{},"body":{"components/PaymentComponent.html":{}}}],["try",{"_index":1636,"title":{},"body":{"components/LoginInputComponent.html":{},"index.html":{}}}],["ts",{"_index":414,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["tslib",{"_index":2850,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":50,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"classes/Customer.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"classes/Ingredient.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Meal.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"classes/MenuCategory.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"classes/selectedCategory.html":{},"miscellaneous/variables.html":{}}}],["ubuntu",{"_index":1653,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["ui",{"_index":1523,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["un",{"_index":1654,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["un:focus",{"_index":1673,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["undefined",{"_index":408,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/OrderComponent.html":{}}}],["unit",{"_index":2884,"title":{},"body":{"index.html":{}}}],["unoccupied",{"_index":2527,"title":{},"body":{"components/PickTableDialogComponent.html":{},"injectables/TableService.html":{}}}],["unsubscribes",{"_index":1913,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrdersListDisplayComponent.html":{}}}],["uodates",{"_index":1117,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["up",{"_index":64,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"miscellaneous/variables.html":{}}}],["updaeted",{"_index":1845,"title":{},"body":{"injectables/MenuService.html":{}}}],["update",{"_index":1004,"title":{},"body":{"components/CallWaiterComponent.html":{},"injectables/IngredientService.html":{},"injectables/MealService.html":{},"injectables/MenuService.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"injectables/StaffService.html":{}}}],["update(menu",{"_index":1854,"title":{},"body":{"injectables/MenuService.html":{}}}],["updatecategory",{"_index":1780,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["updatecategory(category",{"_index":1790,"title":{},"body":{"injectables/MenuCategoryService.html":{}}}],["updatecustomer",{"_index":1308,"title":{},"body":{"injectables/CustomerService.html":{}}}],["updatecustomer(customer",{"_index":1325,"title":{},"body":{"injectables/CustomerService.html":{}}}],["updated",{"_index":1327,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/MealService.html":{},"injectables/MenuCategoryService.html":{},"injectables/OrderService.html":{},"components/ReadyToOrderComponent.html":{},"injectables/TableService.html":{}}}],["updatedtable.needshelp",{"_index":2734,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["updateingredient",{"_index":1419,"title":{},"body":{"injectables/IngredientService.html":{}}}],["updateingredient(ingredient",{"_index":1429,"title":{},"body":{"injectables/IngredientService.html":{}}}],["updateispaid",{"_index":2192,"title":{},"body":{"injectables/OrderService.html":{},"components/PaymentComponent.html":{}}}],["updateispaid(order",{"_index":2218,"title":{},"body":{"injectables/OrderService.html":{}}}],["updateispaidurl",{"_index":2272,"title":{},"body":{"injectables/OrderService.html":{}}}],["updatemeal",{"_index":1718,"title":{},"body":{"injectables/MealService.html":{}}}],["updatemeal(meal",{"_index":1725,"title":{},"body":{"injectables/MealService.html":{}}}],["updatemeallist",{"_index":2408,"title":{},"body":{"components/PaymentComponent.html":{}}}],["updatemenu",{"_index":1836,"title":{},"body":{"injectables/MenuService.html":{}}}],["updatemenu(menu",{"_index":1857,"title":{},"body":{"injectables/MenuService.html":{}}}],["updatenumberselections",{"_index":1719,"title":{},"body":{"injectables/MealService.html":{}}}],["updatenumberselections(meal",{"_index":1727,"title":{},"body":{"injectables/MealService.html":{}}}],["updatenumberselectionsurl",{"_index":1733,"title":{},"body":{"injectables/MealService.html":{}}}],["updateorder",{"_index":2193,"title":{},"body":{"injectables/OrderService.html":{}}}],["updateorder(order",{"_index":2220,"title":{},"body":{"injectables/OrderService.html":{}}}],["updateorderconfirmed",{"_index":2064,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderService.html":{}}}],["updateorderconfirmed(order",{"_index":2088,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderService.html":{}}}],["updateorderdelivered",{"_index":2065,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderService.html":{}}}],["updateorderdelivered(order",{"_index":2090,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderService.html":{}}}],["updateorderedmealitems",{"_index":2066,"title":{},"body":{"components/OrderComponent.html":{}}}],["updateorderisconfirmed",{"_index":2194,"title":{},"body":{"injectables/OrderService.html":{}}}],["updateorderisconfirmed(order",{"_index":2224,"title":{},"body":{"injectables/OrderService.html":{}}}],["updateorderisdelivered",{"_index":2195,"title":{},"body":{"injectables/OrderService.html":{}}}],["updateorderisdelivered(order",{"_index":2227,"title":{},"body":{"injectables/OrderService.html":{}}}],["updateorderispaid",{"_index":2067,"title":{},"body":{"components/OrderComponent.html":{}}}],["updateorderispaid(order",{"_index":2095,"title":{},"body":{"components/OrderComponent.html":{}}}],["updateorderready",{"_index":2068,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderService.html":{}}}],["updateorderready(order",{"_index":2097,"title":{},"body":{"components/OrderComponent.html":{},"injectables/OrderService.html":{}}}],["updates",{"_index":358,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuService.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"injectables/TableService.html":{}}}],["updatestaff",{"_index":2596,"title":{},"body":{"injectables/StaffService.html":{}}}],["updatestaff(staff",{"_index":2611,"title":{},"body":{"injectables/StaffService.html":{}}}],["updatesuggestedpricerange",{"_index":318,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["updatetable",{"_index":2538,"title":{},"body":{"components/ReadyToOrderComponent.html":{},"injectables/TableService.html":{}}}],["updatetable(table",{"_index":2661,"title":{},"body":{"injectables/TableService.html":{}}}],["updatetotal",{"_index":2196,"title":{},"body":{"injectables/OrderService.html":{}}}],["updatetotal(order",{"_index":2231,"title":{},"body":{"injectables/OrderService.html":{}}}],["updatetotalurl",{"_index":2269,"title":{},"body":{"injectables/OrderService.html":{}}}],["upon",{"_index":72,"title":{},"body":{"components/AddIngredientComponent.html":{}}}],["url",{"_index":425,"title":{},"body":{"components/AddMenuDialogComponent.html":{},"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"components/LoginInputComponent.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"injectables/OrderService.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{}}}],["url('../../assets/images/background.jpg",{"_index":1228,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["url('../assets/images/background.jpg",{"_index":730,"title":{},"body":{"components/AppComponent.html":{}}}],["url(assets/images/background.jpg",{"_index":1542,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["use",{"_index":1856,"title":{},"body":{"injectables/MenuService.html":{},"components/TablesListDisplayComponent.html":{}}}],["used",{"_index":453,"title":{},"body":{"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"classes/Menu.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"components/OrderTrackerComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{}}}],["user",{"_index":58,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"injectables/InputService.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"classes/Staff.html":{},"components/WaiterMenuComponent.html":{}}}],["user[0",{"_index":1634,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["user[0].id",{"_index":1642,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["username",{"_index":1453,"title":{},"body":{"injectables/InputService.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{}}}],["username}/${password",{"_index":2618,"title":{},"body":{"injectables/StaffService.html":{}}}],["users",{"_index":2877,"title":{},"body":{"index.html":{}}}],["uses",{"_index":1929,"title":{},"body":{"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["usevalue",{"_index":2394,"title":{},"body":{"components/PaymentComponent.html":{}}}],["using",{"_index":1113,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"injectables/OrderService.html":{},"components/SelectTableDialogComponent.html":{}}}],["val",{"_index":1813,"title":{},"body":{"injectables/MenuFilterService.html":{}}}],["validators",{"_index":2455,"title":{},"body":{"components/PaymentComponent.html":{}}}],["validators.required",{"_index":2467,"title":{},"body":{"components/PaymentComponent.html":{}}}],["value",{"_index":107,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"injectables/IngredientService.html":{},"injectables/InputService.html":{},"components/KitchenMenuComponent.html":{},"components/LoginInputComponent.html":{},"injectables/MealService.html":{},"classes/Menu.html":{},"injectables/MenuCategoryService.html":{},"injectables/MenuFilterService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":692,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["values",{"_index":310,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["var",{"_index":186,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["variable",{"_index":2352,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2900,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vars",{"_index":2423,"title":{},"body":{"components/PaymentComponent.html":{}}}],["version",{"_index":2860,"title":{},"body":{"index.html":{}}}],["vertical",{"_index":1274,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/NotificationsComponent.html":{}}}],["via",{"_index":1103,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"index.html":{}}}],["viewchild",{"_index":667,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["viewchild('allergeninput",{"_index":646,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["viewchild('auto",{"_index":655,"title":{},"body":{"components/AllergensChipsComponent.html":{}}}],["viewed",{"_index":2320,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["viewencapsulation",{"_index":1132,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["viewencapsulation.none",{"_index":1053,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/LandingPageComponent.html":{}}}],["views",{"_index":2318,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["void",{"_index":79,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"injectables/CustomerService.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"injectables/IngredientService.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"injectables/MealService.html":{},"injectables/MenuService.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"injectables/StaffService.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["wait",{"_index":1024,"title":{},"body":{"components/CallWaiterComponent.html":{},"components/ReadyToOrderComponent.html":{}}}],["waiter",{"_index":255,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"classes/Login.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"classes/Order.html":{},"components/OrderComponent.html":{},"injectables/OrderService.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"classes/Staff.html":{},"injectables/StaffService.html":{},"classes/Table.html":{},"injectables/TableService.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["waiter'},{'name",{"_index":205,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["waiter.component",{"_index":812,"title":{},"body":{"modules/AppModule.html":{}}}],["waiter.component.html",{"_index":996,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["waiter.component.sass",{"_index":995,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["waiter.component.ts",{"_index":994,"title":{},"body":{"components/CallWaiterComponent.html":{},"coverage.html":{}}}],["waiter.component.ts:22",{"_index":1015,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["waiter.component.ts:27",{"_index":1001,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["waiter.component.ts:47",{"_index":1009,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["waiter.component.ts:59",{"_index":1008,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["waiter.component.ts:70",{"_index":1003,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["waiter.component.ts:83",{"_index":1006,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["waiter.component.ts:97",{"_index":1014,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["waiter/call",{"_index":811,"title":{},"body":{"modules/AppModule.html":{},"components/CallWaiterComponent.html":{},"coverage.html":{}}}],["waitercalled",{"_index":997,"title":{},"body":{"components/CallWaiterComponent.html":{}}}],["waiterid",{"_index":2027,"title":{},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Table.html":{}}}],["waitermenucomponent",{"_index":254,"title":{"components/WaiterMenuComponent.html":{}},"body":{"components/AddIngredientComponent.html":{},"components/AddIngredientDialogComponent.html":{},"components/AddMenuDialogComponent.html":{},"components/AddStaffComponent.html":{},"components/AddStaffDialogComponent.html":{},"components/AllergensChipsComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BasketComponent.html":{},"components/CallWaiterComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/HomePageComponent.html":{},"components/IngredientsDialogComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderComponent.html":{},"components/OrderTrackerComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/PickTableDialogComponent.html":{},"components/ReadyToOrderComponent.html":{},"components/SalesDialogComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"coverage.html":{},"overview.html":{}}}],["waiters",{"_index":2319,"title":{},"body":{"components/OrdersListDisplayComponent.html":{}}}],["waiting",{"_index":2577,"title":{},"body":{"classes/Staff.html":{}}}],["warning[href",{"_index":1269,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["watch",{"_index":2874,"title":{},"body":{"index.html":{}}}],["webkit",{"_index":1266,"title":{},"body":{"components/CustomerInterfaceComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["webpages",{"_index":1616,"title":{},"body":{"components/LoginInputComponent.html":{}}}],["website",{"_index":1518,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["weight",{"_index":179,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/ExpansionPannelComponent.html":{},"components/LoginInputComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/NotificationsDialogComponent.html":{},"components/OrderTrackerComponent.html":{},"components/PickTableDialogComponent.html":{}}}],["welcome",{"_index":1393,"title":{},"body":{"components/HomePageComponent.html":{},"components/LoginInputComponent.html":{}}}],["well",{"_index":2711,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["wheat",{"_index":1585,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["whether",{"_index":1990,"title":{},"body":{"components/NotificationsComponent.html":{},"classes/Staff.html":{},"classes/Table.html":{}}}],["whichorder",{"_index":2267,"title":{},"body":{"injectables/OrderService.html":{}}}],["whichorder.id",{"_index":2265,"title":{},"body":{"injectables/OrderService.html":{}}}],["whichtable",{"_index":2681,"title":{},"body":{"injectables/TableService.html":{}}}],["whichtable.tablenumber",{"_index":2680,"title":{},"body":{"injectables/TableService.html":{}}}],["white",{"_index":162,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/NotificationsComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/SelectTableDialogComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["width",{"_index":133,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/AllergensChipsComponent.html":{},"components/CustomerInterfaceComponent.html":{},"components/HomePageComponent.html":{},"components/KitchenMenuComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginInputComponent.html":{},"components/ManagerMenuComponent.html":{},"components/MenusListDisplayComponent.html":{},"components/OrderComponent.html":{},"components/OrdersListDisplayComponent.html":{},"components/PaymentComponent.html":{},"components/TablesListDisplayComponent.html":{},"components/WaiterMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["window",{"_index":2361,"title":{},"body":{"components/OrdersListDisplayComponent.html":{},"components/TablesListDisplayComponent.html":{}}}],["windowwidth",{"_index":2701,"title":{},"body":{"components/TablesListDisplayComponent.html":{}}}],["windoze",{"_index":2876,"title":{},"body":{"index.html":{}}}],["without",{"_index":351,"title":{},"body":{"components/AddMenuDialogComponent.html":{}}}],["word",{"_index":1243,"title":{},"body":{"components/CustomerInterfaceComponent.html":{}}}],["work",{"_index":2878,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":2178,"title":{},"body":{"components/OrderComponent.html":{}}}],["wrong",{"_index":1619,"title":{},"body":{"components/LoginInputComponent.html":{},"components/PaymentComponent.html":{}}}],["wrongdetails",{"_index":2404,"title":{},"body":{"components/PaymentComponent.html":{}}}],["wrongdetailsblock",{"_index":2518,"title":{},"body":{"components/PaymentComponent.html":{}}}],["x",{"_index":2504,"title":{},"body":{"components/PaymentComponent.html":{}}}],["x{{meal.numberselections",{"_index":972,"title":{},"body":{"components/BasketComponent.html":{},"components/OrderComponent.html":{}}}],["y",{"_index":2180,"title":{},"body":{"components/OrderComponent.html":{}}}],["yellow",{"_index":1509,"title":{},"body":{"components/KitchenMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["yesoption",{"_index":2523,"title":{},"body":{"components/PaymentComponent.html":{}}}],["yyyy/mm/dd",{"_index":2482,"title":{},"body":{"components/PaymentComponent.html":{}}}],["z",{"_index":160,"title":{},"body":{"components/AddIngredientComponent.html":{},"components/AddStaffComponent.html":{},"components/KitchenMenuComponent.html":{},"components/ManagerMenuComponent.html":{},"components/WaiterMenuComponent.html":{}}}],["zero",{"_index":2201,"title":{},"body":{"injectables/OrderService.html":{}}}],["zone.js",{"_index":2852,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":745,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddIngredientComponent.html":{"url":"components/AddIngredientComponent.html","title":"component - AddIngredientComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddIngredientComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manager-menu/add-ingredient/add-ingredient.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-ingredient\n            \n\n            \n                styleUrls\n                ./add-ingredient.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./add-ingredient.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                ingredients\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openAddIngredientDialog\n                            \n                            \n                                openEditMenuDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ingredientService: IngredientService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/manager-menu/add-ingredient/add-ingredient.component.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor tasked with instantiating the services and dialog neccessary for adding ingredients.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service tasked with making changes the database according to user interaction.\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object involved with creating pop-up panels for more user interaction.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(row: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-ingredient/add-ingredient.component.ts:44\n                \n            \n\n\n            \n                \n                    This method is purposed with deleting an ingredient on the database upon a button press.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    row\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The particular ingredient which needs deleting.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-ingredient/add-ingredient.component.ts:53\n                \n            \n\n\n            \n                \n                    Method for populating a list of ingredients.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-ingredient/add-ingredient.component.ts:36\n                \n            \n\n\n            \n                \n                    A set-up method that gets called once when the class gets instantiated.\nGets all the ingredients from the DB.= by calling getAll().\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openAddIngredientDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenAddIngredientDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-ingredient/add-ingredient.component.ts:61\n                \n            \n\n\n            \n                \n                    This method is purposed with opening a pop-up display so a manger can add new ingredients.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditMenuDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditMenuDialog(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-ingredient/add-ingredient.component.ts:83\n                \n            \n\n\n            \n                \n                    This method is purposed with giving the manager the ability to edit ingredients.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The ingredient subjected to modification.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-ingredient/add-ingredient.component.ts:25\n                            \n                        \n\n                \n                    \n                        An object involved with creating pop-up panels for more user interaction.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ingredients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ingredient[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-ingredient/add-ingredient.component.ts:30\n                            \n                        \n\n                \n                    \n                        The ingredients list from the DB.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Ingredient } from '../../../models/Ingredient';\nimport { IngredientService } from \"../../ingredient.service\"\nimport { AddIngredientDialogComponent } from '../add-ingredient-dialog/add-ingredient-dialog.component';\n\n@Component({\n  selector: 'app-add-ingredient',\n  templateUrl: './add-ingredient.component.html',\n  styleUrls: ['./add-ingredient.component.sass']\n})\n\n/**\n * The class that handles the stock page.\n */\nexport class AddIngredientComponent implements OnInit {\n\n/**\n * Constructor tasked with instantiating the services and dialog neccessary for adding ingredients.\n * \n * @param {IngredientService} ingredientService The service tasked with making changes the database according to user interaction.\n * @param {MatDialog} dialog An object involved with creating pop-up panels for more user interaction.\n */\n  constructor(private ingredientService: IngredientService,\n    public dialog: MatDialog) { }\n\n  /**\n   * The ingredients list from the DB.\n   */\n  ingredients: Ingredient[] = [];\n\n  /**\n   * A set-up method that gets called once when the class gets instantiated.\n   * Gets all the ingredients from the DB.= by calling getAll().\n   */\n  ngOnInit(): void {\n    this.getAll();\n  }\n  /**\n   * This method is purposed with deleting an ingredient on the database upon a button press.\n   * \n   * @param {Ingredient} row The particular ingredient which needs deleting.\n   */\n  delete(row: Ingredient) {\n    this.ingredientService.deleteIngredient(row).subscribe((ing) => {\n      this.getAll();\n    });\n  }\n\n    /**\n     * Method for populating a list of ingredients.\n     */\n  getAll() {\n    this.ingredientService.getIngredients().subscribe((ing) => {\n      this.ingredients = ing;\n    });\n  }\n/**\n * This method is purposed with opening a pop-up display so a manger can add new ingredients.\n */\n  openAddIngredientDialog() {\n    const title = \"Add New Ingredient\";\n    let ingredient: Ingredient = new Ingredient();\n    const dialogRef = this.dialog.open(AddIngredientDialogComponent, {\n      data: { ingredient, title },\n      width: '50%',\n      autoFocus: false\n    });\n\n    dialogRef.afterClosed().subscribe(staff => {\n      if (ingredient && ingredient.name && ingredient.quantity) {\n        this.ingredientService.createIngredient(ingredient).subscribe((st) => {\n          this.getAll();\n        });\n      }\n    })\n  }\n/**\n * This method is purposed with giving the manager the ability to edit ingredients.\n * \n * @param {Ingredient} ingredient The ingredient subjected to modification.\n */\n  openEditMenuDialog(ingredient: Ingredient): void {\n    const title = \"Edit Ingredient\";\n    const dialogRef = this.dialog.open(AddIngredientDialogComponent, {\n      data: { ingredient, title },\n      width: '50%',\n      autoFocus: false\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (ingredient) {\n        this.ingredientService.updateIngredient(ingredient).subscribe((st) => {\n          this.getAll();\n        });\n      }\n    });\n\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Stock\n    \n    \n      \n    \n  \n  \n\n  \n\n  \n  \n    \n      Name\n      Quantity\n      Price/Item\n      Edit\n      Delete\n      \n        Add\n      \n    \n  \n  \n    {{ing.name}}\n    {{ing.quantity}}\n    {{ing.pricePerItem}}\n    \n      Edit\n    \n    \n      Delete\n    \n  \n\n    \n\n    \n                \n                    ./add-ingredient.component.sass\n                \n                a\n  color: #000000\n\n.example-sidenav\n  position: fixed\n\n.quickAddButton\n  width: 35px\n  height: 35px\n\n.toolBar\n  background-color: #76cfb9\n  z-index: 1\n  color: white\n  position: fixed\n\n.ingredientsTitle\n  display: block\n  margin-left: auto\n  margin-right: auto\n  width: 100px\n  height: 100px\n  background-color: #76cfb9\n  border-radius: 4em\n\n.spacer\n  flex: 1 1 auto\n\n.tableTitle\n  background-color: #76cfb9\n  font-size: 25px\n  color: white\n  font-weight: bold\n\n.addButton\n  font-size: 25px\n  font-weight: bold\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Stock                                      Name      Quantity      Price/Item      Edit      Delete              Add                  {{ing.name}}    {{ing.quantity}}    {{ing.pricePerItem}}          Edit              Delete      '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddIngredientComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddIngredientDialogComponent.html":{"url":"components/AddIngredientDialogComponent.html","title":"component - AddIngredientDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddIngredientDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manager-menu/add-ingredient-dialog/add-ingredient-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-ingredient-dialog\n            \n\n            \n                styleUrls\n                ./add-ingredient-dialog.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./add-ingredient-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onNoClick\n                            \n                            \n                                setCalories\n                            \n                            \n                                setData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/manager-menu/add-ingredient-dialog/add-ingredient-dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\nInjects the mat dialog dat into ingredient and title.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the dialog ref\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the injected data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-ingredient-dialog/add-ingredient-dialog.component.ts:29\n                \n            \n\n\n            \n                \n                    A set-up method that gets called once when the class gets instantiated.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-ingredient-dialog/add-ingredient-dialog.component.ts:44\n                \n            \n\n\n            \n                \n                    Closes the dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCalories\n                        \n                        \n                    \n                \n            \n            \n                \nsetCalories(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-ingredient-dialog/add-ingredient-dialog.component.ts:37\n                \n            \n\n\n            \n                \n                    Sets calories to the calories slider.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new value of calories slider\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the new value of calories slider\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-ingredient-dialog/add-ingredient-dialog.component.ts:53\n                \n            \n\n\n            \n                \n                    Sets the mat dialog data.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new ingredient to be added to data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-ingredient-dialog/add-ingredient-dialog.component.ts:24\n                            \n                        \n\n                \n                    \n                        the injected data\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-ingredient-dialog/add-ingredient-dialog.component.ts:23\n                            \n                        \n\n                \n                    \n                        the dialog ref\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Ingredient } from '../../../models/Ingredient';\n\n@Component({\n  selector: 'app-add-ingredient-dialog',\n  templateUrl: './add-ingredient-dialog.component.html',\n  styleUrls: ['./add-ingredient-dialog.component.sass']\n})\n\n/**\n * The class that handles adding an ingredient dialog.\n */\nexport class AddIngredientDialogComponent implements OnInit {\n\n  /**\n   * The constructor of the class.\n   * Injects the mat dialog dat into ingredient and title.\n   * \n   * @param dialogRef the dialog ref\n   * @param data the injected data\n   */\n  constructor(public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: { ingredient: Ingredient, title: string }) { }\n\n  /**\n   * A set-up method that gets called once when the class gets instantiated.\n   */\n  ngOnInit(): void { }\n\n  /**\n   * Sets calories to the calories slider.\n   * \n   * @param value the new value of calories slider\n   * @returns the new value of calories slider\n   */\n  setCalories(value: number) {\n    return value;\n  }\n\n  /**\n   * Closes the dialog.\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Sets the mat dialog data.\n   * \n   * @param ingredient the new ingredient to be added to data\n   */\n  setData(ingredient: Ingredient) {\n    this.data.ingredient = ingredient;\n  }\n\n}\n\n\n    \n\n    \n        {{data.title}}\n\n  \n    \n      Name\n      \n    \n    \n      Quantity\n      \n    \n    \n      Price per Item\n      \n    \n  \n\n\n  Cancel\n  Ok\n\n    \n\n    \n                \n                    ./add-ingredient-dialog.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.title}}            Name                    Quantity                    Price per Item              Cancel  Ok'\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddIngredientDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddMenuDialogComponent.html":{"url":"components/AddMenuDialogComponent.html","title":"component - AddMenuDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddMenuDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Dialog component for a Menu item that allows you to inject a Menu and configure\nit's values.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-order-dialog\n            \n\n            \n                styleUrls\n                ./add-menu-dialog.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./add-menu-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                ingredients\n                            \n                            \n                                selectedCategory\n                            \n                            \n                                suggestedPriceRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeCategory\n                            \n                            \n                                closeDialog\n                            \n                            \n                                isSelectedCat\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCaloriesChange\n                            \n                            \n                                onNoClick\n                            \n                            \n                                setCalories\n                            \n                            \n                                setData\n                            \n                            \n                                updateSuggestedPriceRange\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, ingredientService: IngredientService, menuCategoryService: MenuCategoryService, data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to open/close dialogs\n\n                                                        \n                                                \n                                                \n                                                        ingredientService\n                                                  \n                                                        \n                                                                        IngredientService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to perform crud for ingredients\n\n                                                        \n                                                \n                                                \n                                                        menuCategoryService\n                                                  \n                                                        \n                                                                        MenuCategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                injected data {Menu, Title, hasMenuItem} from parent component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeCategory\n                        \n                        \n                    \n                \n            \n            \n                \nchangeCategory(category: MenuCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:106\n                \n            \n\n\n            \n                \n                    Changes category of the current menu\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                MenuCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to change to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDialog\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:127\n                \n            \n\n\n            \n                \n                    Closes the dialog and returns the changed/unchanged\nmenu back to the parent component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSelectedCat\n                        \n                        \n                    \n                \n            \n            \n                \nisSelectedCat(category: MenuCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:115\n                \n            \n\n\n            \n                \n                    Finds the selected category to assign a check value to a category checkbox\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                MenuCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to check is selected or not\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        true if a category is selected, false if it is not selected\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:58\n                \n            \n\n\n            \n                \n                    Gets ingredients, categories and sets suggested price range\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onCaloriesChange\n                        \n                        \n                    \n                \n            \n            \n                \nonCaloriesChange(event: MatSliderChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:98\n                \n            \n\n\n            \n                \n                    Changes calories on a Mat Slider event\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSliderChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the slider event that changes the number of calories\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:82\n                \n            \n\n\n            \n                \n                    Closes dialog without changing anything\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCalories\n                        \n                        \n                    \n                \n            \n            \n                \nsetCalories(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:75\n                \n            \n\n\n            \n                \n                    Sets the calories value of the current menu item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:90\n                \n            \n\n\n            \n                \n                    Sets the injected menu to\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSuggestedPriceRange\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSuggestedPriceRange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:136\n                \n            \n\n\n            \n                \n                    Updates the price range by summing costs of ingredients and\nadding a profit margin of 60%\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuCategory[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:26\n                            \n                        \n\n                \n                    \n                        Menu Categories\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:53\n                            \n                        \n\n                \n                    \n                        injected data {Menu, Title, hasMenuItem} from parent component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:50\n                            \n                        \n\n                \n                    \n                        to open/close dialogs\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ingredients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ingredient[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:36\n                            \n                        \n\n                \n                    \n                        All ingredients present in the database\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCategory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(this.data.menu.category)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:31\n                            \n                        \n\n                \n                    \n                        A subject that changes based on which category is selected\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            suggestedPriceRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts:41\n                            \n                        \n\n                \n                    \n                        Suggested price range for a menu item with certain ingredients\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {Menu} from \"../../../models/Menu\";\nimport { MatSliderChange } from '@angular/material/slider';\nimport {MenuCategory} from \"../../../models/MenuCategory\";\nimport {MenuCategoryService} from \"../../menu-category.service\";\nimport {map} from \"rxjs/operators\";\nimport {BehaviorSubject} from \"rxjs\";\nimport { Ingredient } from '../../../models/Ingredient';\nimport { IngredientService } from '../../ingredient.service';\n\n/**\n * Dialog component for a Menu item that allows you to inject a Menu and configure\n * it's values.\n */\n@Component({\n  selector: 'app-add-order-dialog',\n  templateUrl: './add-menu-dialog.component.html',\n  styleUrls: ['./add-menu-dialog.component.sass']\n})\nexport class AddMenuDialogComponent implements OnInit {\n\n  /**\n   * Menu Categories\n   */\n  categories: MenuCategory[];\n\n  /**\n   * A subject that changes based on which category is selected\n   */\n  selectedCategory: BehaviorSubject = new BehaviorSubject(this.data.menu.category);\n\n  /**\n   * All ingredients present in the database\n   */\n  ingredients: Ingredient[] = [];\n\n  /**\n   * Suggested price range for a menu item with certain ingredients\n   */\n  suggestedPriceRange: number[];\n\n  /**\n   *\n   * @param dialogRef to open/close dialogs\n   * @param ingredientService to perform crud for ingredients\n   * @param menuCategoryServiceto perform crud for menu categories\n   * @param data injected data {Menu, Title, hasMenuItem} from parent component\n   */\n  constructor(public dialogRef: MatDialogRef,\n              private ingredientService: IngredientService,\n              private menuCategoryService: MenuCategoryService,\n              @Inject(MAT_DIALOG_DATA) public data: { menu:Menu,title:string,hasMenuItem:boolean }) { }\n\n  /**\n   * Gets ingredients, categories and sets suggested price range\n   */\n  ngOnInit(): void {\n    this.ingredientService.getIngredients().subscribe((ing) => {\n      this.ingredients = ing;\n    });\n    this.menuCategoryService.getMenuCategories()\n      .subscribe((menuCategories) => {\n      this.categories = menuCategories;\n    })\n    this.suggestedPriceRange = [];\n    this.suggestedPriceRange[0] = 0;\n    this.suggestedPriceRange[1] = 0;\n  }\n\n  /**\n   * Sets the calories value of the current menu item\n   * @param value\n   */\n  setCalories(value: number) {\n    return value;\n  }\n\n  /**\n   * Closes dialog without changing anything\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Sets the injected menu to\n   * @param new menu to set as current menu\n   */\n  setData(menu:Menu) {\n    this.data.menu = menu;\n  }\n\n  /**\n   * Changes calories on a Mat Slider event\n   * @param event the slider event that changes the number of calories\n   */\n  onCaloriesChange(event: MatSliderChange) {\n    this.data.menu.calories = event.value;\n  }\n\n  /**\n   * Changes category of the current menu\n   * @param category to change to\n   */\n  changeCategory(category: MenuCategory) {\n    this.selectedCategory.next(category);\n  }\n\n  /**\n   * Finds the selected category to assign a check value to a category checkbox\n   * @param category to check is selected or not\n   * @return true if a category is selected, false if it is not selected\n   */\n  isSelectedCat(category: MenuCategory){\n    let isSelectedCat;\n    this.selectedCategory.pipe(\n      map((sc) => sc.id == category.id)\n    ).subscribe((isCat) => isSelectedCat = isCat);\n    return isSelectedCat;\n  }\n\n  /**\n   * Closes the dialog and returns the changed/unchanged\n   * menu back to the parent component\n   */\n  closeDialog(): void {\n    this.selectedCategory.subscribe((sc) => this.data.menu.category = sc);\n    this.dialogRef.close(this.data.menu);\n  }\n\n  /**\n   * Updates the price range by summing costs of ingredients and\n   * adding a profit margin of 60%\n   */\n  updateSuggestedPriceRange(): void {\n    console.log(this.data);\n    if (this.data.hasMenuItem == undefined) {\n      let total:number = 0;\n      this.data.menu.ingredients.forEach((selectedIngredient) => {\n        let includesIngredient: boolean = false;\n        this.ingredients.forEach((ingredient) => {\n          // @ts-ignore\n          if (ingredient.id == selectedIngredient) {\n            includesIngredient = false;\n            total += ingredient.pricePerItem;\n          }\n        })\n      })\n      this.suggestedPriceRange[0] = total + 0.6 * total;\n      this.suggestedPriceRange[1] = total + 1 * total;\n    }\n  }\n}\n\n    \n\n    \n        {{data.title}}\n\n  \n    \n      Name\n      \n    \n    \n      Price(suggested)\n      \n      \n        {{suggestedPriceRange[0]}} - {{suggestedPriceRange[1]}} $\n      \n      0$\n    \n  \n  \n    \n      Ingredient\n      \n        {{ing.name}}\n      \n    \n    \n      Description\n      \n    \n    \n      Picture URL\n      \n    \n  \n  \n    \n      {{category.category}}\n    \n  \n  \n  \n    \n  \n  \n    Allergens\n  \n  \n    \n      \n        Fish\n      \n      \n        Gluten\n      \n      \n        Lupin\n      \n      \n        Milk\n      \n      \n        Sulphites\n      \n    \n    \n      \n        Molluscs\n      \n      \n        Mustard\n      \n      \n        Nuts\n      \n      \n        Sesame Seeds\n      \n      \n        Soya\n      \n    \n    \n      Calories{{data.menu.calories}}\n      \n      \n    \n  \n\n\n\n  Cancel\n  Ok\n\n\n    \n\n    \n                \n                    ./add-menu-dialog.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.title}}            Name                    Price(suggested)                    {{suggestedPriceRange[0]}} - {{suggestedPriceRange[1]}} $            0$                  Ingredient              {{ing.name}}                    Description                    Picture URL                        {{category.category}}                      Allergens                      Fish                    Gluten                    Lupin                    Milk                    Sulphites                            Molluscs                    Mustard                    Nuts                    Sesame Seeds                    Soya                    Calories{{data.menu.calories}}                    Cancel  Ok'\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddMenuDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddStaffComponent.html":{"url":"components/AddStaffComponent.html","title":"component - AddStaffComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddStaffComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manager-menu/add-staff/add-staff.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-staff\n            \n\n            \n                styleUrls\n                ./add-staff.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./add-staff.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bool\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                refreshTimer$\n                            \n                            \n                                staffs\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteStaff\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openAddStaffDialog\n                            \n                            \n                                openEditMenuDialog\n                            \n                            \n                                openStaffSalesDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(staffService: StaffService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/manager-menu/add-staff/add-staff.component.ts:18\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        staffService\n                                                  \n                                                        \n                                                                        StaffService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the staff service that is used to make requests\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a mat dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteStaff\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteStaff(staff: Staff)\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-staff/add-staff.component.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    staff\n                                    \n                                                Staff\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-staff/add-staff.component.ts:43\n                \n            \n\n\n            \n                \n                    A set-up method that gets called once when the class gets instantiated.\nMakes a get request to the staff DB by subscribing to getStaffs() that returns a \nstaff observable. Inside the subscription, for each staff, it displays the total \nnumber of orders delivered by the staff and the sales done by the staff.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openAddStaffDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenAddStaffDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-staff/add-staff.component.ts:69\n                \n            \n\n\n            \n                \n                    Opens the staff dialog.\nInjects a new Staff object and title and after closing the dialog\nit creates a new staff.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditMenuDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditMenuDialog(staff: Staff)\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-staff/add-staff.component.ts:96\n                \n            \n\n\n            \n                \n                    Opens the edit menu dialog.\nAfter the dialog is closed, it updates the staff.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    staff\n                                    \n                                                Staff\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the staff to be edited\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openStaffSalesDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenStaffSalesDialog(staff: Staff)\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-staff/add-staff.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    staff\n                                    \n                                                Staff\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bool\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff/add-staff.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff/add-staff.component.ts:27\n                            \n                        \n\n                \n                    \n                        a mat dialog\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshTimer$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : timer(0, 1000)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff/add-staff.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            staffs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Staff[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff/add-staff.component.ts:32\n                            \n                        \n\n                \n                    \n                        The list of staff in the DB.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff/add-staff.component.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Staff } from \"../../../models/Staff\";\nimport { StaffService } from \"../../staff.service\"\nimport { AddStaffDialogComponent } from '../add-staff-dialog/add-staff-dialog.component';\nimport {SalesDialogComponent} from \"./sales-dialog/sales-dialog.component\";\nimport {Subscription, timer} from \"rxjs\";\n\n@Component({\n  selector: 'app-add-staff',\n  templateUrl: './add-staff.component.html',\n  styleUrls: ['./add-staff.component.sass']\n})\n\n/**\n * The class that handles the staff page.\n */\nexport class AddStaffComponent implements OnInit {\n\n  /**\n   * The constructor of the class.\n   * \n   * @param staffService the staff service that is used to make requests\n   * @param dialog a mat dialog\n   */\n  constructor(private staffService: StaffService,\n    public dialog: MatDialog) { }\n\n  /**\n   * The list of staff in the DB.\n   */\n  staffs: Staff[] = [];\n  bool: boolean = false;\n  subscription: Subscription;\n  refreshTimer$ = timer(0, 1000);\n\n  /**\n   * A set-up method that gets called once when the class gets instantiated.\n   * Makes a get request to the staff DB by subscribing to getStaffs() that returns a \n   * staff observable. Inside the subscription, for each staff, it displays the total \n   * number of orders delivered by the staff and the sales done by the staff.\n   */\n  ngOnInit(): void {\n    this.subscription = this.refreshTimer$.subscribe(this.staffService.refresh$);\n    this.staffService.staff$.subscribe((staff) => {\n      this.staffs = staff;\n      if (this.staffs && this.staffs.length > 0) {\n        this.staffs.forEach((item, index) => {\n          this.staffService.getSales(item.id).subscribe((sale) => {\n            item.orderDelivered = 0;\n            item.salesPrice = 0;\n            if (sale && sale.length > 0) {\n              item.orderDelivered = sale.length;\n              sale.forEach((sa, index) => {\n                item.salesPrice += sa.total;\n              });\n            }\n          });\n        });\n      }\n    });\n  }\n\n  /**\n   * Opens the staff dialog.\n   * Injects a new Staff object and title and after closing the dialog\n   * it creates a new staff.\n   */\n  openAddStaffDialog() {\n    const title = \"Add New Staff\";\n    let staff: Staff = new Staff();\n    this.staffService.edit = false;\n    const dialogRef = this.dialog.open(AddStaffDialogComponent, {\n      data: { staff, title },\n      width: '50%',\n      autoFocus: false\n    });\n\n    dialogRef.afterClosed().subscribe(staff => {\n      if (staff && staff.userName && staff.email && staff.password) {\n        this.staffService.createStaff(staff).subscribe((st) => {\n          this.staffService.getStaffs().subscribe((stt) => {\n            this.staffs = stt;\n          });\n        });\n      }\n    })\n  }\n\n  /**\n   * Opens the edit menu dialog.\n   * After the dialog is closed, it updates the staff.\n   * \n   * @param staff the staff to be edited\n   */\n  openEditMenuDialog(staff: Staff): void {\n    const title = \"Edit Staff\";\n    this.staffService.edit = true;\n    const dialogRef = this.dialog.open(AddStaffDialogComponent, {\n      data: { staff, title },\n      width: '50%',\n      autoFocus: false\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (staff) {\n        this.staffService.updateStaff(staff).subscribe((st) => {\n          this.staffService.getStaffs().subscribe((stt) => {\n            this.staffs = stt;\n          });\n        });\n      }\n    });\n\n  }\n\n  openStaffSalesDialog(staff: Staff): void {\n    this.dialog.open(SalesDialogComponent, {\n      data: staff\n    });\n  }\n\n  deleteStaff(staff: Staff) {\n    this.staffService.deleteStaff(staff);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    Staff\n    \n    \n      \n    \n  \n  \n  \n  \n  \n    \n      Email\n      User Name\n      Staff\n      Sales\nDelivered Orders-->\n      \n        Add/Edit\n      \n    \n  \n  \n    {{staff.email}}\n    {{staff.userName}}\n    \n      Waiter\n      Kitchen Staff\n    \n    \n      \n        Sales\n      \n    \n    \n      Edit\n      Delete\n    \n  \n\n\n    \n\n    \n                \n                    ./add-staff.component.sass\n                \n                a\n  color: #000000\n\n.staffTitle\n  display: block\n  margin-left: auto\n  margin-right: auto\n  width: 100px\n  height: 100px\n  background-color: #76cfb9\n  border-radius: 4em\n\n.toolBarTitle\n  font-family: 'Raleway', sans-serif\n  font-size: 50px\n  padding-left: 390px\n\n.toolBar\n  background-color: #76cfb9\n  z-index: 1\n  color: white\n  position: fixed\n\n.quickAddButton\n  width: 35px\n  height: 35px\n\n.spacer\n  flex: 1 1 auto\n\n.tableTitle\n  background-color: #76cfb9\n  font-size: 25px\n  color: white\n  font-weight: bold\n\n.addButton\n  font-size: 25px\n  font-weight: bold\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Staff                                      Email      User Name      Staff      SalesDelivered Orders-->              Add/Edit                  {{staff.email}}    {{staff.userName}}          Waiter      Kitchen Staff                      Sales                    Edit      Delete      '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddStaffComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddStaffDialogComponent.html":{"url":"components/AddStaffDialogComponent.html","title":"component - AddStaffDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AddStaffDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-staff-dialog\n            \n\n            \n                styleUrls\n                ./add-staff-dialog.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./add-staff-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                edit\n                            \n                            \n                                selected\n                            \n                            \n                                selectedTable\n                            \n                            \n                                    Public\n                                staffService\n                            \n                            \n                                tableList\n                            \n                            \n                                    Public\n                                tableService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewStaff\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNoClick\n                            \n                            \n                                onYesClick\n                            \n                            \n                                setCalories\n                            \n                            \n                                setData\n                            \n                            \n                                setTable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, tableService: TableService, staffService: StaffService, data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:14\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\nInjects the mat dialog data into staff and title.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the dialog ref\n\n                                                        \n                                                \n                                                \n                                                        tableService\n                                                  \n                                                        \n                                                                        TableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the table service that is used to make requests\n\n                                                        \n                                                \n                                                \n                                                        staffService\n                                                  \n                                                        \n                                                                        StaffService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the staff service that is used to make requests\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the mat dialog data that is injected\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewStaff\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewStaff()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:54\n                \n            \n\n\n            \n                \n                    Set-up method, gets called only once when the class is instantiated.\nSets up the table list by making a get request to the Table DB.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:73\n                \n            \n\n\n            \n                \n                    Closes the dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onYesClick\n                        \n                        \n                    \n                \n            \n            \n                \nonYesClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCalories\n                        \n                        \n                    \n                \n            \n            \n                \nsetCalories(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:66\n                \n            \n\n\n            \n                \n                    Sets the calories from the slider.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the value of the selected nr of calories\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the new number of calories\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setData\n                        \n                        \n                    \n                \n            \n            \n                \nsetData(staff: Staff)\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:82\n                \n            \n\n\n            \n                \n                    Sets the data of the mat dialog.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    staff\n                                    \n                                                Staff\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new staff to be added to data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTable\n                        \n                        \n                    \n                \n            \n            \n                \nsetTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:28\n                            \n                        \n\n                \n                    \n                        the mat dialog data that is injected\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:25\n                            \n                        \n\n                \n                    \n                        the dialog ref\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : this.staffService.edit\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:48\n                            \n                        \n\n                \n                    \n                        References if the manager accessed add staff dialog or edit staff dialog.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selected\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : -1\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:43\n                            \n                        \n\n                \n                    \n                        Asserts if a table was selected.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:38\n                            \n                        \n\n                \n                    \n                        The selected table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            staffService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StaffService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:27\n                            \n                        \n\n                \n                    \n                        the staff service that is used to make requests\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:33\n                            \n                        \n\n                \n                    \n                        The list of available tables.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tableService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TableService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts:26\n                            \n                        \n\n                \n                    \n                        the table service that is used to make requests\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Staff } from '../../../models/Staff';\nimport { Table } from '../../../models/Table';\nimport { StaffService } from '../../staff.service';\nimport { TableService } from '../../table.service';\n\n@Component({\n  selector: 'app-add-staff-dialog',\n  templateUrl: './add-staff-dialog.component.html',\n  styleUrls: ['./add-staff-dialog.component.sass']\n})\n\nexport class AddStaffDialogComponent implements OnInit {\n\n  /**\n   * The constructor of the class.\n   * Injects the mat dialog data into staff and title.\n   * \n   * @param dialogRef the dialog ref\n   * @param tableService the table service that is used to make requests\n   * @param staffService the staff service that is used to make requests\n   * @param data the mat dialog data that is injected\n   */\n  constructor(public dialogRef: MatDialogRef,\n              public tableService: TableService,\n              public staffService: StaffService,\n              @Inject(MAT_DIALOG_DATA) public data: { staff:Staff,title:string }) { }\n\n  /**\n   * The list of available tables.\n   */\n  tableList: Table[] = [];\n\n  /**\n   * The selected table.\n   */\n  selectedTable: Table = null;\n\n  /**\n   * Asserts if a table was selected.\n   */\n  selected = -1;\n\n  /**\n   * References if the manager accessed add staff dialog or edit staff dialog.\n   */\n  edit: boolean = this.staffService.edit;\n\n  /**\n   * Set-up method, gets called only once when the class is instantiated.\n   * Sets up the table list by making a get request to the Table DB.\n   */\n  ngOnInit(): void {\n    this.tableService.getTables().subscribe(table => {\n      this.tableList = table;\n    })\n  }\n\n  /**\n   * Sets the calories from the slider.\n   * \n   * @param value the value of the selected nr of calories\n   * @returns the new number of calories\n   */\n  setCalories(value: number) {\n    return value;\n  }\n\n  /**\n   * Closes the dialog.\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Sets the data of the mat dialog.\n   * \n   * @param staff the new staff to be added to data\n   */\n  setData(staff: Staff) {\n    this.data.staff = staff;\n  } \n\n  onYesClick(): void {\n    if (this.edit == true) {\n      this.setTable();\n    } else {\n      this.createNewStaff();\n    }\n  }\n\n  setTable(): void {\n    if (this.selectedTable != null) {\n      this.tableService.managerAssignTable(this.selectedTable, this.data.staff.id).subscribe((data) => {});    \n    } \n    this.dialogRef.close();\n  }  \n\n  createNewStaff(): void {\n    this.staffService.createStaff(this.data.staff).subscribe((data) => {});\n    this.dialogRef.close();\n  }\n}\n    \n\n    \n        {{data.title}}\n\n  \n    \n      User Name\n      \n    \n    \n      Email\n      \n    \n  \n  \n    \n      Password\n      \n    \n  \n  Is Waiter\n\n      \n      Available tables\n      \n          Table {{table.tableNumber}}\n      \n  \n    \n\n\n\n  Cancel\n  Ok\n\n    \n\n    \n                \n                    ./add-staff-dialog.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.title}}            User Name                    Email                        Password              Is Waiter            Available tables                Table {{table.tableNumber}}              Cancel  Ok'\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AddStaffDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AllergensChipsComponent.html":{"url":"components/AllergensChipsComponent.html","title":"component - AllergensChipsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AllergensChipsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/customer-interface/allergens-chips/allergens-chips.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                allergens-chips\n            \n\n            \n                styleUrls\n                ./allergens-chips.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./allergens-chips.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allAllergens\n                            \n                            \n                                allergenInput\n                            \n                            \n                                allergens\n                            \n                            \n                                allergensCtrl\n                            \n                            \n                                calories\n                            \n                            \n                                filteredAllergens\n                            \n                            \n                                matAutocomplete\n                            \n                            \n                                removable\n                            \n                            \n                                selectable\n                            \n                            \n                                separatorKeysCodes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _filter\n                            \n                            \n                                add\n                            \n                            \n                                filterByAllergensAndCalories\n                            \n                            \n                                getAllergens\n                            \n                            \n                                getAllergensAndCalories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputChange\n                            \n                            \n                                remove\n                            \n                            \n                                reset\n                            \n                            \n                                selected\n                            \n                            \n                                setCalories\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(customerInterfaceComponent: CustomerInterfaceComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:65\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        customerInterfaceComponent\n                                                  \n                                                        \n                                                                        CustomerInterfaceComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a customer interface instance used in the class\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _filter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:135\n                \n            \n\n\n            \n                \n                    Converts the param to lower case.\nFilters the intial drop down list in alphabetical order.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the value to be added to the filtered \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        the list of allergen in aplhabetical order\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(event: MatChipInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:90\n                \n            \n\n\n            \n                \n                    Adds an allergen to the allergens list when a MatChipInput happens.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatChipInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the emitter event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterByAllergensAndCalories\n                        \n                        \n                    \n                \n            \n            \n                \nfilterByAllergensAndCalories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:194\n                \n            \n\n\n            \n                \n                    Calls the Customer Interface Method to filter by allergens and calories.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllergens\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllergens()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:147\n                \n            \n\n\n            \n                \n                    Forms from the selected allergens list a string with a boolean/\nformat that will be used by the get request to filter the DB.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a formatted string to be used by Api to filter the DB\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllergensAndCalories\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllergensAndCalories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:184\n                \n            \n\n\n            \n                \n                    Forms the string that will be used by the Menu Filter Service \nto make the get request to the DB.\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a formatted string to be used by Api to filter the DB\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:82\n                \n            \n\n\n            \n                \n                    Set up method that gets called once when the object gets instantiated.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInputChange\n                        \n                        \n                    \n                \n            \n            \n                \nonInputChange(event: MatSliderChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:174\n                \n            \n\n\n            \n                \n                    Sets the class field to the value of emitter event.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatSliderChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the emmiter event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(allergen: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:108\n                \n            \n\n\n            \n                \n                    Removes an allergen from the selected list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    allergen\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the allergen to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reset\n                        \n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:201\n                \n            \n\n\n            \n                \n                    Resets all the filters.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selected\n                        \n                        \n                    \n                \n            \n            \n                \nselected(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:122\n                \n            \n\n\n            \n                \n                    Adds the value of a MatAutoCompleted event and updates the value\nof the form controller.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the emmiter event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCalories\n                        \n                        \n                    \n                \n            \n            \n                \nsetCalories(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:165\n                \n            \n\n\n            \n                \n                    Sets a new value to the calories slider\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new value of the slider\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the value of slider\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allAllergens\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['Peanuts', 'Celery', 'Gluten', 'Crustaceans', 'Eggs', 'Fish', 'Lupin', 'Milk', 'Molluscs', 'Mustard', 'Nuts', 'Soya', 'Sesame Seeds', 'Sulphites']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:57\n                            \n                        \n\n                \n                    \n                        The list of all the available allergens.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergenInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('allergenInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergens\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['Celery']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:52\n                            \n                        \n\n                \n                    \n                        The list of selected allergens.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allergensCtrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:42\n                            \n                        \n\n                \n                    \n                        The form controller.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:62\n                            \n                        \n\n                \n                    \n                        The selected calories.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredAllergens\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:47\n                            \n                        \n\n                \n                    \n                        An async observable that gets the list of allergens filtered alphabetically.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matAutocomplete\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatAutocomplete\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('auto')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:32\n                            \n                        \n\n                \n                    \n                        Defines the allergen mat chip as removable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectable\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:27\n                            \n                        \n\n                \n                    \n                        Defines the allergen mat chip as selectable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            separatorKeysCodes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : [ENTER, COMMA]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/allergens-chips/allergens-chips.component.ts:37\n                            \n                        \n\n                \n                    \n                        Defines the list of the key codes that sepparate the chips.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { OnInit } from '@angular/core';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent, MatAutocomplete } from '@angular/material/autocomplete';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { CustomerInterfaceComponent } from \"../customer-interface.component\";\nimport { MatSliderChange } from '@angular/material/slider';\n@Component({\n  selector: 'allergens-chips',\n  templateUrl: './allergens-chips.component.html',\n  styleUrls: ['./allergens-chips.component.sass']\n})\n\n/**\n * The class that handles the selection of the allergens\n * and calories when filtering the menu.\n */\nexport class AllergensChipsComponent implements OnInit {\n\n  /**\n   * Defines the allergen mat chip as selectable.\n   */\n  selectable = true;\n\n  /**\n   * Defines the allergen mat chip as removable.\n   */\n  removable = true;\n\n  /**\n   * Defines the list of the key codes that sepparate the chips.\n   */\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  /**\n   * The form controller.\n   */\n  allergensCtrl = new FormControl();\n\n  /**\n   * An async observable that gets the list of allergens filtered alphabetically.\n   */\n  filteredAllergens: Observable;\n\n  /**\n   * The list of selected allergens.\n   */\n  allergens: string[] = ['Celery'];\n\n  /**\n   * The list of all the available allergens.\n   */\n  allAllergens: string[] = ['Peanuts', 'Celery', 'Gluten', 'Crustaceans', 'Eggs', 'Fish', 'Lupin', 'Milk', 'Molluscs', 'Mustard', 'Nuts', 'Soya', 'Sesame Seeds', 'Sulphites'];\n\n  /**\n   * The selected calories.\n   */\n  calories: number = 0;\n\n  @ViewChild('allergenInput') allergenInput: ElementRef;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  /**\n   * The constructor of the class.\n   * \n   * @param customerInterfaceComponent a customer interface instance used in the class\n   */\n  constructor(\n    private customerInterfaceComponent: CustomerInterfaceComponent) {\n    this.filteredAllergens = this.allergensCtrl.valueChanges.pipe(\n      startWith(null),\n      map((allergen: string | null) => allergen ? this._filter(allergen) : this.allAllergens.slice()));\n  }\n\n  /**\n   * Set up method that gets called once when the object gets instantiated.\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Adds an allergen to the allergens list when a MatChipInput happens.\n   * \n   * @param event the emitter event\n   */\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    if ((value || '').trim()) {\n      this.allergens.push(value.trim());\n    }\n    if (input) {\n      input.value = '';\n    }\n    this.allergensCtrl.setValue(null);\n  }\n\n  /**\n   * Removes an allergen from the selected list.\n   * \n   * @param allergen the allergen to be removed\n   */\n  remove(allergen: string): void {\n    const index = this.allergens.indexOf(allergen);\n\n    if (index >= 0) {\n      this.allergens.splice(index, 1);\n    }\n  }\n\n  /**\n   * Adds the value of a MatAutoCompleted event and updates the value\n   * of the form controller.\n   * \n   * @param event the emmiter event\n   */\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.allergens.push(event.option.viewValue);\n    this.allergenInput.nativeElement.value = '';\n    this.allergensCtrl.setValue(null);\n  }\n\n  /**\n   * Converts the param to lower case.\n   * Filters the intial drop down list in alphabetical order.\n   * \n   * @param value the value to be added to the filtered \n   * @returns the list of allergen in aplhabetical order\n   */\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.allAllergens.filter(allergen => allergen.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n  /**\n   * Forms from the selected allergens list a string with a boolean/\n   * format that will be used by the get request to filter the DB.\n   * \n   * @returns a formatted string to be used by Api to filter the DB\n   */\n  getAllergens(): string {\n    let result: string = \"/\";\n    for (let allergen of this.allAllergens) {\n      if (this.allergens.includes(allergen)) {\n        result = result.concat(\"1/\");\n      } else {\n        result = result.concat(\"0/\");\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Sets a new value to the calories slider\n   * \n   * @param value the new value of the slider\n   * @returns the value of slider\n   */\n  setCalories(value: number) {\n    return value;\n  }\n\n  /**\n   * Sets the class field to the value of emitter event.\n   * \n   * @param event the emmiter event\n   */\n  onInputChange(event: MatSliderChange) {\n    this.calories = event.value;\n  }\n\n  /**\n   * Forms the string that will be used by the Menu Filter Service \n   * to make the get request to the DB.\n   * \n   * @returns a formatted string to be used by Api to filter the DB\n   */\n  getAllergensAndCalories(): string {\n    let result: string = '';\n    result = result.concat(this.getAllergens());\n    result = result.concat(String(this.calories));\n    return result;\n  }\n\n  /**\n   * Calls the Customer Interface Method to filter by allergens and calories.\n   */\n  filterByAllergensAndCalories(): void {\n    this.customerInterfaceComponent.filter(this.getAllergensAndCalories());\n  }\n\n  /**\n   * Resets all the filters.\n   */\n  reset(): void {\n    this.customerInterfaceComponent.findCategoryItems();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{allergen}}\n      cancel\n    \n    \n  \n  \n    \n      {{allergen}}\n    \n  \n\nCalories\n  \n  \n\n\nFilter&nbsp;&nbsp;\nReset\n    \n\n    \n                \n                    ./allergens-chips.component.sass\n                \n                .chip-list\n  width: 100%\n\n.chip\n  font-family: 'Raleway', sans-serif\n  font-size: 20px\n\n.displayChip\n  background-color: #378d78\n  color: #c3a82e\n  font-family: 'Raleway', sans-serif\n  font-size: 20px\n\n.calories\n  font-family: 'Raleway', sans-serif\n  font-size: 20px\n\nbutton\n  font-family: 'Raleway', sans-serif\n  border-radius: 5em\n  background-color: #378d78\n  color: #c3a82e\n  font-size: 20px\n\n.matSlider\n  color: #c3a82e\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{allergen}}      cancel                      {{allergen}}      Calories    Filter  Reset'\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AllergensChipsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                prepareRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepareRoute\n                        \n                        \n                    \n                \n            \n            \n                \nprepareRoute(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'RestaurantWebApp'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {RouterOutlet} from \"@angular/router\";\nimport { fader } from \"./routeAnimations\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass'],\n  animations: [fader]\n})\nexport class AppComponent {\n  title = 'RestaurantWebApp';\n  prepareRoute(outlet: RouterOutlet){\n    return outlet && outlet.activatedRouteData;\n  }\n}\n\n    \n\n    \n        \n\n\n-->\n-->\n\n    \n\n    \n                \n                    ./app.component.sass\n                \n                .customerBackground\n  background-image: url('../assets/images/background.jpg')\n  background-size: cover\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '-->-->'\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAddIngredientComponent\n\nAddIngredientComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddIngredientComponent->AppModule\n\n\n\n\n\nAddIngredientDialogComponent\n\nAddIngredientDialogComponent\n\nAppModule -->\n\nAddIngredientDialogComponent->AppModule\n\n\n\n\n\nAddMenuDialogComponent\n\nAddMenuDialogComponent\n\nAppModule -->\n\nAddMenuDialogComponent->AppModule\n\n\n\n\n\nAddStaffComponent\n\nAddStaffComponent\n\nAppModule -->\n\nAddStaffComponent->AppModule\n\n\n\n\n\nAddStaffDialogComponent\n\nAddStaffDialogComponent\n\nAppModule -->\n\nAddStaffDialogComponent->AppModule\n\n\n\n\n\nAllergensChipsComponent\n\nAllergensChipsComponent\n\nAppModule -->\n\nAllergensChipsComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBasketComponent\n\nBasketComponent\n\nAppModule -->\n\nBasketComponent->AppModule\n\n\n\n\n\nCallWaiterComponent\n\nCallWaiterComponent\n\nAppModule -->\n\nCallWaiterComponent->AppModule\n\n\n\n\n\nCategoryDialogComponent\n\nCategoryDialogComponent\n\nAppModule -->\n\nCategoryDialogComponent->AppModule\n\n\n\n\n\nCustomerInterfaceComponent\n\nCustomerInterfaceComponent\n\nAppModule -->\n\nCustomerInterfaceComponent->AppModule\n\n\n\n\n\nExpansionPannelComponent\n\nExpansionPannelComponent\n\nAppModule -->\n\nExpansionPannelComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nIngredientsDialogComponent\n\nIngredientsDialogComponent\n\nAppModule -->\n\nIngredientsDialogComponent->AppModule\n\n\n\n\n\nKitchenMenuComponent\n\nKitchenMenuComponent\n\nAppModule -->\n\nKitchenMenuComponent->AppModule\n\n\n\n\n\nLoginInputComponent\n\nLoginInputComponent\n\nAppModule -->\n\nLoginInputComponent->AppModule\n\n\n\n\n\nManagerMenuComponent\n\nManagerMenuComponent\n\nAppModule -->\n\nManagerMenuComponent->AppModule\n\n\n\n\n\nMenusListDisplayComponent\n\nMenusListDisplayComponent\n\nAppModule -->\n\nMenusListDisplayComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nNotificationsDialogComponent\n\nNotificationsDialogComponent\n\nAppModule -->\n\nNotificationsDialogComponent->AppModule\n\n\n\n\n\nOrderComponent\n\nOrderComponent\n\nAppModule -->\n\nOrderComponent->AppModule\n\n\n\n\n\nOrderTrackerComponent\n\nOrderTrackerComponent\n\nAppModule -->\n\nOrderTrackerComponent->AppModule\n\n\n\n\n\nOrdersListDisplayComponent\n\nOrdersListDisplayComponent\n\nAppModule -->\n\nOrdersListDisplayComponent->AppModule\n\n\n\n\n\nPaymentComponent\n\nPaymentComponent\n\nAppModule -->\n\nPaymentComponent->AppModule\n\n\n\n\n\nPickTableDialogComponent\n\nPickTableDialogComponent\n\nAppModule -->\n\nPickTableDialogComponent->AppModule\n\n\n\n\n\nReadyToOrderComponent\n\nReadyToOrderComponent\n\nAppModule -->\n\nReadyToOrderComponent->AppModule\n\n\n\n\n\nSalesDialogComponent\n\nSalesDialogComponent\n\nAppModule -->\n\nSalesDialogComponent->AppModule\n\n\n\n\n\nSelectTableDialogComponent\n\nSelectTableDialogComponent\n\nAppModule -->\n\nSelectTableDialogComponent->AppModule\n\n\n\n\n\nTablesListDisplayComponent\n\nTablesListDisplayComponent\n\nAppModule -->\n\nTablesListDisplayComponent->AppModule\n\n\n\n\n\nWaiterMenuComponent\n\nWaiterMenuComponent\n\nAppModule -->\n\nWaiterMenuComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddIngredientComponent\n                        \n                        \n                            AddIngredientDialogComponent\n                        \n                        \n                            AddMenuDialogComponent\n                        \n                        \n                            AddStaffComponent\n                        \n                        \n                            AddStaffDialogComponent\n                        \n                        \n                            AllergensChipsComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            BasketComponent\n                        \n                        \n                            CallWaiterComponent\n                        \n                        \n                            CategoryDialogComponent\n                        \n                        \n                            CustomerInterfaceComponent\n                        \n                        \n                            ExpansionPannelComponent\n                        \n                        \n                            HomePageComponent\n                        \n                        \n                            IngredientsDialogComponent\n                        \n                        \n                            KitchenMenuComponent\n                        \n                        \n                            LoginInputComponent\n                        \n                        \n                            ManagerMenuComponent\n                        \n                        \n                            MenusListDisplayComponent\n                        \n                        \n                            NotificationsComponent\n                        \n                        \n                            NotificationsDialogComponent\n                        \n                        \n                            OrderComponent\n                        \n                        \n                            OrderTrackerComponent\n                        \n                        \n                            OrdersListDisplayComponent\n                        \n                        \n                            PaymentComponent\n                        \n                        \n                            PickTableDialogComponent\n                        \n                        \n                            ReadyToOrderComponent\n                        \n                        \n                            SalesDialogComponent\n                        \n                        \n                            SelectTableDialogComponent\n                        \n                        \n                            TablesListDisplayComponent\n                        \n                        \n                            WaiterMenuComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { WaiterMenuComponent } from './waiter-menu/waiter-menu.component';\nimport { CustomerInterfaceComponent } from './customer-interface/customer-interface.component';\nimport { LoginInputComponent } from './login-input/login-input.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule} from '@angular/material/select';\nimport { OrderComponent} from './waiter-menu/order/order.component';\nimport { MatDialogModule} from '@angular/material/dialog';\nimport { MatCardModule} from '@angular/material/card';\nimport { MatButtonModule} from '@angular/material/button';\nimport { MatGridListModule} from '@angular/material/grid-list';\nimport { MatDividerModule} from '@angular/material/divider';\nimport { MatListModule} from '@angular/material/list';\nimport { MatIconModule} from '@angular/material/icon';\nimport { CommonModule } from '@angular/common';\nimport { MatToolbarModule} from '@angular/material/toolbar';\nimport { MatSidenavModule} from '@angular/material/sidenav';\nimport { MatExpansionModule} from '@angular/material/expansion';\nimport { MatChipsModule} from '@angular/material/chips';\nimport { ExpansionPannelComponent } from './customer-interface/expansion-pannel/expansion-pannel.component';\nimport { AllergensChipsComponent } from './customer-interface/allergens-chips/allergens-chips.component';\nimport { MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { MatSliderModule} from '@angular/material/slider';\nimport { MatTableModule} from \"@angular/material/table\";\nimport { MatInputModule} from \"@angular/material/input\";\nimport { AddMenuDialogComponent } from './waiter-menu/add-menu-dialog/add-menu-dialog.component';\nimport { NgOtpInputModule } from  'ng-otp-input';\nimport { MatCheckboxModule} from \"@angular/material/checkbox\";\nimport { BasketComponent } from './customer-interface/basket/basket.component';\nimport { CallWaiterComponent } from './customer-interface/call-waiter/call-waiter.component';\nimport { NotificationsComponent } from './waiter-menu/notifications/notifications.component';\nimport { MatBadgeModule} from '@angular/material/badge';\nimport { NotificationsDialogComponent } from './waiter-menu/notifications/notifications-dialog/notifications-dialog.component';\nimport { SelectTableDialogComponent } from './home-page/select-table-dialog/select-table-dialog.component';\nimport { PickTableDialogComponent } from './waiter-menu/pick-table-dialog/pick-table-dialog.component';\nimport { ReadyToOrderComponent } from './customer-interface/ready-to-order/ready-to-order.component';\nimport { MatStepperModule} from '@angular/material/stepper';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { KitchenMenuComponent } from './kitchen-menu/kitchen-menu.component';\nimport { MatSlideToggleModule} from \"@angular/material/slide-toggle\";\nimport { OrdersListDisplayComponent } from './orders-list-display/orders-list-display.component';\nimport { ManagerMenuComponent } from './manager-menu/manager-menu.component';\nimport { MatSnackBarModule} from '@angular/material/snack-bar';\nimport { OrderTrackerComponent } from './customer-interface/order-tracker/order-tracker.component';\nimport { MenusListDisplayComponent } from './menus-list-display/menus-list-display.component';\nimport { AddStaffComponent } from './manager-menu/add-staff/add-staff.component';\nimport { AddStaffDialogComponent } from './manager-menu/add-staff-dialog/add-staff-dialog.component';\nimport { TablesListDisplayComponent } from './tables-list-display/tables-list-display.component';\nimport { MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { MatRadioModule} from \"@angular/material/radio\";\nimport { AddIngredientComponent } from './manager-menu/add-ingredient/add-ingredient.component';\nimport { AddIngredientDialogComponent } from './manager-menu/add-ingredient-dialog/add-ingredient-dialog.component';\nimport { PaymentComponent } from './customer-interface/payment/payment.component';\nimport { CategoryDialogComponent } from './category-dialog/category-dialog.component';\nimport { IngredientsDialogComponent } from './menus-list-display/ingredients-dialog/ingredients-dialog.component';\nimport { SalesDialogComponent } from './manager-menu/add-staff/sales-dialog/sales-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WaiterMenuComponent,\n    CustomerInterfaceComponent,\n    LoginInputComponent,\n    HomePageComponent,\n    OrderComponent,\n    ExpansionPannelComponent,\n    AllergensChipsComponent,\n    AddMenuDialogComponent,\n    BasketComponent,\n    CallWaiterComponent,\n    NotificationsComponent,\n    NotificationsDialogComponent,\n    SelectTableDialogComponent,\n    PickTableDialogComponent,\n    ReadyToOrderComponent,\n    KitchenMenuComponent,\n    OrdersListDisplayComponent,\n    ManagerMenuComponent,\n    OrderTrackerComponent,\n    MenusListDisplayComponent,\n    AddStaffComponent,\n    AddStaffDialogComponent,\n    TablesListDisplayComponent,\n    AddIngredientComponent,\n    AddIngredientDialogComponent,\n    PaymentComponent,\n    CategoryDialogComponent,\n    IngredientsDialogComponent,\n    SalesDialogComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        FormsModule,\n        CommonModule,\n        MatDialogModule,\n        MatCardModule,\n        MatButtonModule,\n        MatGridListModule,\n        MatDividerModule,\n        MatListModule,\n        MatIconModule,\n        MatSelectModule,\n        MatToolbarModule,\n        MatSidenavModule,\n        MatExpansionModule,\n        MatChipsModule,\n        MatAutocompleteModule,\n        MatSliderModule,\n        MatTableModule,\n        MatCheckboxModule,\n        NgOtpInputModule,\n        MatBadgeModule,\n        MatSlideToggleModule,\n        MatBadgeModule,\n        MatStepperModule,\n        ReactiveFormsModule,\n        MatSnackBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule\n    ],\n  providers: [AllergensChipsComponent, CustomerInterfaceComponent, BasketComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomerInterfaceComponent } from './customer-interface/customer-interface.component';\nimport { LoginInputComponent } from './login-input/login-input.component';\nimport { WaiterMenuComponent } from './waiter-menu/waiter-menu.component';\nimport { HomePageComponent } from './home-page/home-page.component';\nimport { OrderComponent } from './waiter-menu/order/order.component';\nimport { KitchenMenuComponent } from \"./kitchen-menu/kitchen-menu.component\";\nimport { ManagerMenuComponent } from \"./manager-menu/manager-menu.component\";\nimport { AddStaffComponent } from './manager-menu/add-staff/add-staff.component';\nimport { LandingPageComponent } from \"./landing-page/landing-page.component\";\nimport { AddIngredientComponent } from './manager-menu/add-ingredient/add-ingredient.component';\nimport { PaymentComponent } from './customer-interface/payment/payment.component';\n\nconst APP_ROUTES: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'table/:id', component: OrderComponent },\n  { path: 'home', component: LandingPageComponent },\n  { path: 'login', component: LoginInputComponent },\n  { path: 'waiter-menu', component: WaiterMenuComponent },\n  { path: 'kitchen-menu', component: KitchenMenuComponent },\n  { path: 'manager-menu', component: ManagerMenuComponent },\n  { path: 'manager-menu/add-staff', component: AddStaffComponent },\n  { path: 'manager-menu/add-ingredient', component: AddIngredientComponent },\n  { path: 'customer-menu', component: CustomerInterfaceComponent },\n  { path: 'payment', component: PaymentComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(APP_ROUTES,\n    {\n      relativeLinkResolution: 'legacy',\n      scrollPositionRestoration: 'disabled'\n    })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BasketComponent.html":{"url":"components/BasketComponent.html","title":"component - BasketComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BasketComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/customer-interface/basket/basket.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-basket\n            \n\n            \n                styleUrls\n                ./basket.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./basket.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                customerId\n                            \n                            \n                                mealList\n                            \n                            \n                                orderPlaced\n                            \n                            \n                                orderTotal\n                            \n                            \n                                tableNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                clear\n                            \n                            \n                                getInitialOrderTotal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                            \n                                placeOrder\n                            \n                            \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar, tableService: TableService, mealService: MealService, orderService: OrderService, customerService: CustomerService, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/customer-interface/basket/basket.component.ts:47\n                            \n                        \n\n                \n                    \n                            The constructor of the class. \nInjects the mat dialog data passed by the customer interface into the meal list,\ncustomer id and table number.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a snack bar \n\n                                                        \n                                                \n                                                \n                                                        tableService\n                                                  \n                                                        \n                                                                        TableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the table service that is used to make get and put requests\n\n                                                        \n                                                \n                                                \n                                                        mealService\n                                                  \n                                                        \n                                                                        MealService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the meal service that is used to make get and post requests\n\n                                                        \n                                                \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the order servic that is used to make get get and post requests\n\n                                                        \n                                                \n                                                \n                                                        customerService\n                                                  \n                                                        \n                                                                        CustomerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the customer service that is used to make get requests\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the Mat Dialog data to be injected\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(meal: Meal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/basket/basket.component.ts:110\n                \n            \n\n\n            \n                \n                    Adds a meal to the seletected meal list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    meal\n                                    \n                                                Meal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the meal to be added to the selected meal list\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear(meal: Meal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/basket/basket.component.ts:97\n                \n            \n\n\n            \n                \n                    Deletes a meal from the selected meals list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    meal\n                                    \n                                                Meal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the meal item do be deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialOrderTotal\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialOrderTotal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/basket/basket.component.ts:86\n                \n            \n\n\n            \n                \n                    Calculates the intial order total(from the meal selection\ninjected from the customer interface).\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/basket/basket.component.ts:78\n                \n            \n\n\n            \n                \n                    A set up method that gets executed once when the class \ngets instantiated.\nIntialises the order total.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            openSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openSnackBar(message: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/basket/basket.component.ts:168\n                \n            \n\n\n            \n                \n                    Opens a snack bar to display an informative message when the user places an order.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the snack bar message\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the action to be done by the snack bar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            placeOrder\n                        \n                        \n                    \n                \n            \n            \n                \nplaceOrder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/basket/basket.component.ts:141\n                \n            \n\n\n            \n                \n                    If the order was not placed, it subscribes to getTableByNumber() that returns\nan observable of Table. Inside the subscription, it assigns a waiter to the order\nand sets the table as ready. It subscribes to the getCustomerId() with the customerId\nand it subscribes to createOrder() with the customer object returned by getCustomerById\nand the order total to create a new order. Inside the subscription, it loops through\nthe meal list and creates the corresponding meals assigned to the order.\nOpens a snack bar to inform the user than an order was placed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(meal: Meal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/basket/basket.component.ts:122\n                \n            \n\n\n            \n                \n                    Decreases the number of selections of a meal or, if meal nr of \nselections is 1, deletes it from the list. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    meal\n                                    \n                                                Meal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the meal to be removed from the selected meal list\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/basket/basket.component.ts:36\n                            \n                        \n\n                \n                    \n                        The customer id that is used by the customer service to make \na get request.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mealList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Meal[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/basket/basket.component.ts:25\n                            \n                        \n\n                \n                    \n                        The meal list selected by the customer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderPlaced\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/basket/basket.component.ts:47\n                            \n                        \n\n                \n                    \n                        Indicates if the order was placed or not.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderTotal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/basket/basket.component.ts:30\n                            \n                        \n\n                \n                    \n                        The order total of the meal list.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/basket/basket.component.ts:42\n                            \n                        \n\n                \n                    \n                        The table number that is used by the table service to make \na get request.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { MealService } from '../../meal.service';\nimport { OrderService } from '../../order.service';\nimport { TableService } from '../../table.service';\nimport { Meal } from '../../../models/Meal';\nimport { CustomerService } from '../../customer.service';\n\n@Component({\n  selector: 'app-basket',\n  templateUrl: './basket.component.html',\n  styleUrls: ['./basket.component.sass']\n})\n\n/**\n * The class that handles the basket and placing an order.\n */\nexport class BasketComponent implements OnInit {\n\n  /**\n   * The meal list selected by the customer.\n   */\n  mealList: Meal[];\n  \n  /**\n   * The order total of the meal list.\n   */\n  orderTotal: number = 0;\n\n  /**\n   * The customer id that is used by the customer service to make \n   * a get request.\n   */\n  customerId: number;\n\n  /**\n   * The table number that is used by the table service to make \n   * a get request.\n   */\n  tableNumber: number;\n\n  /**\n   * Indicates if the order was placed or not.\n   */\n  orderPlaced: boolean = false;\n\n  /**\n   * The constructor of the class. \n   * Injects the mat dialog data passed by the customer interface into the meal list,\n   * customer id and table number.\n   * \n   * @param snackBar a snack bar \n   * @param tableService the table service that is used to make get and put requests\n   * @param mealService the meal service that is used to make get and post requests\n   * @param orderService the order servic that is used to make get get and post requests\n   * @param customerService the customer service that is used to make get requests\n   * @param data the Mat Dialog data to be injected\n   */\n  constructor(\n    private snackBar: MatSnackBar,\n    private tableService: TableService,\n    private mealService: MealService,\n    private orderService: OrderService,\n    private customerService: CustomerService,\n    @Inject(MAT_DIALOG_DATA) data) {\n    this.mealList = data.selectedMeals;\n    this.customerId = data.customerId;\n    this.tableNumber = data.tableNumber;\n  }\n\n  /**\n   * A set up method that gets executed once when the class \n   * gets instantiated.\n   * Intialises the order total.\n   */\n  ngOnInit(): void {\n    this.getInitialOrderTotal();\n  }\n\n  /**\n   * Calculates the intial order total(from the meal selection\n   * injected from the customer interface).\n   */\n  getInitialOrderTotal() {\n    for (let meal of this.mealList) {\n      this.orderTotal += meal.menu.price * meal.numberSelections;\n    }\n  }\n\n  /**\n   * Deletes a meal from the selected meals list.\n   * \n   * @param meal the meal item do be deleted\n   */\n  clear(meal: Meal): void {\n    const index = this.mealList.indexOf(meal, 0);\n    this.orderTotal -= meal.menu.price * meal.numberSelections;\n    if (index > -1) {\n      this.mealList.splice(index, 1);\n    }\n  }\n\n  /**\n   * Adds a meal to the seletected meal list.\n   * \n   * @param meal the meal to be added to the selected meal list\n   */\n  add(meal: Meal): void {\n    const index = this.mealList.indexOf(meal, 0);\n    this.mealList[index].numberSelections++;\n    this.orderTotal += meal.menu.price;\n  }\n\n  /**\n   * Decreases the number of selections of a meal or, if meal nr of \n   * selections is 1, deletes it from the list. \n   * \n   * @param meal the meal to be removed from the selected meal list\n   */\n  remove(meal: Meal): void {\n    const index = this.mealList.indexOf(meal, 0);\n    this.orderTotal -= meal.menu.price;\n    if (this.mealList[index].numberSelections > 1) {\n      this.mealList[index].numberSelections--;\n    } else {\n      this.mealList.splice(index, 1);\n    }\n  }\n\n  /**\n   * If the order was not placed, it subscribes to getTableByNumber() that returns\n   * an observable of Table. Inside the subscription, it assigns a waiter to the order\n   * and sets the table as ready. It subscribes to the getCustomerId() with the customerId\n   * and it subscribes to createOrder() with the customer object returned by getCustomerById\n   * and the order total to create a new order. Inside the subscription, it loops through\n   * the meal list and creates the corresponding meals assigned to the order.\n   * Opens a snack bar to inform the user than an order was placed.\n   */\n  placeOrder(): void {\n    if (this.orderPlaced == false) {\n      this.tableService.getTableByNumber(this.tableNumber).subscribe((table) => {\n        this.orderService.waiterId = table.waiterId;  \n        table.isReady = true;\n        this.tableService.updateTable(table);\n      })       \n      this.customerService.getCustomerByID(this.customerId).subscribe((customer) => {\n        this.orderService.createNewOrder(customer, this.orderTotal).subscribe((order) => {\n          for (var i = 0; i \n    \n\n    \n        \n  \n    \n      \n      Shopping Cart\n    \n  \n  \n    \n      \n        \n          \n            \n              delete\n            \n            {{meal.menu.name}} ({{meal.menu.price * meal.numberSelections}}$)\n          \n          \n            \n              add\n            \n            x{{meal.numberSelections}}\n            \n              remove\n            \n          \n        \n         0 \">\n          \n            \n              attach_money\n            \n            Total: {{orderTotal}}\n          \n        \n      \n    \n    \n      \n        \n          \n            Place Order\n          \n        \n      \n    \n  \n  \n    \n       Empty Shopping Cart!\n    \n  \n\n    \n\n    \n                \n                    ./basket.component.sass\n                \n                .title\n  font-size: 30px\n  font-family: 'Cedarville Cursive', cursive\n  color: #b9a239\n\n.selectedItemsTitle\n  display: block\n  text-decoration: none\n  font-family: 'Cedarville Cursive', cursive\n  font-size: 30px\n  margin: auto\n  color: #b9a239\n  padding: 10px\n\n.orderPlacedMessage\n  display: block\n  font-family: 'Raleway', sans-serif\n\n.emptyShoppingCartBlock\n  text-align: center\n  display: block\n  background-color: #388572\n  color: #b9a239\n  font-family: 'Raleway', sans-serif\n  margin: auto\n\n.meal\n  font-family: 'Raleway', sans-serif\n  font-size: 15px\n\n.numberOfSelections\n  font-size: 15px\n\n.placeOrder\n  font-family: 'Raleway', sans-serif\n  background-color: #388572\n  font-size: 15px\n  color: #b9a239\n\n.selection-fab\n  background-color: #388572\n  font-size: 15px\n  font-family: 'Raleway', sans-serif\n  color: #b9a239\n\n.selectedItems\n  font-family: 'Raleway', sans-serif\n  font-size: 15px\n\n.list\n  text-align: center\n\n.center\n  display: block\n  margin: auto\n\n#emptyShoppingCartBlock\n  text-align: center\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Shopping Cart                                                              delete                        {{meal.menu.name}} ({{meal.menu.price * meal.numberSelections}}$)                                              add                        x{{meal.numberSelections}}                          remove                                       0 \">                                    attach_money                        Total: {{orderTotal}}                                                                    Place Order                                           Empty Shopping Cart!      '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BasketComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CallWaiterComponent.html":{"url":"components/CallWaiterComponent.html","title":"component - CallWaiterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CallWaiterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/customer-interface/call-waiter/call-waiter.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                call-waiter\n            \n\n            \n                styleUrls\n                ./call-waiter.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./call-waiter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tableNumber\n                            \n                            \n                                waiterCalled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                callWaiter\n                            \n                            \n                                cancel\n                            \n                            \n                                getNeedHelp\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(customerInterface: CustomerInterfaceComponent, tableService: TableService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/customer-interface/call-waiter/call-waiter.component.ts:27\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        customerInterface\n                                                  \n                                                        \n                                                                        CustomerInterfaceComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a customer interface instance\n\n                                                        \n                                                \n                                                \n                                                        tableService\n                                                  \n                                                        \n                                                                        TableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the table service that is used to make get and post requests\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a snack bar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            callWaiter\n                        \n                        \n                    \n                \n            \n            \n                \ncallWaiter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/call-waiter/call-waiter.component.ts:70\n                \n            \n\n\n            \n                \n                    Subscribes to getTableByNumber() with the the table number that returns an \nTable Observable. Inside the subscription, it makes a post request to update the\ntable.NeedsHelp to true. Opens a snack bar to inform the user a waiter was called.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/call-waiter/call-waiter.component.ts:83\n                \n            \n\n\n            \n                \n                    Subscribes to getTableByNumber() with the the table number that returns an \nTable Observable. Inside the subscription, it makes a post request to update the\ntable.NeedsHelp to false. Opens a snack bar to inform the user the waiter call was canceled.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNeedHelp\n                        \n                        \n                    \n                \n            \n            \n                \ngetNeedHelp()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/call-waiter/call-waiter.component.ts:59\n                \n            \n\n\n            \n                \n                    Makes a get request, subscribing to getTableByNumber() with the table number that returns an\nTable Observable. Inside the subscription it updates the waiterCalled field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/call-waiter/call-waiter.component.ts:47\n                \n            \n\n\n            \n                \n                    Set-up method only called once when the class gets instantiated.\nSets the table number with the the table number from the customer interface.\nIt subscribes to the refreshNeeded Subject to listen to DB changes and handle\nthem instantly and calls getNeedHelp().\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            openSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openSnackBar(message: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/call-waiter/call-waiter.component.ts:97\n                \n            \n\n\n            \n                \n                    Opens a snack bar with an informative message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the message of the snack bar\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the action of the snack bar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/call-waiter/call-waiter.component.ts:27\n                            \n                        \n\n                \n                    \n                        The table number that is used when making get and post requests.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            waiterCalled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/call-waiter/call-waiter.component.ts:22\n                            \n                        \n\n                \n                    \n                        Indicates if the waiter was called or not changes\nthe button accordingly.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { CustomerInterfaceComponent } from '../customer-interface.component';\nimport { TableService } from '../../table.service';\n\n@Component({\n  selector: 'call-waiter',\n  templateUrl: './call-waiter.component.html',\n  styleUrls: ['./call-waiter.component.sass']\n})\n\n/**\n * The class that handles calling the waiter.\n */\nexport class CallWaiterComponent implements OnInit {\n\n  /**\n   * Indicates if the waiter was called or not changes\n   * the button accordingly.\n   */\n  waiterCalled: boolean;\n\n  /**\n   * The table number that is used when making get and post requests.\n   */\n  tableNumber: number;\n\n  /**\n   * The constructor of the class.\n   * \n   * @param customerInterface a customer interface instance\n   * @param tableService the table service that is used to make get and post requests\n   * @param snackBar a snack bar\n   */\n  constructor(\n    private customerInterface: CustomerInterfaceComponent,\n    private tableService: TableService,\n    private snackBar: MatSnackBar) { }\n\n  /**\n   * Set-up method only called once when the class gets instantiated.\n   * Sets the table number with the the table number from the customer interface.\n   * It subscribes to the refreshNeeded Subject to listen to DB changes and handle\n   * them instantly and calls getNeedHelp().\n   */\n  ngOnInit(): void {\n    this.tableNumber = this.customerInterface.paramsObject.params.selectedTable;\n    this.tableService.refreshNeeded.subscribe(() => {\n      this.getNeedHelp();\n    })\n    this.getNeedHelp();\n  }\n\n  /**\n   * Makes a get request, subscribing to getTableByNumber() with the table number that returns an\n   * Table Observable. Inside the subscription it updates the waiterCalled field.\n   */\n  getNeedHelp(): void {\n    this.tableService.getTableByNumber(this.tableNumber).subscribe((table) => {\n      this.waiterCalled = table.needsHelp;\n    })\n  }\n\n  /**\n   * Subscribes to getTableByNumber() with the the table number that returns an \n   * Table Observable. Inside the subscription, it makes a post request to update the\n   * table.NeedsHelp to true. Opens a snack bar to inform the user a waiter was called.\n   */\n  callWaiter(): void {\n    this.tableService.getTableByNumber(this.tableNumber).subscribe((table) => {\n      table.needsHelp = true;\n      this.tableService.updateTable(table);\n    })\n    this.openSnackBar(\"A waiter will come to you\", \"Please Wait\");\n  }\n\n  /**\n   * Subscribes to getTableByNumber() with the the table number that returns an \n   * Table Observable. Inside the subscription, it makes a post request to update the\n   * table.NeedsHelp to false. Opens a snack bar to inform the user the waiter call was canceled.\n   */\n  cancel(): void {\n    this.tableService.getTableByNumber(this.tableNumber).subscribe((table) => {\n      table.needsHelp = false;\n      this.tableService.updateTable(table);\n    })\n    this.openSnackBar(\"You canceled the waiter call\", \"Still need help?\");\n  }\n\n  /**\n   * Opens a snack bar with an informative message.\n   * \n   * @param message the message of the snack bar\n   * @param action the action of the snack bar\n   */\n  private openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n      panelClass: ['orderSnackBar']\n    });\n  }\n\n}\n    \n\n    \n        \n    \n        help\n    \n    \n        \n            cancel\n        \n    \n\n    \n\n    \n                \n                    ./call-waiter.component.sass\n                \n                button\n  line-height: 1px\n  font-size: 20px\n\n.callWaiterButton\n  text-align: center\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            help                            cancel            '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CallWaiterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryDialogComponent.html":{"url":"components/CategoryDialogComponent.html","title":"component - CategoryDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CategoryDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/category-dialog/category-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-dialog\n            \n\n            \n                styleUrls\n                ./category-dialog.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./category-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: MenuCategory)\n                    \n                \n                        \n                            \n                                Defined in src/app/category-dialog/category-dialog.component.ts:15\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                adialog ref\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        MenuCategory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the mat dialog data that gets injected\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeDialog\n                        \n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/category-dialog/category-dialog.component.ts:42\n                \n            \n\n\n            \n                \n                    Closes the dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/category-dialog/category-dialog.component.ts:29\n                \n            \n\n\n            \n                \n                    A set-up method that gets called once when the class gets instantiated.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/category-dialog/category-dialog.component.ts:35\n                \n            \n\n\n            \n                \n                    Closes the dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuCategory\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/category-dialog/category-dialog.component.ts:24\n                            \n                        \n\n                \n                    \n                        the mat dialog data that gets injected\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/category-dialog/category-dialog.component.ts:23\n                            \n                        \n\n                \n                    \n                        adialog ref\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material/dialog\";\nimport { Menu } from \"../../models/Menu\";\nimport { MenuCategory } from \"../../models/MenuCategory\";\n\n@Component({\n  selector: 'app-category-dialog',\n  templateUrl: './category-dialog.component.html',\n  styleUrls: ['./category-dialog.component.sass']\n})\n\n/**\n * The class that handles selcting a menu category.\n */\nexport class CategoryDialogComponent implements OnInit {\n\n  /**\n   * The constructor of the class.\n   * \n   * @param dialogRef adialog ref\n   * @param data the mat dialog data that gets injected\n   */\n  constructor(public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: MenuCategory) { }\n\n  /**\n   * A set-up method that gets called once when the class gets instantiated.\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Closes the dialog.\n   */\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Closes the dialog.\n   */\n  closeDialog() {\n    this.dialogRef.close(this.data);\n  }\n}\n\n    \n\n    \n        Add Category\n\n  \n    Category Name\n    \n  \n\n\n  Cancel\n  Ok\n\n    \n\n    \n                \n                    ./category-dialog.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Add Category      Category Name        Cancel  Ok'\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoryDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Customer.html":{"url":"classes/Customer.html","title":"class - Customer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Customer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Customer.ts\n        \n\n            \n                Description\n            \n            \n                Customer model with id, table, and orders\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                orders\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Customer.ts:12\n                            \n                        \n\n                \n                    \n                        The id of the customer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Customer.ts:22\n                            \n                        \n\n                \n                    \n                        The list of orders associated with the customer.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Customer.ts:17\n                            \n                        \n\n                \n                    \n                        The table assigned to the customer.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Table } from \"./Table\";\nimport { Order } from \"./Order\";\n\n/**\n * Customer model with id, table, and orders\n */\nexport class Customer {\n\n    /**\n     * The id of the customer.\n     */\n    id: number;\n\n    /**\n     * The table assigned to the customer.\n     */\n    table: Table;\n\n    /**\n     * The list of orders associated with the customer.\n     */\n    orders: Order[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomerInterfaceComponent.html":{"url":"components/CustomerInterfaceComponent.html","title":"component - CustomerInterfaceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CustomerInterfaceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/customer-interface/customer-interface.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-customer-interface\n            \n\n            \n                styleUrls\n                ./customer-interface.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./customer-interface.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                menu\n                            \n                            \n                                orderPlaced\n                            \n                            \n                                paramsObject\n                            \n                            \n                                selectedCategory\n                            \n                            \n                                selectedMeals\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMeal\n                            \n                            \n                                allergensArray\n                            \n                            \n                                clearMeal\n                            \n                            \n                                    Async\n                                filter\n                            \n                            \n                                findCategoryItems\n                            \n                            \n                                getNumberOfSelections\n                            \n                            \n                                goHome\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openBasket\n                            \n                            \n                                openTracker\n                            \n                            \n                                removeMeal\n                            \n                            \n                                selectCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuService, menuCategoryService: MenuCategoryService, menuFilterService: MenuFilterService, route: ActivatedRoute, dialog: MatDialog, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/customer-interface/customer-interface.component.ts:71\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the menu service that is used to make get requests\n\n                                                        \n                                                \n                                                \n                                                        menuCategoryService\n                                                  \n                                                        \n                                                                        MenuCategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the menu category service that is used to make get requets\n\n                                                        \n                                                \n                                                \n                                                        menuFilterService\n                                                  \n                                                        \n                                                                        MenuFilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the menu filter service that is used to make get requests\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the activated route from the home page\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a mat dialog\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a router to navigate to the home page\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMeal\n                        \n                        \n                    \n                \n            \n            \n                \naddMeal(menuItem: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/customer-interface.component.ts:155\n                \n            \n\n\n            \n                \n                    Adds a meal to the selected meals or increases the number of selections\nof that meal if already present.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    menuItem\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the menu item to be added\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            allergensArray\n                        \n                        \n                    \n                \n            \n            \n                \nallergensArray(item: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/customer-interface.component.ts:273\n                \n            \n\n\n            \n                \n                    Forms a string with the allergens present in a menu item.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the menu item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        a string with all the allergens\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearMeal\n                        \n                        \n                    \n                \n            \n            \n                \nclearMeal(menuItem: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/customer-interface.component.ts:193\n                \n            \n\n\n            \n                \n                    Deletes a meal from the selected meals list.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    menuItem\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the menu item to be cleared\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(filteredArgs: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/customer-interface.component.ts:133\n                \n            \n\n\n            \n                \n                    Filters the menu items in the selected category by calories and allergens.\nIt makes a get request to the Menu DB by subscribing to filter() that returns\nan Menu[] observable with the filtered menu items. Inside the subscription, \nit filters the filtered by category menu with the allergies and callories.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filteredArgs\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the filter arguments\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findCategoryItems\n                        \n                        \n                    \n                \n            \n            \n                \nfindCategoryItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/customer-interface.component.ts:114\n                \n            \n\n\n            \n                \n                    Returns a list of the menu items in that category.\nIt makes a get request to the Menu DB by subscribing to getMenus() that\nreturns a Menu[] observable. Then it filters the menu items by the selected category.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNumberOfSelections\n                        \n                        \n                    \n                \n            \n            \n                \ngetNumberOfSelections(menuItem: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/customer-interface.component.ts:207\n                \n            \n\n\n            \n                \n                    Gets the number of selections of a meal.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    menuItem\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the menu item \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the number of selections\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goHome\n                        \n                        \n                    \n                \n            \n            \n                \ngoHome()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/customer-interface.component.ts:253\n                \n            \n\n\n            \n                \n                    Navigates to the home page via a router.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/customer-interface.component.ts:96\n                \n            \n\n\n            \n                \n                    A set-up method that gets called once when the class gets instantiated.\nIt subscribed to activated route query params and sets the paramsObject.\nIt makes a get reuqest to the the menuCategory DB by subscribing to getMenuCategories()\nthat returns an Category[] Observale. Inside the subscription, it sets the categories.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openBasket\n                        \n                        \n                    \n                \n            \n            \n                \nopenBasket()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/customer-interface.component.ts:222\n                \n            \n\n\n            \n                \n                    Opens the basket dialog.\nIt configures the data to be injected in the dialog using the dialog config, passing\nthe customer ID, the selected meals and the table Number.\nAfter the dialog is closedm it uodates the orderPlaced field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openTracker\n                        \n                        \n                    \n                \n            \n            \n                \nopenTracker()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/customer-interface.component.ts:239\n                \n            \n\n\n            \n                \n                    Opens the order tacker dialog.\nIt configures the data to be injected in the dialog using the dialog config, passing\nthe customer ID and table number to the orders tracker.\nAfter the dialog is closed, it updates the orderPlaced field.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeMeal\n                        \n                        \n                    \n                \n            \n            \n                \nremoveMeal(menuItem: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/customer-interface.component.ts:177\n                \n            \n\n\n            \n                \n                    Decreases the number of selections of a meal or removes it from the list\nif the number of selections is 1.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    menuItem\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the menu item to be removed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectCategory\n                        \n                        \n                    \n                \n            \n            \n                \nselectCategory(category: MenuCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/customer-interface.component.ts:262\n                \n            \n\n\n            \n                \n                    Selects a category and calls findCategoryItems() to filter the menu\nby the selected category.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                MenuCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuCategory[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/customer-interface.component.ts:66\n                            \n                        \n\n                \n                    \n                        The categories list of the menu.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/customer-interface.component.ts:87\n                            \n                        \n\n                \n                    \n                        a mat dialog\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Menu[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/customer-interface.component.ts:51\n                            \n                        \n\n                \n                    \n                        The menu list.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderPlaced\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/customer-interface.component.ts:61\n                            \n                        \n\n                \n                    \n                        Asserts if the order was placed or not.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paramsObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/customer-interface.component.ts:56\n                            \n                        \n\n                \n                    \n                        The params of the activated route\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedCategory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuCategory\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/customer-interface.component.ts:71\n                            \n                        \n\n                \n                    \n                        The current selected category.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedMeals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Meal[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/customer-interface.component.ts:46\n                            \n                        \n\n                \n                    \n                        The meal list selected by the customer.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig } from \"@angular/material/dialog\";\nimport { animate, keyframes, query, stagger, style, transition, trigger } from \"@angular/animations\";\nimport anime from 'animejs/lib/anime.es.js'\n\nimport { MenuService } from \"../menu.service\";\nimport { MenuFilterService } from \"../menu-filter.service\";\nimport { Menu } from \"../../models/Menu\";\nimport { BasketComponent } from './basket/basket.component';\nimport { OrderTrackerComponent } from './order-tracker/order-tracker.component';\nimport { MenuCategory } from \"../../models/MenuCategory\";\nimport { MenuCategoryService } from '../menu-category.service';\nimport { Meal } from '../../models/Meal';\n\n@Component({\n  selector: 'app-customer-interface',\n  templateUrl: './customer-interface.component.html',\n  styleUrls: ['./customer-interface.component.sass'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('listAnimation', [\n      transition('*=>*', [\n        query(':enter', style({ opacity: 0 }), { optional: true }),\n\n        query(':enter', stagger('100ms', [\n          animate('.5s ease-in', keyframes([\n            style({ opacity: 0, transform: 'translateY(-50px)', offset: 0 }),\n            style({ opacity: .5, transform: 'translateY(15px)', offset: 0.3 }),\n            style({ opacity: 1, transform: 'translateY(0)', offset: 1 })\n          ]))\n        ]))\n      ])\n    ])\n  ]\n})\n\n/**\n * The class that handles the customer menu.\n */\nexport class CustomerInterfaceComponent implements OnInit {\n\n  /**\n   * The meal list selected by the customer.\n   */\n  selectedMeals: Meal[] = [];\n\n  /**\n   * The menu list.\n   */\n  menu: Menu[];\n\n  /**\n   * The params of the activated route\n   */\n  paramsObject: any;\n\n  /**\n   * Asserts if the order was placed or not.\n   */\n  orderPlaced: Boolean = false;\n\n  /**\n   * The categories list of the menu.\n   */\n  categories: MenuCategory[];\n\n  /**\n   * The current selected category.\n   */\n  selectedCategory: MenuCategory;\n\n  /**\n   * The constructor of the class.\n   * \n   * @param menuService the menu service that is used to make get requests\n   * @param menuCategoryService the menu category service that is used to make get requets\n   * @param menuFilterService the menu filter service that is used to make get requests\n   * @param route the activated route from the home page\n   * @param dialog a mat dialog\n   * @param router a router to navigate to the home page\n   */\n  constructor(private menuService: MenuService,\n    private menuCategoryService: MenuCategoryService,\n    private menuFilterService: MenuFilterService,\n    private route: ActivatedRoute,\n    public dialog: MatDialog,\n    private router: Router) { }\n\n  /**\n   * A set-up method that gets called once when the class gets instantiated.\n   * It subscribed to activated route query params and sets the paramsObject.\n   * It makes a get reuqest to the the menuCategory DB by subscribing to getMenuCategories()\n   * that returns an Category[] Observale. Inside the subscription, it sets the categories.\n   */\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe((params) => {\n      this.paramsObject = { ...params.keys, ...params };\n    });\n\n    this.menuCategoryService.getMenuCategories().subscribe((categories) => {\n      this.categories = categories;\n      this.selectedCategory = this.categories[0];\n    });\n\n    this.findCategoryItems();\n  }\n\n  /**\n   * Returns a list of the menu items in that category.\n   * It makes a get request to the Menu DB by subscribing to getMenus() that\n   * returns a Menu[] observable. Then it filters the menu items by the selected category.\n   */\n  findCategoryItems(): void {\n    this.menuService.getMenus().subscribe((menu) => {\n      this.menu = [];\n      menu.forEach((menuItem) => {\n        if (menuItem.category.category == this.selectedCategory.category) {\n          this.menu.push(menuItem);\n        }\n      })\n    });\n  }\n\n  /**\n   * Filters the menu items in the selected category by calories and allergens.\n   * It makes a get request to the Menu DB by subscribing to filter() that returns\n   * an Menu[] observable with the filtered menu items. Inside the subscription, \n   * it filters the filtered by category menu with the allergies and callories.\n   * \n   * @param filteredArgs the filter arguments\n   */\n  async filter(filteredArgs: string): Promise {\n    this.menuFilterService.filter(filteredArgs).subscribe((filteredMenu) => {\n      for (var i = 0; i  {\n      this.orderPlaced = orderPlaced;\n    });\n  }\n\n  /**\n   * Opens the order tacker dialog.\n   * It configures the data to be injected in the dialog using the dialog config, passing\n   * the customer ID and table number to the orders tracker.\n   * After the dialog is closed, it updates the orderPlaced field.\n   */\n  openTracker() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = { customerId: this.paramsObject.params.customerID, tableNumber: this.paramsObject.params.selectedTable };\n    dialogConfig.width = \"60%\";\n    const dialogRef = this.dialog.open(OrderTrackerComponent, dialogConfig);\n\n    dialogRef.afterClosed().subscribe(orderPlaced => {\n      this.orderPlaced = orderPlaced;\n    });\n  }\n\n  /**\n   * Navigates to the home page via a router.\n   */\n  goHome(): void {\n    this.router.navigateByUrl('/home');\n  }\n\n  /**\n   * Selects a category and calls findCategoryItems() to filter the menu\n   * by the selected category.\n   * @param category \n   */\n  selectCategory(category: MenuCategory): void {\n    this.selectedCategory = category;\n    this.findCategoryItems();\n  }\n\n  /**\n   * Forms a string with the allergens present in a menu item.\n   * \n   * @param item the menu item\n   * @returns a string with all the allergens\n   */\n  allergensArray(item: Menu): Array {\n    var allergyArray: Array = []\n    if (item.peanuts == true) {\n      allergyArray.push(\"Peanuts\");\n    }\n    if (item.celery == true) {\n      allergyArray.push(\"Celery\");\n    }\n    if (item.gluten == true) {\n      allergyArray.push(\"Gluten\");\n    }\n    if (item.crustaceans == true) {\n      allergyArray.push(\"Crustaceans\");\n    }\n    if (item.eggs == true) {\n      allergyArray.push(\"Eggs\");\n    }\n    if (item.fish == true) {\n      allergyArray.push(\"Fish\");\n    }\n    if (item.lupin == true) {\n      allergyArray.push(\"Lupin\");\n    }\n    if (item.milk == true) {\n      allergyArray.push(\"Milk\");\n    }\n    if (item.molluscs == true) {\n      allergyArray.push(\"Molluscs\");\n    }\n    if (item.mustard == true) {\n      allergyArray.push(\"Mustard\");\n    }\n    if (item.nuts == true) {\n      allergyArray.push(\"Nuts\");\n    }\n    if (item.soya == true) {\n      allergyArray.push(\"Soya\");\n    }\n    if (item.sesameSeeds == true) {\n      allergyArray.push(\"Sesame Seeds\");\n    }\n    if (item.sulphites == true) {\n      allergyArray.push(\"Sulphites\");\n    }\n    return allergyArray;\n  }\n}\n\n    \n\n    \n        \n  \n    Menu\n  \n\n\n\n  \n    home\n  \n  &nbsp;&nbsp;&nbsp;\n  \n  \n  \n    timer\n  \n  &nbsp;&nbsp;&nbsp;\n  \n    shopping_cart\n     {{selectedMeals.length}} \n  \n\n\n\n\n  \n    \n      {{category.category}}\n    \n  \n\n\n\n\n  \n    {{this.selectedCategory.category}}\n  \n  \n    \n      \n        \n          \n            {{menuItem.name}}\n          \n          £{{menuItem.price}}\n        \n        \n        \n          \n            {{menuItem.description}}\n          \n        \n        \n          \n            {{menuItem.calories}} calories\n          \n          \n            No Allergens!\n          \n          \n            \n              \n                {{allergen}},\n              \n              \n                {{allergen}}\n              \n            \n          \n        \n        \n          \n            Add to Cart\n          \n          \n            \n              add\n            \n            \n              {{getNumberOfSelections(menuItem)}}\n            \n            \n              remove\n            \n          \n        \n      \n    \n  \n\n\n\n\n  \n    \n  \n\n    \n\n    \n                \n                    ./customer-interface.component.sass\n                \n                $background: #fdfdf3\n$pure-gold: #dbc028\n$gold-light: #e9c46a\n$maroon: rgb(59, 13, 13)\n$teal: #388572\n\nbody\n  background-image: url('../../assets/images/background.jpg')\n  background-size: cover\n  background-repeat: no-repeat\n  background-attachment: fixed\n\n.toolbar\n  color: #264653\n  background-color: #e9c46a\n  border-radius: 3px\n\n.mat-card\n  max-width: 300px\n\n.menu-item-price\n  font-size: 13px\n  color: $pure-gold\n\n.menu-item-name\n  font-family: 'Reenie Beanie', cursive\n  font-size: 30px\n\n.menu-item-description\n  font-family: 'Reenie Beanie', cursive\n  color: #0e0b00\n  padding: 5px\n  height: 100px\n  text-align: justify\n  text-justify: inter-word\n\n.spacer\n  flex: 1 1 auto\n\n.menuUI\n  font-size: 30px\n  font-family: 'Reenie Beanie', cursive\n  height: 100%\n  width: 100%\n  padding: 10px\n\n.menuTitle\n  font-family: 'Cedarville Cursive', cursive\n  color: $pure-gold\n  text-shadow: 5px 5px 5px #565656\n\n.card-actions\n  padding: 0\n  margin: 0\n\n.selection-fab\n  margin: 5px\n  background-color: #0e0b00\n  font-family: 'Reenie Beanie', cursive\n  color: white\n  height: 35px\n  width: 35px\n  border-radius: 50%\n  display: inline-block\n  text-align: center\n\n.an-2\n  font-weight: 900\n  font-size: 7vw\n\n.action-button\n  font-family: 'Reenie Beanie', cursive\n  background-color: #388572\n  color: white\n  font-size: 15px\n\n.quantity-action-button\n  background-color: #388572\n  color: white\n\n.mat-card-header\n  height: 70px\n\n.category\n  font-size: 3vw\n  font-family: 'Reenie Beanie', cursive\n  color: $pure-gold\n  border-radius: 3px\n  background-color: #388572\n  width: 100%\n  height: 100%\n  text-align: center\n  padding: 15px\n\n.catRow\n  height: 150px\n\n.categoryTile:hover\n  transform: translateY(-7px)\n  transition: 0.2s\n\n.basket\n  background-color: #bbbbbbf2\n  backdrop-filter: blur(4px)\n  .badge\n    padding-left: 9px\n    padding-right: 9px\n    -webkit-border-radius: 9px\n    -moz-border-radius: 9px\n    border-radius: 9px\n\n.label-warning[href],\n.badge-warning[href]\n  background-color: #c67605\n\n#lblCartCount\n  font-size: 12px\n  background-color: #388572\n  color: #fff\n  padding: 0 5px\n  vertical-align: top\n  margin-left: -10px\n\n.menuCard\n  width: 90%\n  border-radius: 10px\n  padding: 10px\n  margin: 50px\n  min-height: 100vh\n  padding-bottom: 20px\n\n.card\n  padding: 15px\n  margin: 20px\n\n.foodImg\n  height: 250px\n  width: 250px\n\n.menuCard .innerBorder\n  border-radius: 10px\n  border: 1px dotted $teal\n\n.categoryTitle\n  font-size: 6vw\n  font-family: 'Cedarville Cursive', cursive\n  color: $pure-gold\n  text-shadow: 5px 5px 5px #565656\n\n.helpBubble\n  position: absolute\n  bottom: 0\n  right: 0\n\n.callWaiterFloat\n  position: fixed\n  width: 80px\n  height: 80px\n  bottom: 40px\n  right: 40px\n  background-color: #0C9\n  color: #FFF\n  border-radius: 50px\n  text-align: center\n  box-shadow: 2px 2px 3px #999\n\n.expansionPannel\n  padding: 20px\n  width: 100%\n\n.menu-item-name\n  height: 40px\n\n.menu-item-calories-allergens\n  font-family: 'Reenie Beanie', cursive\n  color: #0e0b00\n  padding: 5px\n  height: 60px\n  text-align: justify\n  text-justify: inter-word\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Menu        home                 timer             shopping_cart     {{selectedMeals.length}}               {{category.category}}            {{this.selectedCategory.category}}                                            {{menuItem.name}}                    £{{menuItem.price}}                                              {{menuItem.description}}                                                {{menuItem.calories}} calories                                No Allergens!                                                              {{allergen}},                                            {{allergen}}                                                                          Add to Cart                                              add                                      {{getNumberOfSelections(menuItem)}}                                      remove                                                  '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CustomerInterfaceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerService.html":{"url":"injectables/CustomerService.html","title":"injectable - CustomerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/customer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _refreshNeeded$\n                            \n                            \n                                    Readonly\n                                restaurantWebApiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createCustomer\n                            \n                            \n                                    Public\n                                createCustomerWithTable\n                            \n                            \n                                    Public\n                                deleteCustomer\n                            \n                            \n                                    Public\n                                getCustomerByID\n                            \n                            \n                                    Public\n                                getCustomers\n                            \n                            \n                                    Public\n                                updateCustomer\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    refreshNeeded\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/customer.service.ts:32\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the http client that is used to make requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createCustomer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCustomer(customer: Customer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer.service.ts:56\n                \n            \n\n\n            \n                \n                    Creates a new Customer by making a post request to the Customer DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    customer\n                                    \n                                                Customer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the customer object to be added to the DB\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable of type Customer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createCustomerWithTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createCustomerWithTable(table: Table)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer.service.ts:66\n                \n            \n\n\n            \n                \n                    Creates a new customer with a table by making a post request to the DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Table\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the table \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable of type Customer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteCustomer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteCustomer(customer: Customer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer.service.ts:87\n                \n            \n\n\n            \n                \n                    Deletes a customer in the DB by making a delete request to the DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    customer\n                                    \n                                                Customer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the customer to by deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCustomerByID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCustomerByID(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer.service.ts:97\n                \n            \n\n\n            \n                \n                    Gets a customer by ID from the DB by making a get request to the DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the customer in the DB\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable of type Customer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCustomers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCustomers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer.service.ts:46\n                \n            \n\n\n            \n                \n                    Makes a get request to the DB to get all the customers in the DB.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an Observable of type Customer[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateCustomer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateCustomer(customer: Customer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer.service.ts:78\n                \n            \n\n\n            \n                \n                    Updates a customer in the DB by making a put request to the DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    customer\n                                    \n                                                Customer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the customer to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable of type Customer\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _refreshNeeded$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer.service.ts:25\n                            \n                        \n\n                \n                    \n                        A refresh needed subject that ensures info from the DB is refreshed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            restaurantWebApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8080/api/v1/customer'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer.service.ts:20\n                            \n                        \n\n                \n                    \n                        The URL link that is used to make the requests to the DB.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        refreshNeeded\n                    \n                \n\n                \n                    \n                        getrefreshNeeded()\n                    \n                \n                            \n                                \n                                    Defined in src/app/customer.service.ts:30\n                                \n                            \n                    \n                        \n                                Returns the refresh needed subject.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable, Subject} from \"rxjs\";\nimport {Customer} from \"../models/Customer\";\nimport {Table} from \"../models/Table\";\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * The class that handles requests for the Customer DB.\n */\nexport class CustomerService {\n\n  /**\n   * The URL link that is used to make the requests to the DB.\n   */\n  readonly restaurantWebApiUrl = 'http://localhost:8080/api/v1/customer';\n\n  /**\n   * A refresh needed subject that ensures info from the DB is refreshed\n   */\n  private _refreshNeeded$ = new Subject();\n\n  /**\n   * Returns the refresh needed subject.\n   */\n  get refreshNeeded() {\n    return this._refreshNeeded$;\n  }\n\n  /**\n   * The constructor of the class.\n   * \n   * @param httpClient the http client that is used to make requests\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Makes a get request to the DB to get all the customers in the DB.\n   * \n   * @returns an Observable of type Customer[]\n   */\n  public getCustomers(): Observable {\n    return this.httpClient.get(this.restaurantWebApiUrl);\n  }\n\n  /**\n   * Creates a new Customer by making a post request to the Customer DB.\n   * \n   * @param customer the customer object to be added to the DB\n   * @returns an observable of type Customer\n   */\n  public createCustomer(customer: Customer): Observable {\n    return this.httpClient.post(this.restaurantWebApiUrl, customer);\n  }\n\n  /**\n   * Creates a new customer with a table by making a post request to the DB.\n   * \n   * @param table the table \n   * @returns an observable of type Customer\n   */\n  public createCustomerWithTable(table: Table): Observable {\n    const newCustomer = new Customer();\n    newCustomer.table = table;\n    return this.httpClient.post(this.restaurantWebApiUrl, newCustomer);\n  }\n\n  /**\n   * Updates a customer in the DB by making a put request to the DB.\n   * \n   * @param customer the customer to be updated\n   * @returns an observable of type Customer\n   */\n  public updateCustomer(customer: Customer): Observable {\n    return this.httpClient.put(this.restaurantWebApiUrl, customer);\n  }\n\n  /**\n   * Deletes a customer in the DB by making a delete request to the DB.\n   * \n   * @param customer the customer to by deleted\n   */\n  public deleteCustomer(customer: Customer): void {\n    this.httpClient.delete(`${this.restaurantWebApiUrl}/${customer.id}`);\n  }\n\n  /**\n   * Gets a customer by ID from the DB by making a get request to the DB.\n   * \n   * @param id the id of the customer in the DB\n   * @returns an observable of type Customer\n   */\n  public getCustomerByID(id: number): Observable {\n    return this.httpClient.get(`${this.restaurantWebApiUrl}/${id}`)\n      .pipe(\n        tap(() => {\n          this._refreshNeeded$.next();\n        })\n      );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExpansionPannelComponent.html":{"url":"components/ExpansionPannelComponent.html","title":"component - ExpansionPannelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExpansionPannelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/customer-interface/expansion-pannel/expansion-pannel.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                expansion-pannel\n            \n\n            \n                styleUrls\n                ./expansion-pannel.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./expansion-pannel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/customer-interface/expansion-pannel/expansion-pannel.component.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                an element ref\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/expansion-pannel/expansion-pannel.component.ts:23\n                \n            \n\n\n            \n                \n                    Sets the background colour.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef } from '@angular/core';\n@Component({\n  selector: 'expansion-pannel',\n  templateUrl: './expansion-pannel.component.html',\n  styleUrls: ['./expansion-pannel.component.sass']\n})\n\n/**\n * The class that handles the expansion pannel actions.\n */\nexport class ExpansionPannelComponent implements AfterViewInit {\n\n  /**\n   * The constructor of the class.\n   * \n   * @param elementRef an element ref\n   */\n  constructor(private elementRef: ElementRef) { }\n\n  /**\n   * Sets the background colour.\n   */\n  ngAfterViewInit() {\n    this.elementRef.nativeElement.ownerDocument.body.style.backgroundColor = '#FFFDED';\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        filter_alt\n      \n      \n        Filter by Allergens or Calories\n      \n    \n    \n  \n\n    \n\n    \n                \n                    ./expansion-pannel.component.sass\n                \n                .title\n    font-family: ink Free\n    font-weight: bold\n    color: rgb(230, 255, 255)\n    font-size: 20px\n\n.expansionPannel\n    color: #e9c46a\n\n.expansionPannelTitle\n    color: #264653\n    font-size: 20px\n    font-family: 'Cedarville Cursive', cursive\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    filter_alt                    Filter by Allergens or Calories                '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExpansionPannelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePageComponent.html":{"url":"components/HomePageComponent.html","title":"component - HomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/home-page.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home-page\n            \n\n            \n                styleUrls\n                ./home-page.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./home-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forEmployee\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openSelectTableDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, router: Router, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/home-page.component.ts:15\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                an element ref\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the router to navigate to the staff login\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a mat dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forEmployee\n                        \n                        \n                    \n                \n            \n            \n                \nforEmployee()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home-page/home-page.component.ts:48\n                \n            \n\n\n            \n                \n                    Routes to the staff login menu.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home-page/home-page.component.ts:32\n                \n            \n\n\n            \n                \n                    A set-up method that gets called once when the class gets instantiated.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openSelectTableDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenSelectTableDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home-page/home-page.component.ts:37\n                \n            \n\n\n            \n                \n                    Opens the select table dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { SelectTableDialogComponent } from './select-table-dialog/select-table-dialog.component';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.sass']\n})\n\n/**\n * The class that handles the home page\n */\nexport class HomePageComponent implements OnInit {\n\n  /**\n   * The constructor of the class.\n   * \n   * @param elementRef an element ref\n   * @param router the router to navigate to the staff login\n   * @param dialog a mat dialog\n   */\n  constructor(\n    private elementRef: ElementRef,\n    private router: Router,\n    private dialog: MatDialog) { }\n\n  /**\n   * A set-up method that gets called once when the class gets instantiated.\n   */\n  ngOnInit(): void { }\n\n  /**\n   * Opens the select table dialog.\n   */\n  openSelectTableDialog(): void {\n    const dialogRef = this.dialog.open(SelectTableDialogComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n  /**\n   * Routes to the staff login menu.\n   */\n  forEmployee() {\n    this.router.navigateByUrl('login');\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n    Las Chinampas\n    \n    \n  \n\n    \n\n    \n                \n                    ./home-page.component.sass\n                \n                .main\n  background-color: white\n  width: 400px\n  height: 440px\n  margin: 7em auto\n  border-radius: 1.5em\n  box-shadow: 0px 11px 35px 2px rgba(0, 0, 0, 0.14)\n\n.welcome\n  top: 55%\n  text-align: center\n  color: #8C55AA\n  padding-top: 40px\n  font-family: 'Cedarville Cursive', cursive\n  font-size: 50px\n  color: #e9c46a\n\n.submit\n  margin: 0\n  position: relative\n  top: 20%\n  left: 50%\n  -ms-transform: translate(-50%, -50%)\n  transform: translate(-50%, -50%)\n  cursor: pointer\n  border-radius: 5em\n  color: #ffffff\n  background-color: #388572\n  border: 0\n  padding-left: 40px\n  padding-right: 40px\n  padding-bottom: 10px\n  padding-top: 10px\n  color: #e9c46a\n  font-family: 'Raleway', cursive\n\n.submit2\n  margin: 0\n  position: relative\n  top: 35%\n  left: 16%\n  -ms-transform: translate(-50%, -50%)\n  transform: translate(-50%, -50%)\n  cursor: pointer\n  border-radius: 5em\n  color: #ffffff\n  background-color: #388572\n  border: 0\n  padding-left: 40px\n  padding-right: 40px\n  padding-bottom: 10px\n  padding-top: 10px\n  color: #e9c46a\n  font-family: 'Raleway', cursive\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Las Chinampas          '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ingredient.html":{"url":"classes/Ingredient.html","title":"class - Ingredient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ingredient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Ingredient.ts\n        \n\n            \n                Description\n            \n            \n                Ingredient object with id, name, quantity and price per item\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                pricePerItem\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Ingredient.ts:9\n                            \n                        \n\n                \n                    \n                        The id of the ingredient.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Ingredient.ts:14\n                            \n                        \n\n                \n                    \n                        The name of the ingredient.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pricePerItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Ingredient.ts:24\n                            \n                        \n\n                \n                    \n                        The price per each item.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            quantity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Ingredient.ts:19\n                            \n                        \n\n                \n                    \n                        The quantity of the ingredient.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Ingredient {\n\n  /**\n   * The id of the ingredient.\n   */\n  id: number;\n\n  /**\n   * The name of the ingredient.\n   */\n  name: string;\n\n  /**\n   * The quantity of the ingredient.\n   */\n  quantity: number;\n\n  /**\n   * The price per each item.\n   */\n  pricePerItem: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientService.html":{"url":"injectables/IngredientService.html","title":"injectable - IngredientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IngredientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ingredient.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to create, read, update and delete ingredients\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                restaurantWebApiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createIngredient\n                            \n                            \n                                deleteIngredient\n                            \n                            \n                                    Public\n                                getIngredientById\n                            \n                            \n                                    Public\n                                getIngredients\n                            \n                            \n                                updateIngredient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/ingredient.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createIngredient\n                        \n                        \n                    \n                \n            \n            \n                \ncreateIngredient(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ingredient.service.ts:42\n                \n            \n\n\n            \n                \n                    Create an ingredient\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteIngredient\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteIngredient(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ingredient.service.ts:58\n                \n            \n\n\n            \n                \n                    Delete an ingredient\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIngredientById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredientById(ingredientId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ingredient.service.ts:34\n                \n            \n\n\n            \n                \n                    Get an ingredient by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ingredientId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIngredients\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIngredients()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ingredient.service.ts:26\n                \n            \n\n\n            \n                \n                    Get list of all ingredients\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateIngredient\n                        \n                        \n                    \n                \n            \n            \n                \nupdateIngredient(ingredient: Ingredient)\n                \n            \n\n\n            \n                \n                    Defined in src/app/ingredient.service.ts:50\n                \n            \n\n\n            \n                \n                    Update ingredient\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ingredient\n                                    \n                                                Ingredient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restaurantWebApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8080/api/v1/stock'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ingredient.service.ts:21\n                            \n                        \n\n                \n                    \n                        URL for ingredients in Api\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Ingredient} from '../models/Ingredient';\n\n/**\n * Service to create, read, update and delete ingredients\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngredientService {\n\n  constructor(private httpClient: HttpClient) {\n    console.log('Instance created');\n  }\n\n  /**\n   * URL for ingredients in Api\n   */\n  restaurantWebApiUrl = 'http://localhost:8080/api/v1/stock';\n\n  /**\n   * Get list of all ingredients\n   */\n  public getIngredients(): Observable {\n    return this.httpClient.get(this.restaurantWebApiUrl);\n  }\n\n  /**\n   * Get an ingredient by id\n   * @param ingredientId\n   */\n  public getIngredientById(ingredientId: number) {\n    this.httpClient.get(`${this.restaurantWebApiUrl}/${ingredientId}`)\n  }\n\n  /**\n   * Create an ingredient\n   * @param ingredient to create\n   */\n  createIngredient(ingredient: Ingredient): Observable {\n    return this.httpClient.post(this.restaurantWebApiUrl, ingredient);\n  }\n\n  /**\n   * Update ingredient\n   * @param ingredient to update\n   */\n  updateIngredient(ingredient: Ingredient): Observable {\n    return this.httpClient.put(this.restaurantWebApiUrl + '/'+ingredient.id, ingredient);\n  }\n\n  /**\n   * Delete an ingredient\n   * @param ingredient to delete\n   */\n  deleteIngredient(ingredient: Ingredient): Observable {\n    return this.httpClient.delete(`${this.restaurantWebApiUrl}/${ingredient.id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IngredientsDialogComponent.html":{"url":"components/IngredientsDialogComponent.html","title":"component - IngredientsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IngredientsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/menus-list-display/ingredients-dialog/ingredients-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ingredients-dialog\n            \n\n            \n                styleUrls\n                ./ingredients-dialog.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./ingredients-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: Menu)\n                    \n                \n                        \n                            \n                                Defined in src/app/menus-list-display/ingredients-dialog/ingredients-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Menu\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/menus-list-display/ingredients-dialog/ingredients-dialog.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Menu\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/menus-list-display/ingredients-dialog/ingredients-dialog.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menus-list-display/ingredients-dialog/ingredients-dialog.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {Menu} from \"../../../models/Menu\";\n\n@Component({\n  selector: 'app-ingredients-dialog',\n  templateUrl: './ingredients-dialog.component.html',\n  styleUrls: ['./ingredients-dialog.component.sass']\n})\nexport class IngredientsDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: Menu) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    #\n    Ingredient\n  \n  \n  \n  \n    {{i + 1}}\n    {{ingredient.ingredient.name}}\n  \n  \n\n\n    \n\n    \n                \n                    ./ingredients-dialog.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        #    Ingredient            {{i + 1}}    {{ingredient.ingredient.name}}    '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IngredientsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InputService.html":{"url":"injectables/InputService.html","title":"injectable - InputService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InputService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login-input/login-input.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dbUrl\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-input/login-input.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-input/login-input.service.ts:33\n                \n            \n\n\n            \n                \n                    The method for querying user input against the information in the staff database.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The username entered by the user.\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The password entered by the user.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        An object incapsulating the login details which correpsond to the user input.\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dbUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8080/api/v1/staff'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-input/login-input.service.ts:19\n                            \n                        \n\n                \n                    \n                        The url of the staff DB to make requetsts to.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Login\n\n                        \n                    \n                    \n                        \n                            Default value : new Login\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-input/login-input.service.ts:24\n                            \n                        \n\n                \n                    \n                        The login session object.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Login } from '../../models/Login';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\n\n/**\n * The class that handles DB requests for the login.\n */\nexport class InputService {\n    /**\n     * The url of the staff DB to make requetsts to.\n     */\n    private dbUrl = 'http://localhost:8080/api/v1/staff'\n\n    /**\n     * The login session object.\n     */\n    login: Login = new Login;\n    constructor(private httpClient: HttpClient) {}\n    /**\n     * The method for querying user input against the information in the staff database.\n     * \n     * @param {string} username The username entered by the user.\n     * @param {string} password  The password entered by the user.\n     * @returns {Observable} An object incapsulating the login details which correpsond to the user input.\n     */\n    public getLogin(username: string, password: string): Observable {\n        const queryURL = this.dbUrl.concat(`/${username}/${password}`);\n        return this.httpClient.get(queryURL)\n            .pipe(\n                map(response => response)\n            );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/KitchenMenuComponent.html":{"url":"components/KitchenMenuComponent.html","title":"component - KitchenMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  KitchenMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/kitchen-menu/kitchen-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-kitchen-menu\n            \n\n            \n                styleUrls\n                ./kitchen-menu.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./kitchen-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                orders\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openAddMenuDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/kitchen-menu/kitchen-menu.component.ts:28\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the menu service that is used to make get and, post and put requests\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a mat dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/kitchen-menu/kitchen-menu.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openAddMenuDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenAddMenuDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/kitchen-menu/kitchen-menu.component.ts:45\n                \n            \n\n\n            \n                \n                    Method for opening up panel to add a new dish.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/kitchen-menu/kitchen-menu.component.ts:38\n                            \n                        \n\n                \n                    \n                        a mat dialog\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'description', 'price']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/kitchen-menu/kitchen-menu.component.ts:28\n                            \n                        \n\n                \n                    \n                        The Displayed columns for each item in the order dialog.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/kitchen-menu/kitchen-menu.component.ts:23\n                            \n                        \n\n                \n                    \n                        The orders list that is available to the kitchen menu.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { Order } from \"../../models/Order\";\nimport { Menu } from '../../models/Menu';\nimport { MenuService } from '../menu.service';\nimport { AddMenuDialogComponent } from '../waiter-menu/add-menu-dialog/add-menu-dialog.component';\n\n@Component({\n  selector: 'app-kitchen-menu',\n  templateUrl: './kitchen-menu.component.html',\n  styleUrls: ['./kitchen-menu.component.sass']\n})\n\n/**\n * The class that handles the kitchen menu.\n */\nexport class KitchenMenuComponent implements OnInit {\n\n  /**\n   * The orders list that is available to the kitchen menu.\n   */\n  orders: Order[];\n\n  /**\n   * The Displayed columns for each item in the order dialog.\n   */\n  displayedColumns: string[] = ['name', 'description', 'price'];\n\n  /**\n   * The constructor of the class.\n   * \n   * @param menuService the menu service that is used to make get and, post and put requests\n   * @param dialog a mat dialog\n   */\n  constructor(\n    private menuService: MenuService,\n    public dialog: MatDialog) { }\n    \n    ngOnInit(): void { }\n    \n   /**\n    * Method for opening up panel to add a new dish.\n    */  \n  openAddMenuDialog() {\n    const title = \"Add New Dish\";\n    let menu: Menu = new Menu();\n    const dialogRef = this.dialog.open(AddMenuDialogComponent, {\n      data: { menu, title },\n      width: '50%',\n      autoFocus: false\n    });\n\n    dialogRef.afterClosed().subscribe(menu => {\n      if (menu) {\n        console.log(menu);\n        this.menuService.createMenuItem(menu);\n      }\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n      Kitchen Menu\n      \n      \n        \n      \n    \n  \n  \n  \n  \n  \n\n    \n\n    \n                \n                    ./kitchen-menu.component.sass\n                \n                $noOrder: red\n$hasOrder: green\n$h1Col: teal\n$btnSize: 75%\n\n$tableButCol: brown\n\n.tableList\n  display: grid\n  grid-template-columns: repeat(auto-fit, minmax(240px,1fr))\n  gap: 1rem\n  width: border-box\n\n.toolBar\n  background-color: #76cfb9\n  z-index: 1\n  color: white\n  position: fixed\n\n.toolBarTitle\n  font-family: 'Raleway', sans-serif\n  font-size: 50px\n  padding-left: 410px\n\n.quickAddButton\n  width: 35px\n  height: 35px\n\nli\n  display: flex\n  flex-direction: row\n  border: 5px\n  width: auto\n  height: 50px\n  list-style-type: none\n\n.hasOrder\n  border-color: $hasOrder\n  width: $btnSize\n  height: $btnSize\n\n.noOrder\n  border-color: $noOrder\n  width: $btnSize\n  height: $btnSize\n\n.readyToOrder\n  border-color: $hasOrder\n  width: $btnSize\n  height: $btnSize\n\n.noIsReadyToOrder\n  border-color: $noOrder\n  width: $btnSize\n  height: $btnSize\n\n.addOrder\n  border-color: yellow\n\n.tableBut\n  border-color: $tableButCol\n  width: $btnSize\n  height: $btnSize\n\n.buttonRow\n  list-style: none\n  padding-left: 0\n\n.flex-item\n  width: 100%\n  -webkit-flex-direction: column\n  flex-direction: column\n  float: left\n\n.botButtonRow\n  width: 100%\n  position: absolute\n  bottom: 0\n\n.spacer\n  flex: 1 1 auto\n\n.notifications\n  padding: 30px\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Kitchen Menu                                        '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'KitchenMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page.component.ts\n\n\n    \n        Description\n    \n    \n        Landing page component that greets the user as they connect in to the website\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                styleUrls\n                ./landing-page.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/landing-page/landing-page.component.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor for landing page component taked with providing the intial UI to both customers annd staff.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to help set the compnents background theme.\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object purposed with providing pop-up displays so the user can interact.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:39\n                \n            \n\n\n            \n                \n                    Method for instantiating animations after the page is alreaady loaded.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toMenu\n                        \n                        \n                    \n                \n            \n            \n                \ntoMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/landing-page/landing-page.component.ts:32\n                \n            \n\n\n            \n                \n                    Method for displaying a panel to help the customer select their table.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnInit, ViewEncapsulation } from '@angular/core';\nimport anime from \"animejs/lib/anime.es\";\nimport {Router} from \"@angular/router\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {SelectTableDialogComponent} from \"../home-page/select-table-dialog/select-table-dialog.component\";\nimport {tap} from \"rxjs/operators\";\n\n/**\n * Landing page component that greets the user as they connect in to the website\n */\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.sass'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LandingPageComponent implements OnInit, AfterViewInit {\n    /**\n     * Constructor for landing page component taked with providing the intial UI to both customers annd staff.\n     * \n     * @param {ElementRef} elementRef A reference to help set the compnents background theme.\n     * @param {Router} router An object which helps route to different pages.\n     * @param {MatDialog} dialog An object purposed with providing pop-up displays so the user can interact.\n     */\n  constructor(private elementRef: ElementRef,\n              private dialog: MatDialog) { }\n  ngOnInit(): void {\n    }\n    /**\n     * Method for displaying a panel to help the customer select their table.\n     */\n  toMenu(){\n    const dialogRef = this.dialog.open(SelectTableDialogComponent);\n    dialogRef.afterClosed().pipe(tap((result)=> console.log(result))).subscribe()\n  }\n  /**\n   * Method for instantiating animations after the page is alreaady loaded.\n   */\n  ngAfterViewInit(): void {\n    this.elementRef.nativeElement.ownerDocument.body.backgroundImage = 'url(assets/images/background.jpg)';\n\n    // ANIMATE TITLE\n    anime.timeline({loop: false})\n      .add({\n        targets: '.title',\n        opacity: [0,1],\n        scale: 1.5,\n        easing: \"easeInOutQuad\",\n        duration: 3000\n      }).add({\n        targets: '.title',\n        translateY: -25,\n        duration: 2000\n      }).add({\n        targets: '.btn',\n        opacity:[0,1],\n        scale: 1.5,\n        duration: 500\n    });\n\n    anime.timeline({loop:true})\n      .add({\n        targets: '.btn',\n        scale: [1,1.10,1],\n        ease: 'easeInOutQuad',\n        duration: 5000\n      })\n  }\n\n}\n\n    \n\n    \n        \n  Staff login\n\n\n  \n    \n      \n        Las Chinampas\n            See Menu\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./landing-page.component.sass\n                \n                $background: #FFFDED\n$pure-gold: #dbc028\n$gold-light: #f6ce66\n$maroon: #3b0d0d\n$titleFont: 'Cedarville Cursive', cursive\n\nbody\n  background-image: url('../../assets/images/background.jpg')\n  background-size: cover\n\n.toolbar\n  padding-bottom: 100px\n  background-color: #0e0b00\n\n.titleDiv\n  display: flex\n  flex-direction: column\n  height: 100vh\n  justify-content: center\n  align-items: center\n  text-shadow: 5px 5px 5px #565656\n\n.titleRow\n  width: 100%\n\n.btnRow\n  width: 100%\n.title\n  font-family: \"Cedarville Cursive\", cursive\n  color: $gold-light\n\n.btn\n  display: flex\n  justify-content: center\n  align-items: center\n\n.circle-dark-dashed\n  border-radius: 2.4em\n  background-color: transparent\n  border: 2px dashed #4f7b86\n\n.titleRow\n  height: 250px\n\n.img\n  width: 150px\n  height: 150px\n\n.halfDiv\n  height: 40%\n  width: 50%\n\n.bd-placeholder-img\n  font-size: 1.125rem\n  text-anchor: middle\n  -webkit-user-select: none\n  -moz-user-select: none\n  user-select: none\n\n@media (min-width: 768px)\n.bd-placeholder-img-lg\n  font-size: 3.5rem\n\n.staffLogin\n  display: flex\n  float: right\n  background-color: wheat\n\n.removeUnderline\n  color: inherit\n  text-decoration: none\n\n.removeUnderline:hover\n  color: inherit\n  text-decoration: none\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Staff login                    Las Chinampas            See Menu            '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Login.html":{"url":"classes/Login.html","title":"class - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Login.ts\n        \n\n            \n                Description\n            \n            \n                Login object with id, username, password, email and waiter boolean\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                manager\n                            \n                            \n                                otp\n                            \n                            \n                                password\n                            \n                            \n                                userName\n                            \n                            \n                                waiter\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Login.ts:24\n                            \n                        \n\n                \n                    \n                        The email of the staff.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Login.ts:9\n                            \n                        \n\n                \n                    \n                        The id of the login session.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Login.ts:34\n                            \n                        \n\n                \n                    \n                        Asserts if the staff is a manager.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            otp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Login.ts:39\n                            \n                        \n\n                \n                    \n                        The otp of the login.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Login.ts:19\n                            \n                        \n\n                \n                    \n                        The password of the staff.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Login.ts:14\n                            \n                        \n\n                \n                    \n                        The username of the staff.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            waiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Login.ts:29\n                            \n                        \n\n                \n                    \n                        Asserts if the staff is waiter.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Login {\n\n    /**\n     * The id of the login session.\n     */\n    id: number;\n\n    /**\n     * The username of the staff.\n     */\n    userName: string;\n\n    /**\n     * The password of the staff.\n     */\n    password: string;\n\n    /**\n     * The email of the staff.\n     */\n    email: string;\n\n    /**\n     * Asserts if the staff is waiter.\n     */\n    waiter: boolean;\n\n    /**\n     * Asserts if the staff is a manager.\n     */\n    manager: boolean;\n\n    /**\n     * The otp of the login.\n     */\n    otp!: number;\n  }\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginInputComponent.html":{"url":"components/LoginInputComponent.html","title":"component - LoginInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-input/login-input.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-input\n            \n\n            \n                styleUrls\n                ./login-input.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./login-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                correct\n                            \n                            \n                                html\n                            \n                            \n                                password\n                            \n                            \n                                staff\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goHome\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(input: InputService, router: Router, elementRef: ElementRef, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-input/login-input.component.ts:37\n                            \n                        \n\n                \n                    \n                            The cosntuctor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                        InputService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the input of forms\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                an activated router that gets used when routing to to the staff's menu\n\n                                                        \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                an elem ref\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a snack bar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goHome\n                        \n                        \n                    \n                \n            \n            \n                \ngoHome()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-input/login-input.component.ts:86\n                \n            \n\n\n            \n                \n                    The method purposed with redirecting a user back to the home screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-input/login-input.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-input/login-input.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-input/login-input.component.ts:61\n                \n            \n\n\n            \n                \n                    This method is purposed with taking the staff members login details and passing them to different webpages accordingly.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            openSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openSnackBar(message: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login-input/login-input.component.ts:95\n                \n            \n\n\n            \n                \n                    The method purposed with providing an error message when the wrong credentials are entered.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message stating what error has occured.\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The action depicting how a staff member should proceed.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            correct\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-input/login-input.component.ts:31\n                            \n                        \n\n                \n                    \n                        Asserts if the login credentials are correct.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            html\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-input/login-input.component.ts:36\n                            \n                        \n\n                \n                    \n                        The html url.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-input/login-input.component.ts:26\n                            \n                        \n\n                \n                    \n                        The password of the staff.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            staff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Staff\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-input/login-input.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login-input/login-input.component.ts:21\n                            \n                        \n\n                \n                    \n                        The username of the staff.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, OnInit } from '@angular/core';\nimport { InputService } from './login-input.service';\nimport { Router } from '@angular/router'\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Staff } from '../../models/Staff';\n\n@Component({\n    selector: 'app-login-input',\n    templateUrl: './login-input.component.html',\n    styleUrls: ['./login-input.component.sass']\n})\n\n/**\n * The class that handles the staff login.\n */\nexport class LoginInputComponent implements OnInit {\n\n    /**\n     * The username of the staff.\n     */\n    username: string;\n\n    /**\n     * The password of the staff.\n     */\n    password: string = \"\";\n\n    /**\n     * Asserts if the login credentials are correct.\n     */\n    correct: boolean = true;\n\n    /**\n     * The html url.\n     */\n    html: string = \"\";\n    staff: Staff;\n\n    /**\n     * The cosntuctor of the class.\n     * \n     * @param input the input of forms\n     * @param router an activated router that gets used when routing to to the staff's menu\n     * @param elementRef an elem ref\n     * @param snackBar a snack bar\n     */\n    constructor(\n        private input: InputService,\n        private router: Router,\n        private elementRef: ElementRef,\n        private snackBar: MatSnackBar) { }\n\n    ngOnInit(): void {}\n    \n    ngAfterViewInit(): void {\n        this.elementRef.nativeElement.ownerDocument.body.style.backgroundColor = '#FFFDED';\n    }\n    /**\n     * This method is purposed with taking the staff members login details and passing them to different webpages accordingly.\n     */\n    onSubmit() {           \n        this.input.getLogin(this.username, this.password).subscribe(user => {\n            this.staff = user[0];\n            console.log(this.staff);\n            try {\n                if(this.staff.waiter && !this.staff.manager) {                    \n                    this.router.navigate(['/waiter-menu'], \n                    { queryParams: {staffId: user[0].id} });   \n                } else if (!this.staff.waiter && this.staff.manager) {\n                    this.router.navigate(['/manager-menu'],\n                    { queryParams: {staffId: user[0].id} });   \n                } else if (!this.staff.waiter && !this.staff.manager) {\n                    this.router.navigateByUrl('kitchen-menu');\n                } \n            } catch {\n                this.correct = false;\n                this.openSnackBar(\"Login Credentials are wrong!\", \"Try again\")\n            }\n        });\n        this.username = \"\";\n        this.password = \"\";\n    }\n    /**\n     * The method purposed with redirecting a user back to the home screen.\n     */\n    goHome(): void {\n        this.router.navigateByUrl('/home');\n    }\n    /**\n     * The method purposed with providing an error message when the wrong credentials are entered.\n     * \n     * @param {string} message The message stating what error has occured.\n     * @param {string} action The action depicting how a staff member should proceed.\n     */\n    private openSnackBar(message: string, action: string) {\n        this.snackBar.open(message, action, {\n            duration: 3000,\n            panelClass: ['orderSnackBar']\n        });\n    }\n}\n    \n\n    \n        \n\n    \n        \n            home\n        \n        Log In\n        \n            \n            \n            \n            \n        \n    \n\n    \n\n    \n                \n                    ./login-input.component.sass\n                \n                body\n  font-family: 'Ubuntu', sans-serif\n  position: relative\n\n.main\n  background-color: #FFFFFF\n  width: 400px\n  height: 440px\n  margin: 7em auto\n  border-radius: 1.5em\n  box-shadow: 0px 11px 35px 2px rgba(0, 0, 0, 0.14)\n\n.welcome\n  text-align: center\n  color: #8C55AA\n  padding-top: 40px\n  font-family: 'Cedarville Cursive', cursive\n  color: #e9c46a\n  font-size: 50px\n\n.un\n  width: 76%\n  color: rgb(38, 50, 56)\n  font-weight: 700\n  font-size: 14px\n  letter-spacing: 1px\n  background: rgba(136, 126, 126, 0.04)\n  padding: 10px 20px\n  border: none\n  border-radius: 20px\n  outline: none\n  box-sizing: border-box\n  border: 2px solid rgba(0, 0, 0, 0.02)\n  margin-bottom: 50px\n  margin-left: 46px\n  text-align: center\n  margin-bottom: 27px\n  font-family: 'Raleway', cursive\n\nform.form1\n  padding-top: 40px\n\n.pass\n  width: 76%\n  color: rgb(38, 50, 56)\n  font-weight: 700\n  font-size: 14px\n  letter-spacing: 1px\n  background: rgba(136, 126, 126, 0.04)\n  padding: 10px 20px\n  border: none\n  border-radius: 20px\n  outline: none\n  box-sizing: border-box\n  border: 2px solid rgba(0, 0, 0, 0.02)\n  margin-bottom: 50px\n  margin-left: 46px\n  text-align: center\n  margin-bottom: 27px\n  font-family: 'Raleway', cursive\n\n.un:focus, .pass:focus\n  border: 2px solid rgba(0, 0, 0, 0.18) !important\n\n.submit\n  margin: 0\n  position: relative\n  top: 30px\n  left: 50%\n  -ms-transform: translate(-50%, -50%)\n  transform: translate(-50%, -50%)\n  cursor: pointer\n  border-radius: 5em\n  background-color: #388572\n  border: 0\n  padding-left: 40px\n  padding-right: 40px\n  padding-bottom: 10px\n  padding-top: 10px\n  font-family: 'Raleway', cursive\n  color: #e9c46a\n\n.staff\n  margin: 0\n  position: relative\n  left: 320px\n  -ms-transform: translate(-50%, -50%)\n  transform: translate(-50%, -50%)\n  font-family: 'Raleway', cursive\n  color: #E040FB\n\nsection\n  text-align: center\n  font-family: 'Raleway', cursive\n  color: rgba(224,64,251, 0.8)\n\n.wrong\n  text-align: centre\n  margin: 0\n  left: 350px\n  top: -60px\n  // -ms-transform: translate(-50%, -50%)\n  // transform: translate(-50%, -50%)\n  font-family: 'Raleway', cursive\n\n.home\n  color: black\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        home                Log In                                                                    '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagerMenuComponent.html":{"url":"components/ManagerMenuComponent.html","title":"component - ManagerMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManagerMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manager-menu/manager-menu.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manager-menu\n            \n\n            \n                styleUrls\n                ./manager-menu.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./manager-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewOrder\n                            \n                            \n                                createNewTable\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openAddMenuDialog\n                            \n                            \n                                openSelectTableDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(orderService: OrderService, customerService: CustomerService, dialog: MatDialog, tableService: TableService, menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/manager-menu/manager-menu.component.ts:22\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the order service that is used to make requests\n\n                                                        \n                                                \n                                                \n                                                        customerService\n                                                  \n                                                        \n                                                                        CustomerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the customer service that is used to make requests\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a mat dialog\n\n                                                        \n                                                \n                                                \n                                                        tableService\n                                                  \n                                                        \n                                                                        TableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the table service that is used to make requests\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the menu service that is used to make requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewOrder\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewOrder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/manager-menu.component.ts:61\n                \n            \n\n\n            \n                \n                    Creates a new order.\nOpens the select table dialog and with the selected table, it creates\na new order with a customer and table.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewTable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/manager-menu.component.ts:74\n                \n            \n\n\n            \n                \n                    Creates a new table by making a post request to the Table DB.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/manager-menu.component.ts:44\n                \n            \n\n\n            \n                \n                    A set-up method that gets called once when the class gets instantiated.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openAddMenuDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenAddMenuDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/manager-menu.component.ts:81\n                \n            \n\n\n            \n                \n                    Opens the menu dialog. After closing the dialog it creates a new menu item.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openSelectTableDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenSelectTableDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/manager-menu.component.ts:51\n                \n            \n\n\n            \n                \n                    Opens the select table dialog.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        the dialog ref after it's closed\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/manager-menu.component.ts:36\n                            \n                        \n\n                \n                    \n                        a mat dialog\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Menu } from '../../models/Menu';\nimport { Table } from '../../models/Table';\nimport { CustomerService } from '../customer.service';\nimport { MenuService } from '../menu.service';\nimport { OrderService } from '../order.service';\nimport { TableService } from '../table.service';\nimport { AddMenuDialogComponent } from '../waiter-menu/add-menu-dialog/add-menu-dialog.component';\nimport { PickTableDialogComponent } from '../waiter-menu/pick-table-dialog/pick-table-dialog.component';\n@Component({\n  selector: 'app-manager-menu',\n  templateUrl: './manager-menu.component.html',\n  styleUrls: ['./manager-menu.component.sass']\n})\n\n/**\n * The class that handles the manager menu.\n */\nexport class ManagerMenuComponent implements OnInit {\n\n  /**\n   * The constructor of the class.\n   * \n   * @param orderService the order service that is used to make requests\n   * @param customerService the customer service that is used to make requests\n   * @param dialog a mat dialog\n   * @param tableService the table service that is used to make requests\n   * @param menuService the menu service that is used to make requests\n   */\n  constructor(\n    private orderService: OrderService,\n    private customerService: CustomerService,\n    public dialog: MatDialog,\n    private tableService: TableService,\n    private menuService: MenuService\n  ) { }\n\n  /**\n   * A set-up method that gets called once when the class gets instantiated.\n   */\n  ngOnInit(): void { }\n\n  /**\n   * Opens the select table dialog.\n   * \n   * @returns the dialog ref after it's closed\n   */\n  openSelectTableDialog(): Observable {\n    const dialogRef = this.dialog.open(PickTableDialogComponent);\n    return dialogRef.afterClosed();\n  }\n\n  /**\n   * Creates a new order.\n   * Opens the select table dialog and with the selected table, it creates\n   * a new order with a customer and table.\n   */\n  createNewOrder(): void {\n    this.openSelectTableDialog()\n      .pipe(\n        switchMap((dialogResult) =>\n          this.customerService.createCustomerWithTable(dialogResult))\n      ).subscribe((a) =>\n        this.orderService.createNewOrderWithCustomer(a)\n      );\n  }\n\n  /**\n   * Creates a new table by making a post request to the Table DB.\n   */\n  createNewTable(): void {\n    this.tableService.createTable().subscribe();\n  }\n\n  /**\n   * Opens the menu dialog. After closing the dialog it creates a new menu item.\n   */\n  openAddMenuDialog() {\n    const title = \"Add New Dish\";\n    let menu: Menu = new Menu();\n    const dialogRef = this.dialog.open(AddMenuDialogComponent, {\n      data: { menu, title },\n      width: '50%',\n      autoFocus: false\n    });\n\n    dialogRef.afterClosed().subscribe(menu => {\n      if (menu) {\n        this.menuService.createMenuItem(menu);\n      }\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          reorder\n        \n      \n      \n        Manager Menu\n      \n      \n        \n          \n        \n      \n    \n  \n\n  \n\n  \n    \n      \n        \n          \n          Manage Stock\n        \n      \n    \n    \n      \n        \n          \n          Manage Staff\n        \n      \n    \n    \n      \n        \n        Create Order\n      \n    \n    \n      \n        \n        Add Table\n      \n    \n    \n      \n        \n        Add To Menu\n      \n    \n  \n  \n\n  \n  \n  \n\n    \n\n    \n                \n                    ./manager-menu.component.sass\n                \n                .toolBarTitle\n  font-family: 'Raleway', sans-serif\n  font-size: 50px\n\n.toolBar\n  background-color: #76cfb9\n  z-index: 1\n  color: white\n  position: fixed\n  height: 60px\n  padding: 10px\n\n.example-sidenav\n  position: fixed\n\n.quickAddButton\n  width: 60px\n  height: 60px\n\n.spacer\n  flex: 1 1 auto\n\na\n  color: #000000\n\n.exitButton\n  width: 35px\n  height: 35px\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              reorder                            Manager Menu                                                                                            Manage Stock                                                        Manage Staff                                            Create Order                                    Add Table                                    Add To Menu                    '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagerMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Meal.html":{"url":"classes/Meal.html","title":"class - Meal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Meal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Meal.ts\n        \n\n            \n                Description\n            \n            \n                Meal object with id, menu item, order and number of selections per meal\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                menu\n                            \n                            \n                                numberSelections\n                            \n                            \n                                order\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Meal.ts:12\n                            \n                        \n\n                \n                    \n                        The id of the meal.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menu\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Menu\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Meal.ts:17\n                            \n                        \n\n                \n                    \n                        The menu item associated with the meal.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberSelections\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Meal.ts:27\n                            \n                        \n\n                \n                    \n                        The number of selections of the meal.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Meal.ts:22\n                            \n                        \n\n                \n                    \n                        The order associated with the meal.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Order } from \"./Order\";\nimport { Menu } from \"./Menu\";\n\n/**\n * Meal object with id, menu item, order and number of selections per meal\n */\nexport class Meal {\n\n  /**\n   * The id of the meal.\n   */\n  id: number;\n\n  /**\n   * The menu item associated with the meal.\n   */\n  menu: Menu;\n\n  /**\n   * The order associated with the meal.\n   */\n  order: Order;\n\n  /**\n   * The number of selections of the meal.\n   */\n  numberSelections: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MealService.html":{"url":"injectables/MealService.html","title":"injectable - MealService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MealService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/meal.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for create, read, update, delete Meals from the Restaurant Api\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                mealsURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewMeal\n                            \n                            \n                                deleteMeal\n                            \n                            \n                                updateMeal\n                            \n                            \n                                updateNumberSelections\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/meal.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewMeal\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewMeal(meal: Meal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/meal.service.ts:25\n                \n            \n\n\n            \n                \n                    Create a new meal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    meal\n                                    \n                                                Meal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be created\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMeal\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMeal(meal: Meal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/meal.service.ts:33\n                \n            \n\n\n            \n                \n                    Delete a meal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    meal\n                                    \n                                                Meal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateMeal\n                        \n                        \n                    \n                \n            \n            \n                \nupdateMeal(meal: Meal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/meal.service.ts:41\n                \n            \n\n\n            \n                \n                    Update a meal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    meal\n                                    \n                                                Meal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateNumberSelections\n                        \n                        \n                    \n                \n            \n            \n                \nupdateNumberSelections(meal: Meal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/meal.service.ts:49\n                \n            \n\n\n            \n                \n                    Update number of selections in a meal\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    meal\n                                    \n                                                Meal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to update the number of selections of\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mealsURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8080/api/v1/meals'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/meal.service.ts:17\n                            \n                        \n\n                \n                    \n                        URL for the meals in the Api\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {Meal} from '../models/Meal';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n/**\n * Service for create, read, update, delete Meals from the Restaurant Api\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MealService {\n\n  /**\n   * URL for the meals in the Api\n   */\n  mealsURL = 'http://localhost:8080/api/v1/meals';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Create a new meal\n   * @param meal to be created\n   */\n  createNewMeal(meal: Meal): Observable {\n    return this.httpClient.post(this.mealsURL, meal);\n  }\n\n  /**\n   * Delete a meal\n   * @param meal to be deleted\n   */\n  deleteMeal(meal: Meal): Observable {\n    return this.httpClient.delete(`${this.mealsURL}/${meal.id}`);\n  }\n\n  /**\n   * Update a meal\n   * @param meal to be updated\n   */\n  updateMeal(meal: Meal): void {\n    this.httpClient.put(`${this.mealsURL}/${meal.id}`,meal);\n  }\n\n  /**\n   * Update number of selections in a meal\n   * @param meal to update the number of selections of\n   */\n  updateNumberSelections(meal: Meal): void {\n    let updateNumberSelectionsUrl = this.mealsURL + \"/numberSelections\";\n    this.httpClient.put(`${updateNumberSelectionsUrl}/${meal.id}/${meal.numberSelections}`,meal).subscribe((meal)=>{\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Menu.html":{"url":"classes/Menu.html","title":"class - Menu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Menu.ts\n        \n\n            \n                Description\n            \n            \n                Menu object with id, name, category, price, ingredients, picture Url and allergens\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calories\n                            \n                            \n                                category\n                            \n                            \n                                celery\n                            \n                            \n                                crustaceans\n                            \n                            \n                                description\n                            \n                            \n                                eggs\n                            \n                            \n                                fish\n                            \n                            \n                                gluten\n                            \n                            \n                                id\n                            \n                            \n                                ingredients\n                            \n                            \n                                ingredientsName\n                            \n                            \n                                lupin\n                            \n                            \n                                milk\n                            \n                            \n                                molluscs\n                            \n                            \n                                mustard\n                            \n                            \n                                name\n                            \n                            \n                                nuts\n                            \n                            \n                                peanuts\n                            \n                            \n                                pictureUrl\n                            \n                            \n                                price\n                            \n                            \n                                sesameSeeds\n                            \n                            \n                                soya\n                            \n                            \n                                suggested\n                            \n                            \n                                sulphites\n                            \n                            \n                                timeToCook\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:117\n                            \n                        \n\n                \n                    \n                        The number of calories of the menu item.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuCategory\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:22\n                            \n                        \n\n                \n                    \n                        The category associated with the menu item.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            celery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:52\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has celery.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            crustaceans\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:62\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has crustaceans.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:32\n                            \n                        \n\n                \n                    \n                        The description of the menu item.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eggs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:67\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has eggs.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fish\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:72\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has fish.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gluten\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:57\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has gluten.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:12\n                            \n                        \n\n                \n                    \n                        The id of the menu item.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ingredients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Ingredient[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:127\n                            \n                        \n\n                \n                    \n                        The ingredients associated with the menu item.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ingredientsName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:132\n                            \n                        \n\n                \n                    \n                        The name of the ingrdients.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lupin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:77\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has lupin.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            milk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:82\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has milk.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            molluscs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:87\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has molluscs.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mustard\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:92\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has mustarrd.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:17\n                            \n                        \n\n                \n                    \n                        The name of the menu item.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nuts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:97\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has mustard.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            peanuts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:47\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has peanuts.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pictureUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:42\n                            \n                        \n\n                \n                    \n                        The picture URL used to display the picture associated with the menu item.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            price\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:37\n                            \n                        \n\n                \n                    \n                        The price of the menu item.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sesameSeeds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:107\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has sesame seeds.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            soya\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:102\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has soya.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            suggested\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"no\"\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:27\n                            \n                        \n\n                \n                    \n                        Asserts if a menu item was suggested.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sulphites\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:112\n                            \n                        \n\n                \n                    \n                        Asserts if the menu item has sulphites.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeToCook\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Menu.ts:122\n                            \n                        \n\n                \n                    \n                        The time to cook the menu item.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { MenuCategory } from \"./MenuCategory\";\nimport { Ingredient } from \"./Ingredient\";\n\n/**\n * Menu object with id, name, category, price, ingredients, picture Url and allergens\n */\nexport class Menu {\n\n  /**\n   * The id of the menu item.\n   */\n  id: number;\n\n  /**\n   * The name of the menu item.\n   */\n  name: string;\n\n  /**\n   * The category associated with the menu item.\n   */\n  category: MenuCategory;\n\n  /**\n   * Asserts if a menu item was suggested.\n   */\n  suggested: string = \"no\";\n\n  /**\n   * The description of the menu item.\n   */\n  description: string;\n\n  /**\n   * The price of the menu item.\n   */\n  price: number;\n\n  /**\n   * The picture URL used to display the picture associated with the menu item.\n   */\n  pictureUrl: string;\n\n  /**\n   * Asserts if the menu item has peanuts.\n   */\n  peanuts: boolean;\n\n  /**\n   * Asserts if the menu item has celery.\n   */\n  celery: boolean;\n\n  /**\n   * Asserts if the menu item has gluten.\n   */\n  gluten: boolean;\n\n  /**\n   * Asserts if the menu item has crustaceans.\n   */\n  crustaceans: boolean;\n\n  /**\n   * Asserts if the menu item has eggs.\n   */\n  eggs: boolean;\n\n  /**\n   * Asserts if the menu item has fish.\n   */\n  fish: boolean;\n\n  /**\n   * Asserts if the menu item has lupin.\n   */\n  lupin: boolean;\n\n  /**\n   * Asserts if the menu item has milk.\n   */\n  milk: boolean;\n\n  /**\n   * Asserts if the menu item has molluscs.\n   */\n  molluscs: boolean;\n\n  /**\n   * Asserts if the menu item has mustarrd.\n   */\n  mustard: boolean;\n\n  /**\n   * Asserts if the menu item has mustard.\n   */\n  nuts: boolean;\n  \n  /**\n   * Asserts if the menu item has soya.\n   */\n  soya: boolean;\n\n  /**\n   * Asserts if the menu item has sesame seeds.\n   */\n  sesameSeeds: boolean;\n\n  /**\n   * Asserts if the menu item has sulphites.\n   */\n  sulphites: boolean;\n\n  /**\n   * The number of calories of the menu item.\n   */\n  calories: number;\n\n  /**\n   * The time to cook the menu item.\n   */\n  timeToCook: number;\n\n  /**\n   * The ingredients associated with the menu item.\n   */\n  ingredients: Ingredient[];\n\n  /**\n   * The name of the ingrdients.\n   */\n  ingredientsName: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MenuCategory.html":{"url":"classes/MenuCategory.html","title":"class - MenuCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MenuCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/MenuCategory.ts\n        \n\n            \n                Description\n            \n            \n                Menu Category object with id and category\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/MenuCategory.ts:13\n                            \n                        \n\n                \n                    \n                        Category as a string\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/MenuCategory.ts:8\n                            \n                        \n\n                \n                    \n                        Id for Menu Cateogry\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MenuCategory {\n  /**\n   * Id for Menu Cateogry\n   */\n  id: number;\n\n  /**\n   * Category as a string\n   */\n  category: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuCategoryService.html":{"url":"injectables/MenuCategoryService.html","title":"injectable - MenuCategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuCategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/menu-category.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories$\n                            \n                            \n                                menuCategoryURL\n                            \n                            \n                                refresh$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                    Public\n                                getMenuCategories\n                            \n                            \n                                    Public\n                                getMenuCategory\n                            \n                            \n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/menu-category.service.ts:24\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the http client that is used to make requests to the DB\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewCategory\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewCategory(category: MenuCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu-category.service.ts:66\n                \n            \n\n\n            \n                \n                    Creates a new category by making a post request to the DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                MenuCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the category to be added to the DB\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable of type MenuCategory\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCategory\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCategory(category: MenuCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu-category.service.ts:76\n                \n            \n\n\n            \n                \n                    Deletes a menu category by making a delete request to the DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                MenuCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the category to be deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable of type MenuCategory\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenuCategories\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenuCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu-category.service.ts:46\n                \n            \n\n\n            \n                \n                    Gets all the menu categories by making a get request to the DB.\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable of type Menucategory\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenuCategory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenuCategory(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu-category.service.ts:56\n                \n            \n\n\n            \n                \n                    Gets menu category by id by making a get request to the DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the queried menu category\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observale of type MenuCategory\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateCategory\n                        \n                        \n                    \n                \n            \n            \n                \nupdateCategory(category: MenuCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu-category.service.ts:86\n                \n            \n\n\n            \n                \n                    Updates a menu category by making a put request to the DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                MenuCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the category to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable of type MenuCategory\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.refresh$.pipe(\n    exhaustMap(() => this.getMenuCategories()),\n    share()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-category.service.ts:36\n                            \n                        \n\n                \n                    \n                        A public observable that can be subscribed to by components.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuCategoryURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"http://localhost:8080/api/v1/menuCategory\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-category.service.ts:19\n                            \n                        \n\n                \n                    \n                        The URL link that is used to make requests to the DB.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refresh$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-category.service.ts:24\n                            \n                        \n\n                \n                    \n                        A subject that can be called if new observables need to be emitted.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport { MenuCategory } from '../models/MenuCategory';\nimport {exhaustMap, share} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * The class that handles the requests for the menu category DB.\n */\nexport class MenuCategoryService {\n\n  /**\n   * The URL link that is used to make requests to the DB.\n   */\n  menuCategoryURL = \"http://localhost:8080/api/v1/menuCategory\";\n\n  /**\n   * A subject that can be called if new observables need to be emitted.\n   */\n  refresh$ = new BehaviorSubject(null);\n\n  /**\n   * The constructor of the class.\n   * \n   * @param httpClient the http client that is used to make requests to the DB\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * A public observable that can be subscribed to by components.\n   */\n  categories$ = this.refresh$.pipe(\n    exhaustMap(() => this.getMenuCategories()),\n    share()\n  );\n\n  /**\n   * Gets all the menu categories by making a get request to the DB.\n   * \n   * @returns an observable of type Menucategory\n   */\n  public getMenuCategories(): Observable {\n    return this.httpClient.get(this.menuCategoryURL);\n  }\n\n  /**\n   * Gets menu category by id by making a get request to the DB.\n   * \n   * @param id the id of the queried menu category\n   * @returns an observale of type MenuCategory\n   */\n  public getMenuCategory(id: number): Observable {\n    return this.httpClient.get(`${this.menuCategoryURL}/${id}`);\n  }\n\n  /**\n   * Creates a new category by making a post request to the DB.\n   * \n   * @param category the category to be added to the DB\n   * @returns an observable of type MenuCategory\n   */\n  createNewCategory(category: MenuCategory): Observable {\n    return this.httpClient.post(this.menuCategoryURL, category);\n  }\n\n  /**\n   * Deletes a menu category by making a delete request to the DB.\n   * \n   * @param category the category to be deleted\n   * @returns an observable of type MenuCategory\n   */\n  deleteCategory(category: MenuCategory): Observable {\n    return this.httpClient.delete(`${this.menuCategoryURL}/${category.id}`);\n  }\n\n  /**\n   * Updates a menu category by making a put request to the DB.\n   * \n   * @param category the category to be updated\n   * @returns an observable of type MenuCategory\n   */\n  updateCategory(category: MenuCategory): Observable {\n    return this.httpClient.put(`${this.menuCategoryURL}/${category.id}`,category);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuFilterService.html":{"url":"injectables/MenuFilterService.html","title":"injectable - MenuFilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuFilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/menu-filter.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _refreshNeeded\n                            \n                            \n                                filteredDB\n                            \n                            \n                                menuCategoryUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filter\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    refreshNeeded\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/menu-filter.service.ts:30\n                            \n                        \n\n                \n                    \n                            The constructor of the class. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the http client that is used to make requests to the DB\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            filter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(val: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu-filter.service.ts:53\n                \n            \n\n\n            \n                \n                    Filters the menu by the passed arguments (calories and allergens) by\nmaking a requst to the DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the filter args\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable of type Menu[]\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _refreshNeeded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-filter.service.ts:30\n                            \n                        \n\n                \n                    \n                        A subject that can be called if new observables need to be emitted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredDB\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8080/api/v1/menu/filter'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-filter.service.ts:20\n                            \n                        \n\n                \n                    \n                        The URL link that is used to make filter menu requests to the DB.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuCategoryUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8080/api/v1/menuCategory'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu-filter.service.ts:25\n                            \n                        \n\n                \n                    \n                        The URL link that is used to make category requests to the DB.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        refreshNeeded\n                    \n                \n\n                \n                    \n                        getrefreshNeeded()\n                    \n                \n                            \n                                \n                                    Defined in src/app/menu-filter.service.ts:42\n                                \n                            \n                    \n                        \n                                Gets the private refresh needed subject.\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Menu } from '../models/Menu';\nimport {MenuCategory} from \"../models/MenuCategory\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * The class that handles requests for the Menu Filter Service.\n */\nexport class MenuFilterService {\n\n  /**\n   * The URL link that is used to make filter menu requests to the DB.\n   */\n  filteredDB = 'http://localhost:8080/api/v1/menu/filter';\n\n  /**\n   * The URL link that is used to make category requests to the DB.\n   */\n  menuCategoryUrl = 'http://localhost:8080/api/v1/menuCategory'\n\n  /**\n   * A subject that can be called if new observables need to be emitted.\n   */\n  private _refreshNeeded = new Subject();\n\n  /**\n   * The constructor of the class. \n   * \n   * @param httpClient the http client that is used to make requests to the DB\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Gets the private refresh needed subject.\n   */\n  get refreshNeeded() {\n    return this._refreshNeeded;\n  }\n\n  /**\n   * Filters the menu by the passed arguments (calories and allergens) by\n   * making a requst to the DB.\n   * \n   * @param val the filter args\n   * @returns an observable of type Menu[]\n   */\n  public filter(val: string): Observable {\n    this.filteredDB = this.filteredDB.concat(val);\n    let temp: string = this.filteredDB;\n    this.filteredDB = 'http://localhost:8080/api/v1/menu/filter';\n\n    return this.httpClient.get(temp)\n    .pipe(\n      tap(()=> {\n        this._refreshNeeded.next();\n      })\n      ,map(response => response)\n    )\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/menu.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to fetch Menu's from the Restaurant API\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                copyOrder\n                            \n                            \n                                menus$\n                            \n                            \n                                    Private\n                                    Readonly\n                                menuSubject\n                            \n                            \n                                refresh$\n                            \n                            \n                                restaurantWebApiUrl\n                            \n                            \n                                sOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addIngredients\n                            \n                            \n                                createMenuItem\n                            \n                            \n                                deleteMenu\n                            \n                            \n                                getAllUpdatedMenus\n                            \n                            \n                                getIngredients\n                            \n                            \n                                    Public\n                                getMenuById\n                            \n                            \n                                    Public\n                                getMenus\n                            \n                            \n                                    Private\n                                setMenus\n                            \n                            \n                                update\n                            \n                            \n                                updateMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/menu.service.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addIngredients\n                        \n                        \n                    \n                \n            \n            \n                \naddIngredients(id: number, ingredients: Ingredient[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ingredients\n                                    \n                                                Ingredient[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMenuItem\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMenuItem(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu.service.ts:83\n                \n            \n\n\n            \n                \n                    Create new menu by post request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to post to api\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMenu\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMenu(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu.service.ts:115\n                \n            \n\n\n            \n                \n                    Deletes a menu item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        item to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllUpdatedMenus\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllUpdatedMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu.service.ts:64\n                \n            \n\n\n            \n                \n                    Gets updaeted menu list by calling new get request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getIngredients\n                        \n                        \n                    \n                \n            \n            \n                \ngetIngredients(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu.service.ts:107\n                \n            \n\n\n            \n                \n                    Get ingredients of menu item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of menu\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenuById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenuById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu.service.ts:75\n                \n            \n\n\n            \n                \n                    Get menu by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of menu\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMenus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMenus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu.service.ts:37\n                \n            \n\n\n            \n                \n                    Sends get request for menus\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setMenus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setMenus(menus: Menu[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu.service.ts:54\n                \n            \n\n\n            \n                \n                    Sets new menus value for menu Subject\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menus\n                                    \n                                                Menu[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu.service.ts:145\n                \n            \n\n\n            \n                \n                    Put request for menu item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to use in put request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateMenu\n                        \n                        \n                    \n                \n            \n            \n                \nupdateMenu(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menu.service.ts:133\n                \n            \n\n\n            \n                \n                    Updates a menu item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        item to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            copyOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Menu[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menus$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.refresh$.pipe(\n    exhaustMap(() => this.getMenus()),\n    share()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu.service.ts:44\n                            \n                        \n\n                \n                    \n                        Public menus observable that can be subscribed to by components\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            menuSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(new Array())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu.service.ts:31\n                            \n                        \n\n                \n                    \n                        Subject for menus that can be changed reactively\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refresh$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu.service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restaurantWebApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8080/api/v1/menu'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu.service.ts:22\n                            \n                        \n\n                \n                    \n                        URL for menu's in the Restaurant Api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Menu[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menu.service.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { Menu } from '../models/Menu';\nimport { selectedCategory } from '../models/selectedCategory';\nimport { Order } from \"../models/Order\";\nimport { exhaustMap, map, repeat, share } from \"rxjs/operators\";\nimport {Ingredient} from \"../models/Ingredient\";\n\n/**\n * Service to fetch Menu's from the Restaurant API\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n\n\n  /**\n   * URL for menu's in the Restaurant Api\n   */\n  restaurantWebApiUrl = 'http://localhost:8080/api/v1/menu';\n\n  sOrder: Menu[] = [];\n  copyOrder: Menu[] = [];\n\n  /**\n   * Subject for menus that can be changed reactively\n   * @private\n   */\n  private readonly menuSubject = new BehaviorSubject(new Array());\n  refresh$ = new BehaviorSubject(null);\n\n  /**\n   * Sends get request for menus\n   */\n  public getMenus(): Observable {\n    return this.httpClient.get(this.restaurantWebApiUrl);\n  }\n\n  /**\n   * Public menus observable that can be subscribed to by components\n   */\n  menus$ = this.refresh$.pipe(\n    exhaustMap(() => this.getMenus()),\n    share()\n  );\n\n  /**\n   * Sets new menus value for menu Subject\n   * @param menus\n   * @private\n   */\n  private setMenus(menus: Menu[]) {\n    this.menuSubject.next(menus);\n  }\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  /**\n   * Gets updaeted menu list by calling new get request\n   */\n  getAllUpdatedMenus(): void {\n    this.httpClient.get(this.restaurantWebApiUrl)\n      .subscribe((menuList) => {\n        this.menuSubject.next(menuList);\n      });\n  }\n\n  /**\n   * Get menu by id\n   * @param id of menu\n   */\n  public getMenuById(id: number): Observable {\n    return this.httpClient.get(`${this.restaurantWebApiUrl}/${id}`);\n  }\n\n  /**\n   * Create new menu by post request\n   * @param menu to post to api\n   */\n  createMenuItem(menu: Menu): void {\n    let ingredients = menu.ingredients;\n    this.httpClient.post(this.restaurantWebApiUrl, menu)\n      .subscribe((menu) => {\n\n        this.addIngredients(menu.id, ingredients);\n        const currentList = this.menuSubject.getValue()\n        currentList.push(menu)\n        this.menuSubject.next(currentList);\n        this.getAllUpdatedMenus();\n      });\n  }\n\n  addIngredients(id: number, ingredients: Ingredient[]): void {\n    console.log(ingredients);\n    this.httpClient.get(this.restaurantWebApiUrl + '/ingredients?id=' + id + '&ingredients=' + ingredients)\n      .subscribe((menuList) => {\n      });\n  }\n\n  /**\n   * Get ingredients of menu item\n   * @param id of menu\n   */\n  getIngredients(id: number): Observable {\n    return this.httpClient.get(this.restaurantWebApiUrl + '/getIngredients?id=' + id);\n  }\n\n  /**\n   * Deletes a menu item\n   * @param menu item to delete\n   */\n  deleteMenu(menu: Menu): void {\n    this.httpClient.delete(`${this.restaurantWebApiUrl}/${menu.id}`)\n      .subscribe((menu) => {\n        this.menuSubject.next(\n          this.menuSubject.getValue()\n            .filter(\n              (ignoreMenu) =>\n                ignoreMenu !== menu\n            )\n        );\n        this.getAllUpdatedMenus();\n      });\n  }\n\n  /**\n   * Updates a menu item\n   * @param menu item to update\n   */\n  updateMenu(menu: Menu): void {\n    this.httpClient.put(`${this.restaurantWebApiUrl}/${menu.id}`, menu)\n      .subscribe((menuList) => {\n        this.menuSubject.next(menuList);\n        this.getAllUpdatedMenus();\n      });\n  }\n\n  /**\n   * Put request for menu item\n   * @param menu to use in put request\n   */\n  update(menu: Menu): Observable {\n    return this.httpClient.put(`${this.restaurantWebApiUrl}/${menu.id}`, menu);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenusListDisplayComponent.html":{"url":"components/MenusListDisplayComponent.html","title":"component - MenusListDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenusListDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/menus-list-display/menus-list-display.component.ts\n\n\n    \n        Description\n    \n    \n        A Menu list component that displays all menu items in a table\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menus-list-display\n            \n\n            \n                styleUrls\n                ./menus-list-display.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./menus-list-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                catSubscription\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                isAuth\n                            \n                            \n                                menuList\n                            \n                            \n                                refreshTimer$\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteCategoryItem\n                            \n                            \n                                deleteMenuItem\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openAddCategoryDialog\n                            \n                            \n                                openEditCategoryDialog\n                            \n                            \n                                openEditMenuDialog\n                            \n                            \n                                openIngredientsDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuService, categoryService: MenuCategoryService, router: Router, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/menus-list-display/menus-list-display.component.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor tasked with instatiating the neccessary object to filter through the menu.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service associated with the main menu interface.\n\n                                                        \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        MenuCategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service associated with the category filter functionality.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object which helps route to different pages.\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An object involved with creating pop-up panels for more user interaction. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteCategoryItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteCategoryItem(category: MenuCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menus-list-display/menus-list-display.component.ts:151\n                \n            \n\n\n            \n                \n                    Method for opening a pop-up display to delete a category.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                MenuCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the category to be deleted by the staff member.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMenuItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMenuItem(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menus-list-display/menus-list-display.component.ts:128\n                \n            \n\n\n            \n                \n                    Method for deleting a menu item from the menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Menu item subject for deletion.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/menus-list-display/menus-list-display.component.ts:92\n                \n            \n\n\n            \n                \n                    Unsubscribes from timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/menus-list-display/menus-list-display.component.ts:64\n                \n            \n\n\n            \n                \n                    On initialisation, the menu filtering will be insatiated and returned to the user interface.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openAddCategoryDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenAddCategoryDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/menus-list-display/menus-list-display.component.ts:158\n                \n            \n\n\n            \n                \n                    This method is purposed with opening a pop-up display so a staff member can add a category. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditCategoryDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditCategoryDialog(category: MenuCategory)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menus-list-display/menus-list-display.component.ts:137\n                \n            \n\n\n            \n                \n                    Method for opening a pop-up display to edit a category.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    category\n                                    \n                                                MenuCategory\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The category to be modified.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openEditMenuDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenEditMenuDialog(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menus-list-display/menus-list-display.component.ts:100\n                \n            \n\n\n            \n                \n                    This method is tasked with opening a pop-up panel so staff and manager can edit the menu.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Menu item subject to modification.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openIngredientsDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenIngredientsDialog(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/menus-list-display/menus-list-display.component.ts:172\n                \n            \n\n\n            \n                \n                    This method is purposed with opening a pop-up display so a staff member can edit ingredients.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the object in which the method will modify.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuCategory[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menus-list-display/menus-list-display.component.ts:40\n                            \n                        \n\n                \n                    \n                        Field to hold all menu categories\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            catSubscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menus-list-display/menus-list-display.component.ts:56\n                            \n                        \n\n                \n                    \n                        A subscription that uses the timer to get new data from the API\nfor categories\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menus-list-display/menus-list-display.component.ts:35\n                            \n                        \n\n                \n                    \n                        An object involved with creating pop-up panels for more user interaction. \n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAuth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menus-list-display/menus-list-display.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Menu[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menus-list-display/menus-list-display.component.ts:45\n                            \n                        \n\n                \n                    \n                        Field to hold all menu items\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshTimer$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : timer(0, 1000)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menus-list-display/menus-list-display.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/menus-list-display/menus-list-display.component.ts:50\n                            \n                        \n\n                \n                    \n                        A subscription that uses the timer to get new data from the API\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MenuService} from \"../menu.service\";\nimport {Menu} from \"../../models/Menu\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {AddMenuDialogComponent} from \"../waiter-menu/add-menu-dialog/add-menu-dialog.component\";\nimport {Subscription, timer} from \"rxjs\";\nimport {map, tap} from \"rxjs/operators\";\nimport { Router } from '@angular/router';\nimport {MenuCategoryService} from \"../menu-category.service\";\nimport {MenuCategory} from \"../../models/MenuCategory\";\nimport {CategoryDialogComponent} from \"../category-dialog/category-dialog.component\";\nimport {IngredientsDialogComponent} from \"./ingredients-dialog/ingredients-dialog.component\";\n\n/**\n * A Menu list component that displays all menu items in a table\n */\n@Component({\n  selector: 'app-menus-list-display',\n  templateUrl: './menus-list-display.component.html',\n  styleUrls: ['./menus-list-display.component.sass']\n})\nexport class MenusListDisplayComponent implements OnInit, OnDestroy {\n\n  /**\n   * Constructor tasked with instatiating the neccessary object to filter through the menu.\n   * \n   * @param {MenuService} menuService The service associated with the main menu interface.\n   * @param {CategoryService} categoryService The service associated with the category filter functionality.\n   * @param {Router} router An object which helps route to different pages.\n   * @param {MatDialog} dialog An object involved with creating pop-up panels for more user interaction. \n   */\n  constructor(private menuService: MenuService,\n              private categoryService: MenuCategoryService,\n              private router: Router,\n              public dialog: MatDialog) { }\n\n  /**\n   * Field to hold all menu categories\n   */\n  categories: MenuCategory[];\n\n  /**\n   * Field to hold all menu items\n   */\n  menuList: Menu[] = [];\n\n  /**\n   * A subscription that uses the timer to get new data from the API\n   */\n  subscription: Subscription;\n\n  /**\n   * A subscription that uses the timer to get new data from the API\n   * for categories\n   */\n  catSubscription: Subscription;\n  refreshTimer$ = timer(0, 1000);\n\n    isAuth: boolean = true;\n    \n    /**\n     * On initialisation, the menu filtering will be insatiated and returned to the user interface.\n     */\n  ngOnInit(): void {\n    if(this.router.url === '/client-menu') {\n      this.isAuth = false;\n    }\n    this.catSubscription = this.refreshTimer$.subscribe(this.categoryService.refresh$);\n    this.categoryService.categories$.subscribe((categories) => {\n      this.categories = categories;\n    })\n    this.subscription = this.refreshTimer$.subscribe(this.menuService.refresh$);\n    this.menuService.getAllUpdatedMenus();\n    this.menuService.menus$\n      .pipe(\n        map((menus) => {\n           menus.forEach((menu) => {\n            this.menuService.getIngredients(menu.id)\n              .subscribe((ingredients) => menu.ingredients= ingredients);\n          });\n           return menus;\n        })\n      )\n      .subscribe((menus) => {\n      this.menuList = menus;\n    });\n  }\n\n  /**\n   * Unsubscribes from timer\n   */\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n  /**\n   * This method is tasked with opening a pop-up panel so staff and manager can edit the menu.\n   * \n   * @param {Menu} menu Menu item subject to modification.\n   */\n  openEditMenuDialog(menu:Menu): void {\n\n    this.menuService.getIngredients(menu.id).subscribe(ings => {\n      menu.ingredients = [];\n      ings.forEach(element => {\n        menu.ingredients.push(element.ingredient.id);\n      });\n      const title = \"Edit Dish\";\n      const hasMenuItem: boolean = true;\n      const dialogRef = this.dialog.open(AddMenuDialogComponent, {\n        data: {menu,title,hasMenuItem},\n        width: '50%'\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        if (result){\n          this.menuService.update(result).subscribe();\n          this.menuService.addIngredients(result.id, result.ingredients);\n          this.refreshTimer$.subscribe();\n        }\n      });\n    });\n  }\n  /**\n   *  Method for deleting a menu item from the menu.\n   * \n   * @param {Menu} menu Menu item subject for deletion.\n   */\n  deleteMenuItem(menu: Menu) {\n    this.menuService.deleteMenu(menu);\n  }\n\n  /**\n   * Method for opening a pop-up display to edit a category.\n   * \n   * @param {MenuCategory} category The category to be modified.\n   */\n  openEditCategoryDialog(category: MenuCategory) {\n    const dialogRef = this.dialog.open(CategoryDialogComponent, {\n      data: category\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.categoryService.updateCategory(result).subscribe();\n    });\n  }\n  /**\n   * Method for opening a pop-up display to delete a category.\n   * \n   * @param {MenuCategory} category the category to be deleted by the staff member.\n   */\n  deleteCategoryItem(category: MenuCategory) {\n    this.categoryService.deleteCategory(category).subscribe();\n}\n\n  /**\n   * This method is purposed with opening a pop-up display so a staff member can add a category. \n   */\n  openAddCategoryDialog() {\n    const dialogRef = this.dialog.open(CategoryDialogComponent, {\n      data: new MenuCategory()\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      this.categoryService.createNewCategory(result).subscribe();\n    });\n  }\n  /**\n   * This method is purposed with opening a pop-up display so a staff member can edit ingredients.\n   * \n   * @param {Menu} menu the object in which the method will modify.\n   */\n  openIngredientsDialog(menu: Menu) {\n    this.dialog.open(IngredientsDialogComponent, {\n      data: menu\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    Menu\n    \n  \n\n\n\n\n  \n  \n    Name\n    Description\n    Price\n    Ingredients\n    Edit/Delete\n  \n  \n  \n  \n    {{menu.name}}\n    {{menu.description}}\n    {{menu.price}}\n    \n      See Ingredients\n    \n    \n      Edit\n      Delete\n    \n  \n  \n\nAdd Category\n\n  \n  \n    #\n    Category\n    Edit\n    Delete\n  \n  \n  \n  \n    {{i+1}}\n    {{category.category}}\n    \n      Edit\n    \n    \n      Delete\n    \n  \n  \n\n\n    \n\n    \n                \n                    ./menus-list-display.component.sass\n                \n                .menuItem\n  border: 2px black\n\n.menuTitle\n  display: block\n  margin-left: auto\n  margin-right: auto\n  width: 100px\n  height: 100px\n  background-color: #76cfb9\n  border-radius: 4em\n\n\n.tableHead\n  background-color: #76cfb9\n  font-size: 25px\n  color: white\n  font-weight: bold\n\n.deliveryImg\n  height: 50px\n  width: 50px\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Menu              Name    Description    Price    Ingredients    Edit/Delete            {{menu.name}}    {{menu.description}}    {{menu.price}}          See Ingredients              Edit      Delete        Add Category        #    Category    Edit    Delete            {{i+1}}    {{category.category}}          Edit              Delete        '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenusListDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/waiter-menu/notifications/notifications.component.ts\n\n\n    \n        Description\n    \n    \n        Notifications button component to show which tables need assistance or are ready to order.\nTables can then also be dismissed if helped.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                notifications\n            \n\n            \n                styleUrls\n                ./notifications.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                hideMatBadge\n                            \n                            \n                                numberOfNotifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, tableService: TableService)\n                    \n                \n                        \n                            \n                                Defined in src/app/waiter-menu/notifications/notifications.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to open/close dialogs\n\n                                                        \n                                                \n                                                \n                                                        tableService\n                                                  \n                                                        \n                                                                        TableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to perform crud for tables\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/notifications/notifications.component.ts:42\n                \n            \n\n\n            \n                \n                    Gets all tables that need help\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/notifications/notifications.component.ts:51\n                \n            \n\n\n            \n                \n                    Opens the Notification dialog component once clicked on\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/notifications/notifications.component.ts:33\n                            \n                        \n\n                \n                    \n                        to open/close dialogs\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideMatBadge\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/notifications/notifications.component.ts:25\n                            \n                        \n\n                \n                    \n                        Whether the badge should be hidden or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberOfNotifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/notifications/notifications.component.ts:20\n                            \n                        \n\n                \n                    \n                        Number to display how many notifications exist\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TableService } from '../../table.service';\nimport { NotificationsDialogComponent } from './notifications-dialog/notifications-dialog.component';\n\n/**\n * Notifications button component to show which tables need assistance or are ready to order.\n * Tables can then also be dismissed if helped.\n */\n@Component({\n  selector: 'notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.sass']\n})\nexport class NotificationsComponent implements OnInit {\n\n  /**\n   * Number to display how many notifications exist\n   */\n  numberOfNotifications: number;\n\n  /**\n   * Whether the badge should be hidden or not\n   */\n  hideMatBadge: boolean;\n\n  /**\n   *\n   * @param dialog to open/close dialogs\n   * @param tableService to perform crud for tables\n   */\n  constructor(\n    public dialog: MatDialog,\n    private tableService: TableService) {\n    this.numberOfNotifications = 0;\n    this.hideMatBadge = true;\n  }\n\n  /**\n   * Gets all tables that need help\n   */\n  ngOnInit(): void {\n    this.tableService.getNeedHelpTables().subscribe((tables) => {\n      this.numberOfNotifications = tables.length;\n    })\n  }\n\n  /**\n   * Opens the Notification dialog component once clicked on\n   */\n  openDialog() {\n    const dialogRef = this.dialog.open(NotificationsDialogComponent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n}\n\n    \n\n    \n        \n\n  notification_important\n   {{numberOfNotifications}} \n\n    \n\n    \n                \n                    ./notifications.component.sass\n                \n                button\n    font-weight: bold\n    color: black\n    float: right\n\n#lblCartCount \n    font-size: 12px\n    background: white\n    color: black\n    padding: 0 5px\n    vertical-align: top\n    margin-left: -10px \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  notification_important   {{numberOfNotifications}} '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsDialogComponent.html":{"url":"components/NotificationsDialogComponent.html","title":"component - NotificationsDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/waiter-menu/notifications/notifications-dialog/notifications-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        A dialog component that displays tables that need help in a list\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                notifications-dialog\n            \n\n            \n                styleUrls\n                ./notifications-dialog.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./notifications-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNeedHelpTables\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setTableHelped\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tableService: TableService)\n                    \n                \n                        \n                            \n                                Defined in src/app/waiter-menu/notifications/notifications-dialog/notifications-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tableService\n                                                  \n                                                        \n                                                                        TableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNeedHelpTables\n                        \n                        \n                    \n                \n            \n            \n                \ngetNeedHelpTables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/notifications/notifications-dialog/notifications-dialog.component.ts:37\n                \n            \n\n\n            \n                \n                    Helper function to subscribe to table service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/notifications/notifications-dialog/notifications-dialog.component.ts:27\n                \n            \n\n\n            \n                \n                    Gets all tables that need help from service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTableHelped\n                        \n                        \n                    \n                \n            \n            \n                \nsetTableHelped(table: Table)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/notifications/notifications-dialog/notifications-dialog.component.ts:48\n                \n            \n\n\n            \n                \n                    Marks a clicked on table as helped and removes it from the list of tables\nthat need help\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Table\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/notifications/notifications-dialog/notifications-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                        All tables that need help\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { TableService } from '../../../table.service';\nimport { Table } from '../../../../models/Table';\n\n/**\n * A dialog component that displays tables that need help in a list\n */\n@Component({\n  selector: 'notifications-dialog',\n  templateUrl: './notifications-dialog.component.html',\n  styleUrls: ['./notifications-dialog.component.sass']\n})\nexport class NotificationsDialogComponent implements OnInit {\n\n  constructor(\n    private tableService: TableService\n  ) {}\n\n  /**\n   * All tables that need help\n   */\n  tables: Table[] = [];\n\n  /**\n   * Gets all tables that need help from service\n   */\n  ngOnInit(): void {\n    this.tableService.refreshNeeded.subscribe(() => {\n      this.getNeedHelpTables();\n    });\n    this.getNeedHelpTables();\n  }\n\n  /**\n   * Helper function to subscribe to table service\n   */\n  getNeedHelpTables(): void {\n    this.tableService.getNeedHelpTables().subscribe(tables => {\n      this.tables = tables;\n    });\n  }\n\n  /**\n   * Marks a clicked on table as helped and removes it from the list of tables\n   * that need help\n   * @param table\n   */\n  setTableHelped(table: Table) {\n    this.tableService.getTableByNumber(table.tableNumber).subscribe((table) => {\n      this.tableService.updateTable(table);\n    })\n    this.tableService.getNeedHelpTables().subscribe(tables => {\n      this.tables = tables;\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n  Tables that need help\n  (Click to mark as helped) \n  \n\n\n\n    \n      Table {{table.tableNumber}}\n    \n\n    \n\n    \n                \n                    ./notifications-dialog.component.sass\n                \n                #titleAndInfo\n  font-weight: bold\n\n#dialogTitle\n  font-size: 30px\n\n#info\n  color: red\n  font-size: 10px \n\n#option\n  color: red\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Tables that need help  (Click to mark as helped)             Table {{table.tableNumber}}    '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Order.ts\n        \n\n            \n                Description\n            \n            \n                Order object with id, meal, category, table, waiter id, time of placed order,\ncustomer assigned to order, table assigned to order, total of order and\nstatus of order: isPaid,isReady, isConfirmed and is delivered.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                customer\n                            \n                            \n                                id\n                            \n                            \n                                isConfirmed\n                            \n                            \n                                isDelivered\n                            \n                            \n                                isPaid\n                            \n                            \n                                isReady\n                            \n                            \n                                meal\n                            \n                            \n                                orderPlacedTime\n                            \n                            \n                                table\n                            \n                            \n                                total\n                            \n                            \n                                waiterId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            category\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Order.ts:25\n                            \n                        \n\n                \n                    \n                        Category of order\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Customer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Order.ts:70\n                            \n                        \n\n                \n                    \n                        Customer that order belongs to\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Order.ts:15\n                            \n                        \n\n                \n                    \n                        Id for Order\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isConfirmed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Order.ts:35\n                            \n                        \n\n                \n                    \n                        If order has been confirmed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDelivered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Order.ts:30\n                            \n                        \n\n                \n                    \n                        If order has been delivered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPaid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Order.ts:55\n                            \n                        \n\n                \n                    \n                        If order has been paid by customer\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Order.ts:40\n                            \n                        \n\n                \n                    \n                        If order is ready to be served\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            meal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Meal[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Order.ts:20\n                            \n                        \n\n                \n                    \n                        Meals ordered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderPlacedTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Order.ts:65\n                            \n                        \n\n                \n                    \n                        Time order has been placed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Order.ts:45\n                            \n                        \n\n                \n                    \n                        Table the order is placed in\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Order.ts:60\n                            \n                        \n\n                \n                    \n                        Total bill price of order\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            waiterId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Order.ts:50\n                            \n                        \n\n                \n                    \n                        Waiter serving this order\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Meal} from './Meal';\nimport {Table} from './Table';\nimport {Customer} from \"./Customer\";\n\n/**\n * Order object with id, meal, category, table, waiter id, time of placed order,\n * customer assigned to order, table assigned to order, total of order and\n * status of order: isPaid,isReady, isConfirmed and is delivered.\n */\nexport class Order {\n\n  /**\n   * Id for Order\n   */\n  id: number;\n\n  /**\n   * Meals ordered\n   */\n  meal: Meal[];\n\n  /**\n   * Category of order\n   */\n  category: string;\n\n  /**\n   * If order has been delivered\n   */\n  isDelivered: boolean;\n\n  /**\n   * If order has been confirmed\n   */\n  isConfirmed: boolean;\n\n  /**\n   * If order is ready to be served\n   */\n  isReady: boolean;\n\n  /**\n   * Table the order is placed in\n   */\n  table: Table;\n\n  /**\n   * Waiter serving this order\n   */\n  waiterId: number;\n\n  /**\n   * If order has been paid by customer\n   */\n  isPaid:boolean;\n\n  /**\n   * Total bill price of order\n   */\n  total:number;\n\n  /**\n   * Time order has been placed\n   */\n  orderPlacedTime: string;\n\n  /**\n   * Customer that order belongs to\n   */\n  customer: Customer;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderComponent.html":{"url":"components/OrderComponent.html","title":"component - OrderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/waiter-menu/order/order.component.ts\n\n\n    \n        Description\n    \n    \n        Dialog component for Orders. Displays all information and controls for an order.\nDisplays options to edit order if isWaiterStaff property is false.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order\n            \n\n            \n                styleUrls\n                ./order.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./order.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                menuList\n                            \n                            \n                                    Public\n                                menuService\n                            \n                            \n                                order$\n                            \n                            \n                                orderedMealItems$\n                            \n                            \n                                    Private\n                                orderedMealItemsSubject$\n                            \n                            \n                                    Private\n                                orderSubject$\n                            \n                            \n                                refreshTimer$\n                            \n                            \n                                subscription\n                            \n                            \n                                subscriptionMenus\n                            \n                            \n                                table\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMenuToOrder\n                            \n                            \n                                deleteOrder\n                            \n                            \n                                deleteOrderedMenuItem\n                            \n                            \n                                getId\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                            \n                                updateOrderConfirmed\n                            \n                            \n                                updateOrderDelivered\n                            \n                            \n                                updateOrderedMealItems\n                            \n                            \n                                updateOrderIsPaid\n                            \n                            \n                                updateOrderReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: literal type, orderService: OrderService, menuService: MenuService, mealService: MealService)\n                    \n                \n                        \n                            \n                                Defined in src/app/waiter-menu/order/order.component.ts:66\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                for opening/closing dialogs in the component\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injected data {Order, isKitchenStaff} from parent component\n\n                                                        \n                                                \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                To perfrom crud on orders\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                To perform crud on menus\n\n                                                        \n                                                \n                                                \n                                                        mealService\n                                                  \n                                                        \n                                                                        MealService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to perform crud on meals\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addMenuToOrder\n                        \n                        \n                    \n                \n            \n            \n                \naddMenuToOrder(menu: Menu, order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/order/order.component.ts:181\n                \n            \n\n\n            \n                \n                    Adds a menu to the order\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOrder\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOrder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/order/order.component.ts:170\n                \n            \n\n\n            \n                \n                    Deletes this order\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOrderedMenuItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOrderedMenuItem(meal: Meal)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/order/order.component.ts:226\n                \n            \n\n\n            \n                \n                    Delete an ordered menu item from the current order\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    meal\n                                    \n                                                Meal\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to remove from current order\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/order/order.component.ts:149\n                \n            \n\n\n            \n                \n                    Returns the id of the injected order that the dialog opens up with\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the id of current order\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/order/order.component.ts:88\n                \n            \n\n\n            \n                \n                    Subscribes to order service and menu service for real time changes with\n1 second polling\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/order/order.component.ts:214\n                \n            \n\n\n            \n                \n                    Save's the curent order and closes the dialog. Sends a reference of changed order back\nto parent component.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to save and send to parent component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrderConfirmed\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrderConfirmed(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/order/order.component.ts:130\n                \n            \n\n\n            \n                \n                    Updates an orders confirmed status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to change update status of\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrderDelivered\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrderDelivered(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/order/order.component.ts:120\n                \n            \n\n\n            \n                \n                    Updates an order's delivery status\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to change delivery status of\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrderedMealItems\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrderedMealItems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/order/order.component.ts:158\n                \n            \n\n\n            \n                \n                    Adds or deletes meals from an order\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrderIsPaid\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrderIsPaid(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/order/order.component.ts:140\n                \n            \n\n\n            \n                \n                    Updates paid status of order\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to change isPaid status of\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrderReady\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrderReady(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/order/order.component.ts:110\n                \n            \n\n\n            \n                \n                    Updates isReady property for order\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to update status of isReady\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/order/order.component.ts:78\n                            \n                        \n\n                \n                    \n                        Injected data {Order, isKitchenStaff} from parent component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/order/order.component.ts:77\n                            \n                        \n\n                \n                    \n                        for opening/closing dialogs in the component\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            menuList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Menu[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/order/order.component.ts:37\n                            \n                        \n\n                \n                    \n                        The list of all menu item's that can be added to an order\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            menuService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MenuService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/order/order.component.ts:80\n                            \n                        \n\n                \n                    \n                        To perform crud on menus\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            order$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.orderSubject$.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/order/order.component.ts:59\n                            \n                        \n\n                \n                    \n                        The order subject as an obsrevable that can be subscribed to\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderedMealItems$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.orderedMealItemsSubject$.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/order/order.component.ts:48\n                            \n                        \n\n                \n                    \n                        Ordered Meal items as an observable that can be subscribed to\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            orderedMealItemsSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/order/order.component.ts:43\n                            \n                        \n\n                \n                    \n                        Reactive subject to change the meals that have been ordered in this current order\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            orderSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(this.data.order)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/order/order.component.ts:54\n                            \n                        \n\n                \n                    \n                        The current order as a reactive subject that can be changed and also subscribed to\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshTimer$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : timer(0, 1000)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/order/order.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/order/order.component.ts:64\n                            \n                        \n\n                \n                    \n                        A subscription that uses the timer to get new data from the API\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscriptionMenus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/order/order.component.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            table\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/order/order.component.ts:32\n                            \n                        \n\n                \n                    \n                        The current table the order belongs to\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/order/order.component.ts:27\n                            \n                        \n\n                \n                    \n                        Total sum for the order bill\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {Table} from '../../../models/Table';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {WaiterMenuComponent} from \"../waiter-menu.component\";\nimport {OrderService} from \"../../order.service\";\nimport {Order} from \"../../../models/Order\";\nimport {MenuService} from \"../../menu.service\";\nimport {Menu} from \"../../../models/Menu\";\nimport {BehaviorSubject, Subscription, timer} from \"rxjs\";\nimport {Meal} from \"../../../models/Meal\";\nimport {MealService} from \"../../meal.service\";\n\n/**\n * Dialog component for Orders. Displays all information and controls for an order.\n * Displays options to edit order if isWaiterStaff property is false.\n */\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.sass'],\n})\nexport class OrderComponent implements OnInit {\n\n  /**\n   * Total sum for the order bill\n   */\n  total: number;\n\n  /**\n   * The current table the order belongs to\n   */\n  table: Table;\n\n  /**\n   * The list of all menu item's that can be added to an order\n   */\n  menuList: Menu[] = [];\n\n  /**\n   * Reactive subject to change the meals that have been ordered in this current order\n   * @private\n   */\n  private orderedMealItemsSubject$ = new BehaviorSubject([]);\n\n  /**\n   * Ordered Meal items as an observable that can be subscribed to\n   */\n  orderedMealItems$ = this.orderedMealItemsSubject$.asObservable();\n\n  /**\n   * The current order as a reactive subject that can be changed and also subscribed to\n   * @private\n   */\n  private orderSubject$ = new BehaviorSubject(this.data.order);\n\n  /**\n   * The order subject as an obsrevable that can be subscribed to\n   */\n  order$ = this.orderSubject$.asObservable();\n\n  /**\n   * A subscription that uses the timer to get new data from the API\n   */\n  subscription: Subscription;\n  subscriptionMenus: Subscription;\n  refreshTimer$ = timer(0, 1000);\n\n  /**\n   *\n   * @param dialogRef for opening/closing dialogs in the component\n   * @param data Injected data {Order, isKitchenStaff} from parent component\n   * @param orderService To perfrom crud on orders\n   * @param menuService To perform crud on menus\n   * @param mealService to perform crud on meals\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: {order: Order, isKitchenStaff: boolean},\n    private orderService: OrderService,\n    public menuService: MenuService,\n    private mealService: MealService) {}\n\n\n  /**\n   * Subscribes to order service and menu service for real time changes with\n   * 1 second polling\n    */\n  ngOnInit(): void {\n    this.updateOrderedMealItems();\n    this.subscriptionMenus = this.refreshTimer$.subscribe(this.menuService.refresh$);\n    this.menuService.menus$.subscribe((menu) => {\n      this.menuList = menu;\n      console.log(menu);\n    });\n    // subscription uses 1s timer on the backend get request call\n    this.subscription = this.refreshTimer$.subscribe(this.orderService.refresh$);\n    this.orderService.getOrderById(this.data.order.id).subscribe((orders) => {\n      this.orderSubject$.next(orders);\n      this.data.order = orders;\n    });\n    if(this.data.isKitchenStaff == undefined) {\n      this.data.isKitchenStaff = false;\n    }\n  }\n\n  /**\n   * Updates isReady property for order\n   * @param order to update status of isReady\n   */\n  updateOrderReady(order: Order): void{\n    this.orderService.updateOrderReady(order).subscribe((order) => {\n      this.orderSubject$.next(order);\n    })\n  }\n\n  /**\n   * Updates an order's delivery status\n   * @param order to change delivery status of\n   */\n  updateOrderDelivered(order: Order): void {\n    this.orderService.updateOrderDelivered(order).subscribe((order) => {\n      this.orderSubject$.next(order);\n    })\n  }\n\n  /**\n   * Updates an orders confirmed status\n   * @param order to change update status of\n   */\n  updateOrderConfirmed(order: Order): void {\n    this.orderService.updateOrderConfirmed(order)\n      .subscribe((newOrder) =>this.orderSubject$.next(newOrder));\n    console.log(order);\n  }\n\n  /**\n   * Updates paid status of order\n   * @param order to change isPaid status of\n   */\n  updateOrderIsPaid(order: Order): void {\n    this.orderService.updateIsPaid(order);\n  }\n\n\n  /**\n   * Returns the id of the injected order that the dialog opens up with\n   * @return the id of current order\n   */\n  getId(): number {\n    let id = undefined;\n    this.order$.subscribe((o) => id = o.id);\n    return id;\n  }\n\n  /**\n   * Adds or deletes meals from an order\n   */\n  updateOrderedMealItems() {\n    if(this.data.order.meal.length > 0){\n      this.order$.subscribe((order) => {\n        this.orderedMealItemsSubject$.next(order.meal);\n        this.total = order.total;\n      })\n    }\n  }\n\n  /**\n   * Deletes this order\n   */\n  deleteOrder(): void {\n    console.log(this.data.order.id);\n    this.orderService.deleteOrderById(this.data.order.id);\n    this.dialogRef.close();\n  }\n\n  /**\n   * Adds a menu to the order\n   * @param menu\n   * @param order\n   */\n  addMenuToOrder(menu: Menu, order: Order) {\n    const _orderedMealItems = this.orderedMealItemsSubject$.getValue();\n    let alreadyOrdered = false;\n    _orderedMealItems.forEach((meal) => {\n      if (meal.menu.name == menu.name){\n        meal.numberSelections += 1;\n        order.total += meal.menu.price\n        this.total = order.total;\n        this.orderService.updateTotal(order);\n        this.mealService.updateNumberSelections(meal);\n        alreadyOrdered = true;\n      }\n    });\n    if(alreadyOrdered == false) {\n      const newMeal = new Meal();\n      newMeal.numberSelections = 1;\n      newMeal.menu = menu;\n      newMeal.order = order;\n      order.total += menu.price\n      this.total = order.total;\n      this.orderService.updateTotal(order);\n      this.mealService.createNewMeal(newMeal).subscribe((meal) =>{\n        _orderedMealItems.push(meal);\n      });\n    }\n    this.orderedMealItemsSubject$.next(_orderedMealItems);\n  }\n\n  /**\n   * Save's the curent order and closes the dialog. Sends a reference of changed order back\n   * to parent component.\n   * @param order to save and send to parent component\n   */\n  save(order: Order) {\n    console.log(this.orderSubject$.getValue());\n    this.data.order = this.orderSubject$.getValue();\n    this.orderedMealItemsSubject$.complete();\n    this.orderedMealItemsSubject$.complete();\n    this.dialogRef.close(order);\n  }\n\n  /**\n   * Delete an ordered menu item from the current order\n   * @param meal to remove from current order\n   */\n  deleteOrderedMenuItem(meal: Meal) {\n    this.mealService.deleteMeal(meal).subscribe((deletedMeal) => console.log(deletedMeal));\n    this.data.order.total -= meal.menu.price * meal.numberSelections;\n    this.total = this.data.order.total;\n    this.orderService.updateTotal(this.data.order);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Order #{{data.order.id}}\n    \n    \n      Confirmed\n    \n    \n\n      Paid\n\n    \n    \n      \n      Delivered\n      \n    \n    \n\n      Ready\n\n    \n    \n  \n\n  \n  \n    \n      \n        \n          \n            \n              \n              \n                #\n                Item\n                Price\n                Qty\n                Delete\n              \n              \n              \n              \n                {{i+1}}\n                {{meal.menu.name}}\n                £{{meal.menu.price}}\n                x{{meal.numberSelections}}\n                delete\n              \n              \n            \n          \n            Total: £{{total}}\n        \n        \n          Add to Order\n          \n            \n              {{menu.name}}\n            \n          \n        \n      \n    \n    \n      \n        \n          \n            \n              \n                \n                \n                  #\n                  Item\n                  Qty\n                \n                \n                \n                \n                  {{i+1}}\n                  {{meal.menu.name}}\n                  x{{meal.numberSelections}}\n                \n                \n              \n            \n          \n        \n      \n    \n  \n  \n    Cancel\n    Save\n    \n      delete\n    \n  \n\n    \n\n    \n                \n                    ./order.component.sass\n                \n                .card\n  width: 99%\n  height: 100%\n  border-color: white\n\n.tile\n  border-color: white\n\n.foodBtn\n  color: red\n  padding: 5px\n  color: green\n  width: 100%\n\n.tableNumberInput\n  width: 50px\n\n.orderedItemsTable\n  font-size: 15px\n\n.my-custom-scrollbar\n  //position: relative\n  height: 90%\n  overflow: auto\n\n.table-wrapper-scroll-y\n  display: block\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Order #{{data.order.id}}              Confirmed              Paid                    Delivered                    Ready                                                                                                  #                Item                Price                Qty                Delete                                                                        {{i+1}}                {{meal.menu.name}}                £{{meal.menu.price}}                x{{meal.numberSelections}}                delete                                                              Total: £{{total}}                          Add to Order                                    {{menu.name}}                                                                                                                                                #                  Item                  Qty                                                                                  {{i+1}}                  {{meal.menu.name}}                  x{{meal.numberSelections}}                                                                                              Cancel    Save          delete      '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/order.service.ts\n        \n\n            \n                Description\n            \n            \n                Service that performs create, read, update, delete operations using the Restaurant Api\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _refreshNeeded\n                            \n                            \n                                orders$\n                            \n                            \n                                orderSubject$\n                            \n                            \n                                refresh$\n                            \n                            \n                                restaurantWebApiUrl\n                            \n                            \n                                    Public\n                                waiterId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewOrder\n                            \n                            \n                                createNewOrderWithCustomer\n                            \n                            \n                                deleteOrderById\n                            \n                            \n                                    Public\n                                getNoConfirmedOrders\n                            \n                            \n                                getOrderById\n                            \n                            \n                                    Public\n                                getOrderedMenuItems\n                            \n                            \n                                    Public\n                                getOrders\n                            \n                            \n                                    Public\n                                getUpdatedOrders\n                            \n                            \n                                    Public\n                                getWaiterSpecificOrders\n                            \n                            \n                                updateIsPaid\n                            \n                            \n                                updateOrder\n                            \n                            \n                                updateOrderConfirmed\n                            \n                            \n                                updateOrderDelivered\n                            \n                            \n                                    Public\n                                updateOrderIsConfirmed\n                            \n                            \n                                    Public\n                                updateOrderIsDelivered\n                            \n                            \n                                updateOrderReady\n                            \n                            \n                                updateTotal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/order.service.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to perform http requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewOrder\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewOrder(customer: Customer, total: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:101\n                \n            \n\n\n            \n                \n                    Creates new order with a total initialised to zero.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    customer\n                                    \n                                                Customer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to assign to order\n\n                                    \n                                \n                                \n                                    total\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to add to order\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewOrderWithCustomer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewOrderWithCustomer(customer: Customer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:79\n                \n            \n\n\n            \n                \n                    Creates a new order with an assigned new customer.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    customer\n                                    \n                                                Customer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to assign to the new order\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteOrderById\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteOrderById(orderId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:125\n                \n            \n\n\n            \n                \n                    Deletes an order by Id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    orderId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        belonging to order that needs to be deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNoConfirmedOrders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNoConfirmedOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:250\n                \n            \n\n\n            \n                \n                    Get orders that have not been confirmed.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOrderById\n                        \n                        \n                    \n                \n            \n            \n                \ngetOrderById(orderId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:113\n                \n            \n\n\n            \n                \n                    Gets an order by querying by Id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    orderId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of order\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOrderedMenuItems\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrderedMenuItems(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:211\n                \n            \n\n\n            \n                \n                    Gets ordered menu items for an order.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to get ordered items of\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOrders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:61\n                \n            \n\n\n            \n                \n                    Get all orders from the Api.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUpdatedOrders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUpdatedOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:68\n                \n            \n\n\n            \n                \n                    Get updated orders by changing state of order subject.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWaiterSpecificOrders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWaiterSpecificOrders(waiterId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:258\n                \n            \n\n\n            \n                \n                    Get orders that have only been assigned to a waiter.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    waiterId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of waiter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateIsPaid\n                        \n                        \n                    \n                \n            \n            \n                \nupdateIsPaid(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:200\n                \n            \n\n\n            \n                \n                    Updates isPaid property of order.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrder\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrder(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:165\n                \n            \n\n\n            \n                \n                    Updates an order using a put request.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrderConfirmed\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrderConfirmed(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:149\n                \n            \n\n\n            \n                \n                    Update the isConfirmed property of an order.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrderDelivered\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrderDelivered(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:141\n                \n            \n\n\n            \n                \n                    Update the isDelivered property of an order.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateOrderIsConfirmed\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOrderIsConfirmed(order: Order, newIsConfirmed: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:236\n                \n            \n\n\n            \n                \n                    Updates isDelivered property of order.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be updated\n\n                                    \n                                \n                                \n                                    newIsConfirmed\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new value of isConfirmed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateOrderIsDelivered\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateOrderIsDelivered(order: Order, newIsDelivered: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:220\n                \n            \n\n\n            \n                \n                    Updates isDelivered property of order.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be updated\n\n                                    \n                                \n                                \n                                    newIsDelivered\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new value of isDelivered\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateOrderReady\n                        \n                        \n                    \n                \n            \n            \n                \nupdateOrderReady(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:157\n                \n            \n\n\n            \n                \n                    Update the isReady property of an order.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTotal\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTotal(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/order.service.ts:182\n                \n            \n\n\n            \n                \n                    Updates total of an order.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _refreshNeeded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/order.service.ts:26\n                            \n                        \n\n                \n                    \n                        A subject that is called when a new request is needed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.refresh$.pipe(\n    exhaustMap(() => this.getOrders()),\n    share()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/order.service.ts:46\n                            \n                        \n\n                \n                    \n                        A public observable that can be subscribed to by components.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject([])\n                        \n                    \n                        \n                            \n                                    Defined in src/app/order.service.ts:36\n                            \n                        \n\n                \n                    \n                        Helper Subject to store orders for state management.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refresh$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/order.service.ts:41\n                            \n                        \n\n                \n                    \n                        A subject that can be called if new observables need to be emitted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restaurantWebApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8080/api/v1/orders'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/order.service.ts:20\n                            \n                        \n\n                \n                    \n                        URL for orders in the Api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waiterId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/order.service.ts:31\n                            \n                        \n\n                \n                    \n                        Id for a waiter to get specified orders for a waiter.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Order } from '../models/Order';\nimport { exhaustMap, share, tap } from 'rxjs/operators';\nimport { Menu } from \"../models/Menu\";\nimport { Customer } from \"../models/Customer\";\n\n/**\n * Service that performs create, read, update, delete operations using the Restaurant Api\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  /**\n   * URL for orders in the Api\n   */\n  restaurantWebApiUrl = 'http://localhost:8080/api/v1/orders';\n\n  /**\n   * A subject that is called when a new request is needed.\n   * @private\n   */\n  private _refreshNeeded = new Subject();\n\n  /**\n   * Id for a waiter to get specified orders for a waiter.\n   */\n  public waiterId: number;\n\n  /**\n   * Helper Subject to store orders for state management.\n   */\n  orderSubject$ = new BehaviorSubject([]);\n\n  /**\n   * A subject that can be called if new observables need to be emitted.\n   */\n  refresh$ = new BehaviorSubject(null);\n\n  /**\n   * A public observable that can be subscribed to by components.\n   */\n  orders$ = this.refresh$.pipe(\n    exhaustMap(() => this.getOrders()),\n    share()\n  );\n\n  /**\n   *\n   * @param httpClient to perform http requests\n   */\n  constructor(private httpClient: HttpClient) {\n  }\n\n  /**\n   * Get all orders from the Api.\n   */\n  public getOrders(): Observable {\n    return this.httpClient.get(this.restaurantWebApiUrl);\n  }\n\n  /**\n   * Get updated orders by changing state of order subject.\n   */\n  public getUpdatedOrders(): void {\n    this.httpClient.get(this.restaurantWebApiUrl)\n      .subscribe((orders) => {\n        this.orderSubject$.next(orders);\n      });\n  }\n\n  /**\n   * Creates a new order with an assigned new customer.\n   * @param customer to assign to the new order\n   */\n  createNewOrderWithCustomer(customer: Customer): void {\n    const orderWithCustomer = new Order();\n    orderWithCustomer.customer = customer;\n    orderWithCustomer.isPaid = false;\n    orderWithCustomer.total = 0;\n    orderWithCustomer.waiterId = this.waiterId;\n    this.httpClient.post(this.restaurantWebApiUrl, orderWithCustomer)\n      .subscribe((order) => {\n        const _orders = this.orderSubject$.getValue();\n        _orders.push(order);\n        this.orderSubject$.next(\n          _orders\n        );\n        this.getUpdatedOrders();\n      });\n  }\n\n  /**\n   * Creates new order with a total initialised to zero.\n   * @param customer to assign to order\n   * @param total to add to order\n   */\n  createNewOrder(customer: Customer, total: number): Observable {\n    const orderWithCustomer = new Order();\n    orderWithCustomer.customer = customer;\n    orderWithCustomer.total = total;\n    orderWithCustomer.isPaid = false;\n    return this.httpClient.post(this.restaurantWebApiUrl, orderWithCustomer);\n  }\n\n  /**\n   * Gets an order by querying by Id.\n   * @param orderId id of order\n   */\n  getOrderById(orderId: number): Observable {\n    return this.refresh$.pipe(\n      exhaustMap(() =>\n        this.httpClient.get(`${this.restaurantWebApiUrl}/${orderId}`)\n      )\n    );\n  }\n\n  /**\n   * Deletes an order by Id.\n   * @param orderId belonging to order that needs to be deleted\n   */\n  deleteOrderById(orderId: number): void {\n    this.httpClient.delete(`${this.restaurantWebApiUrl}/${orderId}`)\n      .subscribe(() => {\n        this.orderSubject$.next(\n          this.orderSubject$.getValue()\n            .filter(\n              (ignoreOrder) =>\n                ignoreOrder.id !== orderId)\n        );\n      });\n  }\n\n  /**\n   * Update the isDelivered property of an order.\n   * @param order to be updated\n   */\n  updateOrderDelivered(order: Order): Observable {\n    return this.httpClient.put(`${this.restaurantWebApiUrl}/${order.id}/isdelivered/${order.isDelivered}`, order);\n  }\n\n  /**\n   * Update the isConfirmed property of an order.\n   * @param order to be updated\n   */\n  updateOrderConfirmed(order: Order): Observable {\n    return this.httpClient.put(`${this.restaurantWebApiUrl}/${order.id}/isconfirmed/${order.isConfirmed}`, order);\n  }\n\n  /**\n   * Update the isReady property of an order.\n   * @param order to be updated\n   */\n  updateOrderReady(order: Order): Observable {\n    return this.httpClient.put(`${this.restaurantWebApiUrl}/${order.id}/isready/${order.isReady}`, order);\n  }\n\n  /**\n   * Updates an order using a put request.\n   * @param order to be updated\n   */\n  updateOrder(order: Order): void {\n    this.httpClient.put(`${this.restaurantWebApiUrl}/${order.id}`, order)\n      .subscribe((order) => {\n        let _orders = this.orderSubject$.getValue();\n        _orders.forEach((whichOrder) => {\n          if (whichOrder.id == order.id) {\n            whichOrder = order;\n          }\n        });\n        this.orderSubject$.next(_orders);\n      });\n  }\n\n  /**\n   * Updates total of an order.\n   * @param order to be updated\n   */\n  updateTotal(order: Order): void {\n    let updateTotalUrl = this.restaurantWebApiUrl + \"/total\";\n    this.httpClient.put(`${updateTotalUrl}/${order.id}/${order.total}`, order)\n      .subscribe((order) => {\n        let _orders = this.orderSubject$.getValue();\n        _orders.forEach((whichOrder) => {\n          if (whichOrder.id == order.id) {\n            whichOrder = order;\n          }\n        });\n        this.orderSubject$.next(_orders);\n      })\n  }\n\n  /**\n   * Updates isPaid property of order.\n   * @param order to be updated\n   */\n  updateIsPaid(order: Order): void {\n    let updateIsPaidUrl = this.restaurantWebApiUrl + \"/isPaid\";\n    this.httpClient.put(`${updateIsPaidUrl}/${order.id}/${order.isPaid}`, order).subscribe((order) => {\n      console.log(order);\n    })\n  }\n\n  /**\n   * Gets ordered menu items for an order.\n   * @param order to get ordered items of\n   */\n  public getOrderedMenuItems(order: Order): Observable {\n    return this.httpClient.get(`${this.restaurantWebApiUrl}/${order.id}/orderedMenuItems`);\n  }\n\n  /**\n   * Updates isDelivered property of order.\n   * @param order to be updated\n   * @param newIsDelivered new value of isDelivered\n   */\n  public updateOrderIsDelivered(order: Order, newIsDelivered: boolean): Observable {\n    let restaurantOrderIsDeliveredURL: string = this.restaurantWebApiUrl + '/' + order.id + '/isdelivered';\n    order.isDelivered = newIsDelivered;\n    return this.httpClient.put(`${restaurantOrderIsDeliveredURL}/${newIsDelivered.valueOf()}`, order)\n      .pipe(\n        tap(() => {\n          this._refreshNeeded.next();\n        })\n      )\n  }\n\n  /**\n   * Updates isDelivered property of order.\n   * @param order to be updated\n   * @param newIsConfirmed new value of isConfirmed\n   */\n  public updateOrderIsConfirmed(order: Order, newIsConfirmed: boolean): Observable {\n    let restaurantOrderIsConfirmedURL: string = this.restaurantWebApiUrl + '/' + order.id + '/isconfirmed';\n    order.isConfirmed = newIsConfirmed;\n    return this.httpClient.put(`${restaurantOrderIsConfirmedURL}/${newIsConfirmed.valueOf()}`, order)\n      .pipe(\n        tap(() => {\n          this._refreshNeeded.next();\n        })\n      )\n  }\n\n  /**\n   * Get orders that have not been confirmed.\n   */\n  public getNoConfirmedOrders(): Observable {\n    return this.httpClient.get(`${this.restaurantWebApiUrl}/noisconfirmed`);\n  }\n\n  /**\n   * Get orders that have only been assigned to a waiter.\n   * @param waiterId Id of waiter\n   */\n  public getWaiterSpecificOrders(waiterId: number): Observable {\n    return this.httpClient.get(`${this.restaurantWebApiUrl}/waiterid/${waiterId}`);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrderTrackerComponent.html":{"url":"components/OrderTrackerComponent.html","title":"component - OrderTrackerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrderTrackerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/customer-interface/order-tracker/order-tracker.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-order-tracker\n            \n\n            \n                styleUrls\n                ./order-tracker.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./order-tracker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                customerId\n                            \n                            \n                                orders\n                            \n                            \n                                tableNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayOrders\n                            \n                            \n                                navigateToPayment\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, customerService: CustomerService, orderService: OrderService, router: Router, data)\n                    \n                \n                        \n                            \n                                Defined in src/app/customer-interface/order-tracker/order-tracker.component.ts:34\n                            \n                        \n\n                \n                    \n                            The construstuctor of the class.\nInjects mat dialog data from the customer interface into the \ncustomer id and table number.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dialog ref to handle the mat dialog\n\n                                                        \n                                                \n                                                \n                                                        customerService\n                                                  \n                                                        \n                                                                        CustomerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the customer service that handles get and put requests\n\n                                                        \n                                                \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the order service that handles get and put requests\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a router to route to payment\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the data being injected\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            displayOrders\n                        \n                        \n                    \n                \n            \n            \n                \ndisplayOrders()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/order-tracker/order-tracker.component.ts:73\n                \n            \n\n\n            \n                \n                    Displays the customer's orders.\nMakes a get request to the customer DB by subscribing to getCustomerById()\nthat returns a Customer observable. Inside the subscription, it makes a get request to\nthe orders db by subscribing to getOrders() that returns an Order[] observable. It \nsubscribes to it and adds to this.orders all the orders corresponding to the customer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToPayment\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToPayment(orderId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/order-tracker/order-tracker.component.ts:93\n                \n            \n\n\n            \n                \n                    Navigates to the payment page for that order by accesing an \nactivated route with the order id.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    orderId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the order id param used in the activated route\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/order-tracker/order-tracker.component.ts:62\n                \n            \n\n\n            \n                \n                    Set-up method that gets called once when the object is instantiated.\nCalls displayOrders().\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/order-tracker/order-tracker.component.ts:24\n                            \n                        \n\n                \n                    \n                        The customer id that is used to make get requets.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/order-tracker/order-tracker.component.ts:34\n                            \n                        \n\n                \n                    \n                        The list of customer's orders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/order-tracker/order-tracker.component.ts:29\n                            \n                        \n\n                \n                    \n                        The table number that is used to make get requests.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n\nimport { Order } from '../../../models/Order';\nimport { CustomerService } from '../../customer.service';\nimport { OrderService } from '../../order.service';\nimport { CustomerInterfaceComponent } from '../customer-interface.component';\n\n@Component({\n  selector: 'app-order-tracker',\n  templateUrl: './order-tracker.component.html',\n  styleUrls: ['./order-tracker.component.sass']\n})\n\n/**\n * The class that handles the order tracker.\n */\nexport class OrderTrackerComponent implements OnInit {\n\n  /**\n   * The customer id that is used to make get requets.\n   */\n  customerId: number;\n\n  /**\n   * The table number that is used to make get requests.\n   */\n  tableNumber: number;\n  \n  /**\n   * The list of customer's orders.\n   */\n  orders: Order[]; \n\n  /**\n   * The construstuctor of the class.\n   * Injects mat dialog data from the customer interface into the \n   * customer id and table number.\n   * \n   * @param dialogRef a dialog ref to handle the mat dialog\n   * @param customerService the customer service that handles get and put requests\n   * @param orderService the order service that handles get and put requests\n   * @param router a router to route to payment\n   * @param data the data being injected\n   */\n  constructor(\n    private dialogRef: MatDialogRef,\n    private customerService: CustomerService,\n    private orderService: OrderService,\n    private router: Router,\n    @Inject(MAT_DIALOG_DATA) data) {\n    this.customerId = data.customerId;\n    this.tableNumber = data.tableNumber;\n    this.orders = [];\n  }\n\n  /**\n   * Set-up method that gets called once when the object is instantiated.\n   * Calls displayOrders().\n   */\n  ngOnInit(): void {\n    this.displayOrders();\n  }\n\n  /**\n   * Displays the customer's orders.\n   * Makes a get request to the customer DB by subscribing to getCustomerById()\n   * that returns a Customer observable. Inside the subscription, it makes a get request to\n   * the orders db by subscribing to getOrders() that returns an Order[] observable. It \n   * subscribes to it and adds to this.orders all the orders corresponding to the customer.\n   */\n  displayOrders(): void {\n    this.customerService.getCustomerByID(this.customerId).subscribe((customer) => {\n      customer.orders.forEach((customerOrder) => {\n        this.orderService.getOrders().subscribe((orders) => {\n          orders.forEach((order) => {\n            if (order.id == customerOrder.id) {\n              this.orders.push(order);\n            }\n          })\n        })\n      })\n    })\n  }\n\n  /**\n   * Navigates to the payment page for that order by accesing an \n   * activated route with the order id.\n   * \n   * @param orderId the order id param used in the activated route\n   */\n  navigateToPayment(orderId: number): void {\n    this.router.navigate(['/payment'],\n      {\n        queryParams: {\n          tableNumber: this.tableNumber,\n          orderId: orderId,\n          customerId: this.customerId\n        }\n      });\n    this.dialogRef.close();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Orders\n    \n    \n  \n  \n    \n      \n        #\n        Status\n        Total\n        Confirmed\n        Paid\n      \n    \n    \n      \n        {{order.id}}\n        A waiter has to confirm the order\n        Order is being prepared\n        Order is ready\n        Order was delivered\n        {{order.total}}\n        {{order.isConfirmed}}\n        {{order.isPaid}}\n        \n          Pay\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./order-tracker.component.sass\n                \n                .title\n  font-size: 60px\n  font-family: 'Cedarville Cursive', cursive\n  color: #dbc028\n  height: 100px\n\n.orderStatusTitle\n  text-align: center\n  font-size: 30px\n  padding: 15px\n  font-family: 'Cedarville Cursive', cursive\n  color: #b9a239\n\n.noOrderBlock\n  display: flex\n  justify-content: center\n  font-family: 'Raleway', sans-serif\n\n.orderStatus\n  background-color: #388572\n  color: #b9a239\n  font-family: 'Raleway', sans-serif\n\n.tableHead\n  background-color: #388572\n  font-family: 'Reenie Beanie', cursive\n  font-size: 25px\n  color: #dbc028\n  font-weight: bold\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Orders                              #        Status        Total        Confirmed        Paid                            {{order.id}}        A waiter has to confirm the order        Order is being prepared        Order is ready        Order was delivered        {{order.total}}        {{order.isConfirmed}}        {{order.isPaid}}                  Pay                    '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrderTrackerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrdersListDisplayComponent.html":{"url":"components/OrdersListDisplayComponent.html","title":"component - OrdersListDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OrdersListDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/orders-list-display/orders-list-display.component.ts\n\n\n    \n        Description\n    \n    \n        Reusable component that displays a list of orders depending on the type of staff that views it.\nThe waiters are viewed tables that need confirmation and are prepared. Kitchen staff can only see\norders that need to be prepared. Managers see all orders.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-orders-list-display\n            \n\n            \n                styleUrls\n                ./orders-list-display.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./orders-list-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                ORDER_BUTTON_WIDTH\n                            \n                            \n                                orders\n                            \n                            \n                                paramsObject\n                            \n                            \n                                refreshTimer$\n                            \n                            \n                                resize$\n                            \n                            \n                                staffService\n                            \n                            \n                                subscription\n                            \n                            \n                                waiter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openOrderDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                createPermission\n                            \n                            \n                                isKitchenStaff\n                            \n                            \n                                isWaiter\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(orderService: OrderService, customerService: CustomerService, route: ActivatedRoute, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/orders-list-display/orders-list-display.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to perform crud operations for Orders\n\n                                                        \n                                                \n                                                \n                                                        customerService\n                                                  \n                                                        \n                                                                        CustomerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to perform crud for customers\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Activated route that routes to this page with staff parameters\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                To open/close dialogs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        createPermission\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/orders-list-display/orders-list-display.component.ts:40\n                            \n                        \n                \n                    \n                        If staff have permission to create orders\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isKitchenStaff\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/orders-list-display/orders-list-display.component.ts:44\n                            \n                        \n                \n                    \n                        If staff are kitchen staff\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isWaiter\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/orders-list-display/orders-list-display.component.ts:49\n                            \n                        \n                \n                    \n                        If staff are waiter staff\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDate\n                        \n                        \n                    \n                \n            \n            \n                \ngetDate(orderPlacedTime: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/orders-list-display/orders-list-display.component.ts:151\n                \n            \n\n\n            \n                \n                    Gets parsed date from order time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    orderPlacedTime\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/orders-list-display/orders-list-display.component.ts:159\n                \n            \n\n\n            \n                \n                    Unsubscribes to get request timer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/orders-list-display/orders-list-display.component.ts:101\n                \n            \n\n\n            \n                \n                    Gets orders and filters them based on type of staff. Resizes rows of buttons\ndepending on size of screen.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openOrderDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenOrderDialog(order: Order)\n                \n            \n\n\n            \n                \n                    Defined in src/app/orders-list-display/orders-list-display.component.ts:134\n                \n            \n\n\n            \n                \n                    Opens the order dialog to edit the order\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    order\n                                    \n                                                Order\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to open configurations of and change\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : Math.floor(window.innerWidth/this.ORDER_BUTTON_WIDTH)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/orders-list-display/orders-list-display.component.ts:95\n                            \n                        \n\n                \n                    \n                        Number of columns that the width should take up for each row\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/orders-list-display/orders-list-display.component.ts:35\n                            \n                        \n\n                \n                    \n                        To open/close dialogs\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ORDER_BUTTON_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in src/app/orders-list-display/orders-list-display.component.ts:90\n                            \n                        \n\n                \n                    \n                        Width static variable of the order button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/orders-list-display/orders-list-display.component.ts:69\n                            \n                        \n\n                \n                    \n                        Field to store orders\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paramsObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/orders-list-display/orders-list-display.component.ts:59\n                            \n                        \n\n                \n                    \n                        Helper object to hold route parameters by logged in staff\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshTimer$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : timer(0, 1000)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/orders-list-display/orders-list-display.component.ts:79\n                            \n                        \n\n                \n                    \n                        A refresh timer that ticks every second\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resize$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : fromEvent(window, 'resize')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/orders-list-display/orders-list-display.component.ts:85\n                            \n                        \n\n                \n                    \n                        An event listener that emits a new value every\ntime the window changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            staffService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StaffService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/orders-list-display/orders-list-display.component.ts:64\n                            \n                        \n\n                \n                    \n                        Staff service\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/orders-list-display/orders-list-display.component.ts:74\n                            \n                        \n\n                \n                    \n                        A subscription that uses the timer to get new data from the API\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            waiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Staff\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/orders-list-display/orders-list-display.component.ts:54\n                            \n                        \n\n                \n                    \n                        Field to hold staff object\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {OrderService} from \"../order.service\";\nimport {fromEvent, Subscription, timer} from \"rxjs\";\nimport {debounceTime, map} from \"rxjs/operators\";\nimport {Order} from \"../../models/Order\";\nimport {OrderComponent} from \"../waiter-menu/order/order.component\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {CustomerService} from \"../customer.service\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Staff } from '../../models/Staff';\nimport { StaffService } from '../staff.service';\n\n/**\n * Reusable component that displays a list of orders depending on the type of staff that views it.\n * The waiters are viewed tables that need confirmation and are prepared. Kitchen staff can only see\n * orders that need to be prepared. Managers see all orders.\n */\n@Component({\n  selector: 'app-orders-list-display',\n  templateUrl: './orders-list-display.component.html',\n  styleUrls: ['./orders-list-display.component.sass']\n})\nexport class OrdersListDisplayComponent implements OnInit, OnDestroy {\n\n  /**\n   *\n   * @param orderService to perform crud operations for Orders\n   * @param customerService to perform crud for customers\n   * @param route Activated route that routes to this page with staff parameters\n   * @param dialog To open/close dialogs\n   */\n  constructor(private orderService: OrderService,\n              private customerService: CustomerService,\n              private route: ActivatedRoute,\n              public dialog: MatDialog) { }\n\n  /**\n   * If staff have permission to create orders\n   */\n  @Input() createPermission: boolean;\n  /**\n   * If staff are kitchen staff\n   */\n  @Input() isKitchenStaff: boolean;\n\n  /**\n   * If staff are waiter staff\n   */\n  @Input() isWaiter: boolean;\n\n  /**\n   * Field to hold staff object\n   */\n  waiter: Staff;\n\n  /**\n   * Helper object to hold route parameters by logged in staff\n   */\n  paramsObject: any;\n\n  /**\n   * Staff service\n   */\n  staffService: StaffService;\n\n  /**\n   * Field to store orders\n   */\n  orders: Order[];\n\n  /**\n   * A subscription that uses the timer to get new data from the API\n   */\n  subscription: Subscription;\n\n  /**\n   * A refresh timer that ticks every second\n   */\n  refreshTimer$ = timer(0, 1000);\n\n  /**\n   * An event listener that emits a new value every\n   * time the window changes\n   */\n  resize$ = fromEvent(window, 'resize');\n\n  /**\n   * Width static variable of the order button\n   */\n  ORDER_BUTTON_WIDTH = 300;\n\n  /**\n   * Number of columns that the width should take up for each row\n   */\n  columns: number = Math.floor(window.innerWidth/this.ORDER_BUTTON_WIDTH);\n\n  /**\n   * Gets orders and filters them based on type of staff. Resizes rows of buttons\n   * depending on size of screen.\n   */\n  ngOnInit(): void {\n    this.subscription = this.refreshTimer$.subscribe(this.orderService.refresh$);\n    if (this.isKitchenStaff) {\n      this.orderService.orders$.pipe(\n        map((orders) => orders.filter((order) => order.isConfirmed)),\n        map((orders) => orders.filter((order) => !order.isReady))\n      )\n        .subscribe((orders) =>this.orders = orders);\n    } else if(this.isWaiter) {\n        this.orderService.orders$.pipe(\n          map((orders) => orders.filter((order) => order.waiterId == this.orderService.waiterId)),\n        ).subscribe((orders) =>this.orders = orders);\n    } else {\n      this.orderService.orders$.subscribe((orders) =>this.orders = orders);\n    }\n    this.resize$\n      .pipe(debounceTime(250))\n      .subscribe((w) => {\n        this.columns = Math.floor(window.innerWidth / this.ORDER_BUTTON_WIDTH\n        )});\n\n    this.route.queryParamMap.subscribe((params) => {\n      this.paramsObject = { ...params.keys, ...params };\n      this.staffService.getStaffById(this.paramsObject.params.staffId).subscribe((staff) => {\n        this.waiter = staff;\n      })\n    });\n  }\n\n  /**\n   * Opens the order dialog to edit the order\n   * @param order to open configurations of and change\n   */\n  openOrderDialog(order: Order): void {\n    const dialogRef = this.dialog.open(OrderComponent, {\n      data: {order: order, isKitchenStaff: this.isKitchenStaff},\n      width: '90%',\n      height: '90%'\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.orderService.getUpdatedOrders();\n      }\n    });\n  }\n\n  /**\n   * Gets parsed date from order time\n   * @param orderPlacedTime\n   */\n  getDate(orderPlacedTime: string): Date {\n    const date = new Date(Date.parse(orderPlacedTime));\n    return date;\n  }\n\n  /**\n   * Unsubscribes to get request timer\n   */\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        \n  \n    Orders\n    \n  \n\n\n  \n\n    \n      Order #{{order.id}}\n       order-confirmed | delivered\n       (paid)\n      Time Ordered: {{getDate(order.orderPlacedTime).getUTCHours()}}:{{getDate(order.orderPlacedTime).getMinutes()}}\n      \n    \n\n    \n\n      \n        Order #{{order.id}}\n        PREPARED ORDER HAS BEEN DELIVERED\n        AWAITING PAYMENT\n        \n         (not-paid)\n        Time Ordered:\n          {{getDate(order.orderPlacedTime).getUTCHours()}}:{{getDate(order.orderPlacedTime).getMinutes()}}\n      \n\n    \n\n    \n\n      \n        Order #{{order.id}}\n        ORDER IS READY FOR DELIVERY\n        \n         (not-paid)\n        Time Ordered:\n          {{getDate(order.orderPlacedTime).getUTCHours()}}:{{getDate(order.orderPlacedTime).getMinutes()}}\n      \n\n    \n\n    \n\n      \n        Order #{{order.id}}\n        ORDER IS BEING PREPARED\n        \n         (not-paid)\n        Time Ordered:\n          {{getDate(order.orderPlacedTime).getUTCHours()}}:{{getDate(order.orderPlacedTime).getMinutes()}}\n      \n\n    \n\n\n    \n\n      \n        Order #{{order.id}}\n        NEEDS CONFIRMATION\n        \n         (not-paid)\n        Time Ordered:\n          {{getDate(order.orderPlacedTime).getUTCHours()}}:{{getDate(order.orderPlacedTime).getMinutes()}}\n      \n\n    \n  \n\n  (paid)\n\n\n    \n\n    \n                \n                    ./orders-list-display.component.sass\n                \n                .deliveryImg\n  height: 50px\n  width: 50px\n\n.orderTitle\n  padding-top: 2%\n  width: 50px\n  height: 50px\n  background-color: #76cfb9\n  border-radius: 4em\n\nh2\n  text-align: center\n\n.orderBtn\n  height: 75%\n  width: 75%\n\n.deliveredPaidButton\n  color: white\n  background-color: green\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Orders                  Order #{{order.id}}       order-confirmed | delivered       (paid)      Time Ordered: {{getDate(order.orderPlacedTime).getUTCHours()}}:{{getDate(order.orderPlacedTime).getMinutes()}}                            Order #{{order.id}}        PREPARED ORDER HAS BEEN DELIVERED        AWAITING PAYMENT                 (not-paid)        Time Ordered:          {{getDate(order.orderPlacedTime).getUTCHours()}}:{{getDate(order.orderPlacedTime).getMinutes()}}                            Order #{{order.id}}        ORDER IS READY FOR DELIVERY                 (not-paid)        Time Ordered:          {{getDate(order.orderPlacedTime).getUTCHours()}}:{{getDate(order.orderPlacedTime).getMinutes()}}                            Order #{{order.id}}        ORDER IS BEING PREPARED                 (not-paid)        Time Ordered:          {{getDate(order.orderPlacedTime).getUTCHours()}}:{{getDate(order.orderPlacedTime).getMinutes()}}                            Order #{{order.id}}        NEEDS CONFIRMATION                 (not-paid)        Time Ordered:          {{getDate(order.orderPlacedTime).getUTCHours()}}:{{getDate(order.orderPlacedTime).getMinutes()}}              (paid)'\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrdersListDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaymentComponent.html":{"url":"components/PaymentComponent.html","title":"component - PaymentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaymentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/customer-interface/payment/payment.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { showError: true }\n}\n                \n            \n\n\n            \n                selector\n                payment-stepper\n            \n\n            \n                styleUrls\n                ./payment.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./payment.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                correctInputs\n                            \n                            \n                                interacted\n                            \n                            \n                                isConfirmed\n                            \n                            \n                                isPaid\n                            \n                            \n                                mealList\n                            \n                            \n                                needToReview\n                            \n                            \n                                paramsObject\n                            \n                            \n                                paymentGroup\n                            \n                            \n                                reviewOrderGroup\n                            \n                            \n                                wrongDetails\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkCardInput\n                            \n                            \n                                navigateToMenu\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                            \n                                orderReviewed\n                            \n                            \n                                pay\n                            \n                            \n                                updateMealList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, snackBar: MatSnackBar, _formBuilder: FormBuilder, customerService: CustomerService, orderService: OrderService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/customer-interface/payment/payment.component.ts:74\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\nSets the default value of the stepper params as false.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a router to route back to the customer menu\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a snack bar\n\n                                                        \n                                                \n                                                \n                                                        _formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the form builder for the card details\n\n                                                        \n                                                \n                                                \n                                                        customerService\n                                                  \n                                                        \n                                                                        CustomerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the customer service that handles get requests\n\n                                                        \n                                                \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the order service tha that is used to make get and post requests\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the activate route from the customer menu\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkCardInput\n                        \n                        \n                    \n                \n            \n            \n                \ncheckCardInput()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/payment/payment.component.ts:158\n                \n            \n\n\n            \n                \n                    Checks if the card input is correct. Checks if the card number and\nCVC code are of the right format and if the date provided is one from\nthe future and update the class vars accordingly.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateToMenu\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateToMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/payment/payment.component.ts:218\n                \n            \n\n\n            \n                \n                    Navigates back to the customer menu with an activated route\nwith the customer id and selectedTable params.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/payment/payment.component.ts:110\n                \n            \n\n\n            \n                \n                    Set-up method that gets called once when the class is instantiated.\nDefines the form builder for the review order and the form builder \nfor the payment group of the stepper.\nSubscribes to the activated route's params observable and instantiates the paramsObject.\nIt susbcribes to the customer service refresh needed Subject to handle incoming DB changes\nto the order (refreshes only it detects a change has been done to the DB) and calls updateMealList()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            openSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openSnackBar(message: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/payment/payment.component.ts:234\n                \n            \n\n\n            \n                \n                    Opens a snack bar that informs the user the order was paid.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the message of the snack bar\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the action of the snack bar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            orderReviewed\n                        \n                        \n                    \n                \n            \n            \n                \norderReviewed()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/payment/payment.component.ts:149\n                \n            \n\n\n            \n                \n                    Sets interacted to false.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pay\n                        \n                        \n                    \n                \n            \n            \n                \npay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/payment/payment.component.ts:195\n                \n            \n\n\n            \n                \n                    Pays for the order. \nIf the card input is corrct, it makes a get request to get the order from the DB, by \nsubscribing to getOrderById() that returns an Order observable. Inside the subscription,\nit makes a put reqest to update order isPaid to true by calling the order service\nupdateIsPaid method. It updates all the class vars accordingly.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateMealList\n                        \n                        \n                    \n                \n            \n            \n                \nupdateMealList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/payment/payment.component.ts:134\n                \n            \n\n\n            \n                \n                    Updates the meal list of the order.\nIt subscribes to getOrderById() that returns an Order Observable. Inside the \nsubscription, it updates the meal list and sets isPaid and isConfirmed to true.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            correctInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/payment/payment.component.ts:49\n                            \n                        \n\n                \n                    \n                        Var that asserts if the inputs are correct.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interacted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/payment/payment.component.ts:44\n                            \n                        \n\n                \n                    \n                        Defines the stepper peoperty interacted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isConfirmed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/payment/payment.component.ts:69\n                            \n                        \n\n                \n                    \n                        Var that asserts if the order is confirmed or not.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPaid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/payment/payment.component.ts:64\n                            \n                        \n\n                \n                    \n                        Var that asserts if the order is paid or not.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mealList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Meal[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/payment/payment.component.ts:39\n                            \n                        \n\n                \n                    \n                        The meal list of the order.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            needToReview\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/payment/payment.component.ts:54\n                            \n                        \n\n                \n                    \n                        Var that asserts if the user needs to review his order.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paramsObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/payment/payment.component.ts:74\n                            \n                        \n\n                \n                    \n                        The activated route params object.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paymentGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/payment/payment.component.ts:34\n                            \n                        \n\n                \n                    \n                        The paymentGroup inside the stepper.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reviewOrderGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/payment/payment.component.ts:29\n                            \n                        \n\n                \n                    \n                        The reviewOrder group inside the stepper.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wrongDetails\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/payment/payment.component.ts:59\n                            \n                        \n\n                \n                    \n                        Var that asserts if the card details are wrong.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormControlName, FormGroup, Validators } from '@angular/forms';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { formatDate } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Meal } from '../../../models/Meal';\nimport { CustomerService } from '../../customer.service';\nimport { OrderService } from '../../order.service';\n\n@Component({\n  selector: 'payment-stepper',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.sass'],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: { showError: true }\n  }]\n})\n\n/**\n * The class that handles the payment of an order.\n */\nexport class PaymentComponent implements OnInit {\n\n  /**\n   * The reviewOrder group inside the stepper.\n   */\n  reviewOrderGroup: FormGroup;\n  \n  /**\n   * The paymentGroup inside the stepper.\n   */\n  paymentGroup: FormGroup;\n\n  /**\n   * The meal list of the order.\n   */\n  mealList: Meal[];\n\n  /**\n   * Defines the stepper peoperty interacted.\n   */\n  interacted: Boolean;\n\n  /**\n   * Var that asserts if the inputs are correct.\n   */\n  correctInputs: Boolean;\n\n  /**\n   * Var that asserts if the user needs to review his order.\n   */\n  needToReview: Boolean;\n\n  /**\n   * Var that asserts if the card details are wrong.\n   */\n  wrongDetails: Boolean;\n\n  /**\n   * Var that asserts if the order is paid or not.\n   */\n  isPaid: Boolean;\n\n  /**\n   * Var that asserts if the order is confirmed or not.\n   */\n  isConfirmed: Boolean;\n  \n  /**\n   * The activated route params object.\n   */\n  paramsObject: any;\n\n  /**\n   * The constructor of the class.\n   * Sets the default value of the stepper params as false.\n   * \n   * @param router a router to route back to the customer menu\n   * @param snackBar a snack bar\n   * @param _formBuilder the form builder for the card details\n   * @param customerService the customer service that handles get requests\n   * @param orderService the order service tha that is used to make get and post requests\n   * @param route the activate route from the customer menu\n   */\n  constructor(\n    private router: Router,\n    private snackBar: MatSnackBar,\n    private _formBuilder: FormBuilder,\n    private customerService: CustomerService,\n    private orderService: OrderService,\n    private route: ActivatedRoute,) { \n      this.interacted = false;\n      this.correctInputs = false;\n      this.needToReview = false;\n      this.wrongDetails = false;\n      this.isPaid = false;\n      this.isConfirmed = false;\n    }\n\n  /**\n   * Set-up method that gets called once when the class is instantiated.\n   * Defines the form builder for the review order and the form builder \n   * for the payment group of the stepper.\n   * Subscribes to the activated route's params observable and instantiates the paramsObject.\n   * It susbcribes to the customer service refresh needed Subject to handle incoming DB changes\n   * to the order (refreshes only it detects a change has been done to the DB) and calls updateMealList()\n   */\n  ngOnInit(): void {\n    this.reviewOrderGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.paymentGroup = this._formBuilder.group({\n      cardNumberControl: ['', Validators.required],\n      expDateControl: ['', Validators.required],\n      cvvCodeControl: ['', Validators.required]\n    });\n\n    this.route.queryParamMap.subscribe((params) => {\n      this.paramsObject = { ...params.keys, ...params };\n    });\n    this.customerService.refreshNeeded.subscribe(() => {\n      this.updateMealList();\n    })\n    this.updateMealList();\n  }\n\n  /**\n   * Updates the meal list of the order.\n   * It subscribes to getOrderById() that returns an Order Observable. Inside the \n   * subscription, it updates the meal list and sets isPaid and isConfirmed to true.\n   */\n  updateMealList(): void {\n    this.orderService.getOrderById(this.paramsObject.params.orderId).subscribe((order) => {\n      if (order.isPaid == true) {\n        this.isPaid = true;\n      }\n      if (order.isConfirmed == true) {\n        this.isConfirmed = true;\n      }\n      this.mealList = order.meal;\n    })\n  }\n\n  /**\n   * Sets interacted to false.\n   */\n  orderReviewed(): void {\n    this.interacted = false;\n  }\n\n  /**\n   * Checks if the card input is correct. Checks if the card number and\n   * CVC code are of the right format and if the date provided is one from\n   * the future and update the class vars accordingly.\n   */\n  checkCardInput(): void {\n    if (this.paymentGroup.get('cardNumberControl').value.length == 19) {\n      if (this.paymentGroup.get('expDateControl').value.length == 5\n        || this.paymentGroup.get('expDateControl').value.length == 7) {\n        let trueDate = formatDate(new Date(), 'yyyy/MM/dd', 'en');\n        let trueDateString = trueDate.split(\"/\", 2);\n        let date = this.paymentGroup.get('expDateControl').value.split(\"/\", 2);\n        let temp = trueDate.split(\"\");\n        let century = temp[0] + temp[1]\n        if (date[1].length == 2) {\n          date[1] = century + date[1];\n        }\n        if ((parseInt(date[0])  parseInt(trueDateString[0]))\n          || (parseInt(date[0])  parseInt(trueDateString[1]) - 1 && parseInt(date[1]) == parseInt(trueDateString[0]))) {\n          if (this.paymentGroup.get('cvvCodeControl').value.length == 3) {\n            this.correctInputs = false;\n          } else {\n            this.correctInputs = true;\n          }\n        } else {\n          this.correctInputs = true;\n        }\n      } else {\n        this.correctInputs = true;\n      }\n    } else {\n      this.correctInputs = true;\n    }\n  }\n\n  /**\n   * Pays for the order. \n   * If the card input is corrct, it makes a get request to get the order from the DB, by \n   * subscribing to getOrderById() that returns an Order observable. Inside the subscription,\n   * it makes a put reqest to update order isPaid to true by calling the order service\n   * updateIsPaid method. It updates all the class vars accordingly.\n   */\n  pay(): void {\n    if (!this.interacted) {\n      this.needToReview = false;\n      if (!this.correctInputs) {\n        this.wrongDetails = false;\n        this.orderService.getOrderById(this.paramsObject.params.orderId).subscribe((order) => {\n          order.isPaid = true;\n          this.orderService.updateIsPaid(order);\n        })\n      } else {\n        this.wrongDetails = true;\n      }\n    } else {\n      this.needToReview = true;\n    }\n    this.isPaid = true;\n    this.openSnackBar(\"Your payment is confirmed\", \"Muchas Gracias!\")\n  }\n\n  /**\n   * Navigates back to the customer menu with an activated route\n   * with the customer id and selectedTable params.\n   */\n  navigateToMenu(): void {\n    this.router.navigate(['/customer-menu'],\n      {\n        queryParams: {\n          customerId: this.paramsObject.params.customerId,\n          selectedTable: this.paramsObject.params.tableNumber\n        }\n      });\n  }\n\n  /**\n   * Opens a snack bar that informs the user the order was paid.\n   * \n   * @param message the message of the snack bar\n   * @param action the action of the snack bar\n   */\n  private openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n    });\n  }\n}\n\n    \n\n    \n        Payment\n\n    \n        \n            Review your Order\n            \n                \n                    \n                        \n                            Order Items\n                        \n                        \n                            Click to review contents of your order.\n                        \n                    \n                    \n                        \n                            \n                                {{meal.menu.name}}\n                                ({{meal.menu.price * meal.numberSelections}}$)\n                                x {{meal.numberSelections}}\n                            \n                        \n                    \n                \n            \n            \n            \n                Next\n            \n        \n    \n    \n        \n            Insert Your Card Details\n            \n                Card Number\n                \n            \n            \n                Expiration Date\n                \n            \n            \n                CVV Code\n                \n            \n            \n                Pay\n            \n            \n                \n                    You have already paid!\n                \n            \n            \n                \n                    The Card Details are Wrong!\n                \n            \n            \n                \n                    Your Order has not been confirmed yet!\n                \n            \n            \n            \n                Back&nbsp;&nbsp;\n                Next\n            \n        \n    \n    \n        Done\n        \n            Payment Confirmed!\n            Go back to Menu\n        \n        \n            \n                Please do all the steps first!\n                Cancel\n            \n        \n        Back\n    \n\n    \n\n    \n                \n                    ./payment.component.sass\n                \n                .mat-form-field\n  margin-top: 16px\n\n.paymentTitle\n  display: block\n  font-family: 'Cedarville Cursive', cursive\n  font-size: 40px\n  margin: auto\n  color: #b9a239\n  padding: 10px\n\n.orderReview\n  display: block\n  font-family: 'Cedarville Cursive', cursive\n  font-size: 25px\n  margin: auto\n  color: #b9a239\n  padding: 10px\n\n.paymentStepper\n  font-family: 'Raleway', sans-serif\n  font-size: 15px\n\n.orderReviewBlock\n  display: block\n  font-family: 'Raleway', sans-serif\n\n.wrongDetailsBlock\n  display: block\n  font-family: 'Raleway', sans-serif\n\n.isPaidBlock\n  display: block\n  font-family: 'Raleway', sans-serif\n\n.notConfirmedBlock\n  display: block\n  font-family: 'Raleway', sans-serif\n\n.doneBlock\n  display: block\n  font-family: 'Raleway', sans-serif\n\n.notPaidBlock\n  display: block\n  font-family: 'Raleway', sans-serif\n\n#yesOption\n  width: 100%\n\n.inner\n  display: inline-block\n\nbutton\n  font-family: 'Raleway', sans-serif\n  background-color: #388572\n  color: #e9c46a\n  font-size: 20px\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Payment                        Review your Order                                                                                                    Order Items                                                                            Click to review contents of your order.                                                                                                                                                    {{meal.menu.name}}                                ({{meal.menu.price * meal.numberSelections}}$)                                x {{meal.numberSelections}}                                                                                                                                            Next                                                Insert Your Card Details                            Card Number                                                        Expiration Date                                                        CVV Code                                                        Pay                                                            You have already paid!                                                                            The Card Details are Wrong!                                                                            Your Order has not been confirmed yet!                                                                    Back                  Next                                    Done                    Payment Confirmed!            Go back to Menu                                            Please do all the steps first!                Cancel                            Back    '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaymentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PickTableDialogComponent.html":{"url":"components/PickTableDialogComponent.html","title":"component - PickTableDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PickTableDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/waiter-menu/pick-table-dialog/pick-table-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Dialog component for staff picking a table\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pick-table-dialog\n            \n\n            \n                styleUrls\n                ./pick-table-dialog.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./pick-table-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                selectedTable\n                            \n                            \n                                tables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, tableService: TableService)\n                    \n                \n                        \n                            \n                                Defined in src/app/waiter-menu/pick-table-dialog/pick-table-dialog.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tableService\n                                                  \n                                                        \n                                                                        TableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/pick-table-dialog/pick-table-dialog.component.ts:33\n                \n            \n\n\n            \n                \n                    Gets all unoccupied tables for user to pick from\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/pick-table-dialog/pick-table-dialog.component.ts:42\n                \n            \n\n\n            \n                \n                    Closes dialog and returns selected table to parent component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/pick-table-dialog/pick-table-dialog.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/pick-table-dialog/pick-table-dialog.component.ts:24\n                            \n                        \n\n                \n                    \n                        The selected table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/pick-table-dialog/pick-table-dialog.component.ts:19\n                            \n                        \n\n                \n                    \n                        A list of all tables\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {MatDialogRef} from \"@angular/material/dialog\";\nimport {Table} from \"../../../models/Table\";\nimport {TableService} from \"../../table.service\";\n\n/**\n * Dialog component for staff picking a table\n */\n@Component({\n  selector: 'app-pick-table-dialog',\n  templateUrl: './pick-table-dialog.component.html',\n  styleUrls: ['./pick-table-dialog.component.sass']\n})\nexport class PickTableDialogComponent implements OnInit {\n\n  /**\n   * A list of all tables\n   */\n  tables: Table[];\n\n  /**\n   * The selected table\n   */\n  selectedTable: Table;\n\n  constructor(public dialogRef: MatDialogRef,\n              private tableService: TableService) {\n  }\n\n  /**\n   * Gets all unoccupied tables for user to pick from\n   */\n  ngOnInit(): void {\n    this.tableService.getUnoccupiedTables().subscribe(tables => {\n      this.tables = tables;\n    });\n  }\n\n  /**\n   * Closes dialog and returns selected table to parent component\n   */\n  onSelect(): void {\n    this.dialogRef.close(this.selectedTable);\n  }\n\n}\n\n    \n\n    \n        \n  Select your Table\n  \n  \n    Available tables\n    \n      Table {{table.tableNumber}}\n    \n  \n\n\n  Submit\n\nSelect a Table!\n\n\n\n    \n\n    \n                \n                    ./pick-table-dialog.component.sass\n                \n                #dialogTitle\n  font-size: 40px\n  font-weight: bold\n  text-align: centre\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Select your Table        Available tables          Table {{table.tableNumber}}        SubmitSelect a Table!'\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PickTableDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReadyToOrderComponent.html":{"url":"components/ReadyToOrderComponent.html","title":"component - ReadyToOrderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReadyToOrderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/customer-interface/ready-to-order/ready-to-order.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ready-to-order\n            \n\n            \n                styleUrls\n                ./ready-to-order.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./ready-to-order.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ready\n                            \n                            \n                                tableNumber\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                getReadyToOrder\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                            \n                                readyToOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(customerInterface: CustomerInterfaceComponent, tableService: TableService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/customer-interface/ready-to-order/ready-to-order.component.ts:26\n                            \n                        \n\n                \n                    \n                            The construcotr of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        customerInterface\n                                                  \n                                                        \n                                                                        CustomerInterfaceComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a customer interface instance\n\n                                                        \n                                                \n                                                \n                                                        tableService\n                                                  \n                                                        \n                                                                        TableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the table service that is used to make get and put requests.\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a snack bar\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/ready-to-order/ready-to-order.component.ts:84\n                \n            \n\n\n            \n                \n                    Updates the table as not ready to order.\nIt makes a get request to the Table DB to get the table, \nsubscribing to getTableByNumber() that retuns a Table Observable.\nInside the subscription, it makes a put request to the Table DB to \nupdate table.isReady to false by calling updateTable()\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReadyToOrder\n                        \n                        \n                    \n                \n            \n            \n                \ngetReadyToOrder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/ready-to-order/ready-to-order.component.ts:55\n                \n            \n\n\n            \n                \n                    Sets ready to order with the value from the db.\nIt makes a get request to the Table DB to get the table, \nsubscribing to getTableByNumber() that returns a Table Observable.\nInside the subscription, it sets table.ready.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/ready-to-order/ready-to-order.component.ts:44\n                \n            \n\n\n            \n                \n                    Set-up method that is gets called once when the class is instantiated.\nIt sets tableNumber and calls getReadyToOrder() to updated the order status.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            openSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openSnackBar(message: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/ready-to-order/ready-to-order.component.ts:99\n                \n            \n\n\n            \n                \n                    Opens a snack bar that informs the table is marked as ready to order\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the snack bar message\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the action of the snackbar\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            readyToOrder\n                        \n                        \n                    \n                \n            \n            \n                \nreadyToOrder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/customer-interface/ready-to-order/ready-to-order.component.ts:68\n                \n            \n\n\n            \n                \n                    Updates the table as ready to order.\nIt makes a get request to the Table DB to get the table, \nsubscribing to getTableByNumber() that retuns a Table Observable.\nInside the subscription, it makes a put request to the Table DB to \nupdate table.isReady to true by calling updateTable().\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/ready-to-order/ready-to-order.component.ts:21\n                            \n                        \n\n                \n                    \n                        Indicates if the table is ready to order or not.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/customer-interface/ready-to-order/ready-to-order.component.ts:26\n                            \n                        \n\n                \n                    \n                        The table number that is used to make get requests.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { TableService } from '../../table.service';\nimport { CustomerInterfaceComponent } from '../customer-interface.component';\n\n@Component({\n  selector: 'ready-to-order',\n  templateUrl: './ready-to-order.component.html',\n  styleUrls: ['./ready-to-order.component.sass']\n})\n\n/**\n * The class that handles the ready to order action.\n */\nexport class ReadyToOrderComponent implements OnInit {\n\n  /**\n   * Indicates if the table is ready to order or not.\n   */\n  ready: boolean;\n\n  /**\n   * The table number that is used to make get requests.\n   */\n  tableNumber: number;\n\n  /**\n   * The construcotr of the class.\n   * \n   * @param customerInterface a customer interface instance\n   * @param tableService the table service that is used to make get and put requests.\n   * @param snackBar a snack bar\n   */\n  constructor(\n    private customerInterface: CustomerInterfaceComponent,\n    private tableService: TableService,\n    private snackBar: MatSnackBar) { }\n\n  /**\n   * Set-up method that is gets called once when the class is instantiated.\n   * It sets tableNumber and calls getReadyToOrder() to updated the order status.\n   */\n  ngOnInit(): void {\n    this.tableNumber = this.customerInterface.paramsObject.params.selectedTable;\n    this.getReadyToOrder();\n  }\n\n  /**\n   * Sets ready to order with the value from the db.\n   * It makes a get request to the Table DB to get the table, \n   * subscribing to getTableByNumber() that returns a Table Observable.\n   * Inside the subscription, it sets table.ready.\n   */\n  getReadyToOrder(): void {\n    this.tableService.getTableByNumber(this.tableNumber).subscribe((table) => {\n      this.ready = table.isReady;\n    })\n  }\n\n  /**\n   * Updates the table as ready to order.\n   * It makes a get request to the Table DB to get the table, \n   * subscribing to getTableByNumber() that retuns a Table Observable.\n   * Inside the subscription, it makes a put request to the Table DB to \n   * update table.isReady to true by calling updateTable().\n   */\n  readyToOrder(): void {\n    this.tableService.getTableByNumber(this.tableNumber).subscribe((table) => {\n      table.isReady = true;\n      this.tableService.updateTable(table);\n    })\n    this.ready = true;\n    this.openSnackBar(\"A waiter will come to take your order\", \"Please Wait\")\n  }\n\n  /**\n   * Updates the table as not ready to order.\n   * It makes a get request to the Table DB to get the table, \n   * subscribing to getTableByNumber() that retuns a Table Observable.\n   * Inside the subscription, it makes a put request to the Table DB to \n   * update table.isReady to false by calling updateTable()\n   */\n  cancel(): void {\n    this.tableService.getTableByNumber(this.tableNumber).subscribe((table) => {\n      table.isReady = false;\n      this.tableService.updateTable(table);\n    })\n    this.ready = false;\n    this.openSnackBar(\"You canceled the waiter call\", \"Still need help?\");\n  }\n\n  /**\n   * Opens a snack bar that informs the table is marked as ready to order\n   * \n   * @param message the snack bar message\n   * @param action the action of the snackbar\n   */\n  private openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n      panelClass: ['orderSnackBar']\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n         restaurant_menu\n    \n    \n        \n            cancel\n        \n    \n\n    \n\n    \n                \n                    ./ready-to-order.component.sass\n                \n                button\n  line-height: 1px\n  font-size: 20px\n\n.callWaiterButton\n  text-align: center\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             restaurant_menu                            cancel            '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReadyToOrderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SalesDialogComponent.html":{"url":"components/SalesDialogComponent.html","title":"component - SalesDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SalesDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manager-menu/add-staff/sales-dialog/sales-dialog.component.ts\n\n\n    \n        Description\n    \n    \n        Dialog that shows sales information for a staff member\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sales-dialog\n            \n\n            \n                styleUrls\n                ./sales-dialog.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./sales-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: Staff)\n                    \n                \n                        \n                            \n                                Defined in src/app/manager-menu/add-staff/sales-dialog/sales-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to close dialog\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Staff\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/manager-menu/add-staff/sales-dialog/sales-dialog.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Staff\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff/sales-dialog/sales-dialog.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/manager-menu/add-staff/sales-dialog/sales-dialog.component.ts:20\n                            \n                        \n\n                \n                    \n                        to close dialog\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {Staff} from \"../../../../models/Staff\";\n\n/**\n * Dialog that shows sales information for a staff member\n */\n@Component({\n  selector: 'app-sales-dialog',\n  templateUrl: './sales-dialog.component.html',\n  styleUrls: ['./sales-dialog.component.sass']\n})\nexport class SalesDialogComponent implements OnInit {\n\n  /**\n   *\n   * @param dialogRef to close dialog\n   * @param staff data injected from parent component\n   */\n  constructor(public dialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: Staff\n              ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n    Sales\n    Orders Delivered\n  \n  \n  \n  \n    {{data.salesPrice}}\n    {{data.orderDelivered}}\n  \n  \n\n\n    \n\n    \n                \n                    ./sales-dialog.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Sales    Orders Delivered            {{data.salesPrice}}    {{data.orderDelivered}}    '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SalesDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectTableDialogComponent.html":{"url":"components/SelectTableDialogComponent.html","title":"component - SelectTableDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectTableDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home-page/select-table-dialog/select-table-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                select-table-dialog\n            \n\n            \n                styleUrls\n                ./select-table-dialog.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./select-table-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                customer\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                orders\n                            \n                            \n                                selectedTable\n                            \n                            \n                                tables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewCustomer\n                            \n                            \n                                forCustomer\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, tableService: TableService, customerService: CustomerService, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/home-page/select-table-dialog/select-table-dialog.component.ts:39\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the router that is used for the activated route to the customer menu\n\n                                                        \n                                                \n                                                \n                                                        tableService\n                                                  \n                                                        \n                                                                        TableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the table service that is used to make get requests.\n\n                                                        \n                                                \n                                                \n                                                        customerService\n                                                  \n                                                        \n                                                                        CustomerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the customer service that is used to make get requests\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a dialog ref\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewCustomer\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewCustomer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home-page/select-table-dialog/select-table-dialog.component.ts:68\n                \n            \n\n\n            \n                \n                    Creates a new Customer with the selected table.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forCustomer\n                        \n                        \n                    \n                \n            \n            \n                \nforCustomer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home-page/select-table-dialog/select-table-dialog.component.ts:80\n                \n            \n\n\n            \n                \n                    Routes to the customer menu.\nWith the selected table, the system creates a new Customer and assings the \ntable to a waiter a routes to the customer menu using an activated route with\nquery params: customerId and selected table.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home-page/select-table-dialog/select-table-dialog.component.ts:59\n                \n            \n\n\n            \n                \n                    A set up method that is called once when the class gets instantiated.\nIt makes a get request to the Table DB to set the table list.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Customer\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/select-table-dialog/select-table-dialog.component.ts:34\n                            \n                        \n\n                \n                    \n                        The Customer object.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/select-table-dialog/select-table-dialog.component.ts:53\n                            \n                        \n\n                \n                    \n                        a dialog ref\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Order[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/select-table-dialog/select-table-dialog.component.ts:39\n                            \n                        \n\n                \n                    \n                        The customer orders.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/select-table-dialog/select-table-dialog.component.ts:29\n                            \n                        \n\n                \n                    \n                        The selected table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/home-page/select-table-dialog/select-table-dialog.component.ts:24\n                            \n                        \n\n                \n                    \n                        The list of available tables.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Customer } from '../../../models/Customer';\nimport { Order } from '../../../models/Order';\nimport { Table } from '../../../models/Table';\nimport { CustomerService } from '../../customer.service';\nimport { TableService } from '../../table.service';\n\n@Component({\n  selector: 'select-table-dialog',\n  templateUrl: './select-table-dialog.component.html',\n  styleUrls: ['./select-table-dialog.component.sass']\n})\n\n/**\n * The class that handles the select table dialog at the customer login.\n */\nexport class SelectTableDialogComponent implements OnInit {\n\n  /**\n   * The list of available tables.\n   */\n  tables: Table[] = [];\n\n  /**\n   * The selected table.\n   */\n  selectedTable: Table = null;\n\n  /**\n   * The Customer object.\n   */\n  customer: Customer;\n\n  /**\n   * The customer orders.\n   */\n  orders: Order[] = [];\n\n  /**\n   * The constructor of the class.\n   * \n   * @param router the router that is used for the activated route to the customer menu\n   * @param tableService the table service that is used to make get requests.\n   * @param customerService the customer service that is used to make get requests\n   * @param dialogRef  a dialog ref\n   */\n  constructor(\n    private router: Router,\n    private tableService: TableService,\n    private customerService: CustomerService,\n    public dialogRef: MatDialogRef) { }\n\n  /**\n   * A set up method that is called once when the class gets instantiated.\n   * It makes a get request to the Table DB to set the table list.\n   */\n  ngOnInit(): void {\n    this.tableService.getUnoccupiedTables().subscribe(tables => {\n      this.tables = tables;\n    });\n  }\n\n  /**\n   * Creates a new Customer with the selected table.\n   */\n  createNewCustomer(): void {\n    this.customer = new Customer();\n    this.customer.table = this.selectedTable;\n    this.customer.orders = this.orders;\n  }\n\n  /**\n   * Routes to the customer menu.\n   * With the selected table, the system creates a new Customer and assings the \n   * table to a waiter a routes to the customer menu using an activated route with\n   * query params: customerId and selected table.\n   */\n  forCustomer(): void {\n    if (this.selectedTable != null) {\n      this.createNewCustomer();\n      this.tableService.assignTable(this.selectedTable).subscribe((obj) => {\n        this.customerService.createCustomer(this.customer).subscribe((newCustomer) => {\n          this.router.navigate(['/customer-menu'],\n            { queryParams: { customerID: newCustomer.id, selectedTable: this.selectedTable.tableNumber } });\n        });\n      });\n    }\n    this.dialogRef.close();\n  }\n\n}\n\n    \n\n    \n        \n    Select Your Table\n    \n    \n        Available tables\n        \n            Table {{table.tableNumber}}\n            \n        \n    \n\n\n    \n        Submit\n    \n    \n        Select a table\n    \n\n    \n\n    \n                \n                    ./select-table-dialog.component.sass\n                \n                #dialogTitle\n  font-family: 'Raleway', cursive\n  font-size: 50px\n  color: #e9c46a\n  text-align: centre\n\nmat-form-field.mat-form-field\n  background-color: white\n\n.tableSelection\n  display: flex\n  justify-content: center\n  align-items: center\n  flex-direction: column\n\n.label\n  font-family: 'Raleway', cursive\n  color: black\n\n.option\n  background-color: white\n  font-family: 'Raleway', cursive\n  color: black\n\n.buttons\n  display: flex\n  justify-content: center\n  align-items: center\n  flex-direction: column\n\nbutton\n  font-family: 'Raleway', cursive\n  border-radius: 5em\n  font-size: 20px\n  color: #e9c46a\n  background-color: #388572\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Select Your Table                Available tables                    Table {{table.tableNumber}}                                    Submit                Select a table    '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectTableDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Staff.html":{"url":"classes/Staff.html","title":"class - Staff","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Staff\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Staff.ts\n        \n\n            \n                Description\n            \n            \n                Staff object with id, email, username, password, isWaiter, sales prices and boolean to\ncheck if they have delivered their outstanding orders that they are waiting.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                manager\n                            \n                            \n                                orderDelivered\n                            \n                            \n                                password\n                            \n                            \n                                salesPrice\n                            \n                            \n                                userName\n                            \n                            \n                                waiter\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Staff.ts:15\n                            \n                        \n\n                \n                    \n                        Staff email address\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Staff.ts:10\n                            \n                        \n\n                \n                    \n                        Id of staff\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Staff.ts:35\n                            \n                        \n\n                \n                    \n                        Whether staff is manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orderDelivered\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Staff.ts:45\n                            \n                        \n\n                \n                    \n                        Number of orders delivered\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Staff.ts:25\n                            \n                        \n\n                \n                    \n                        Staff password\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            salesPrice\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Staff.ts:40\n                            \n                        \n\n                \n                    \n                        Price of sales made by staff\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Staff.ts:20\n                            \n                        \n\n                \n                    \n                        Staff user name\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            waiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Staff.ts:30\n                            \n                        \n\n                \n                    \n                        Whether staff is waiter\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Staff{\n\n  /**\n   * Id of staff\n   */\n  id: number;\n\n  /**\n   * Staff email address\n   */\n  email: string;\n\n  /**\n   * Staff user name\n   */\n  userName: string;\n\n  /**\n   * Staff password\n   */\n  password: string;\n\n  /**\n   * Whether staff is waiter\n   */\n  waiter: boolean;\n\n  /**\n   * Whether staff is manager\n   */\n  manager: boolean;\n\n  /**\n   * Price of sales made by staff\n   */\n  salesPrice: number;\n\n  /**\n   * Number of orders delivered\n   */\n  orderDelivered: number\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StaffService.html":{"url":"injectables/StaffService.html","title":"injectable - StaffService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StaffService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/staff.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for create, read, update and delete staff in the Restaurant API\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                edit\n                            \n                            \n                                refresh$\n                            \n                            \n                                restaurantWebApiUrl\n                            \n                            \n                                staff$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createStaff\n                            \n                            \n                                    Public\n                                deleteStaff\n                            \n                            \n                                    Public\n                                getRandomWaiter\n                            \n                            \n                                    Public\n                                getSales\n                            \n                            \n                                    Public\n                                getStaffById\n                            \n                            \n                                    Public\n                                getStaffByUsernameAndPassword\n                            \n                            \n                                    Public\n                                getStaffs\n                            \n                            \n                                updateStaff\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/staff.service.ts:20\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the http client that is used to make requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createStaff\n                        \n                        \n                    \n                \n            \n            \n                \ncreateStaff(staff: Staff)\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff.service.ts:73\n                \n            \n\n\n            \n                \n                    Create new staff by post request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    staff\n                                    \n                                                Staff\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to create\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteStaff\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteStaff(staff: Staff)\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    staff\n                                    \n                                                Staff\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRandomWaiter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRandomWaiter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff.service.ts:88\n                \n            \n\n\n            \n                \n                    Get's random waiter from all waiter staff\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSales\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSales(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff.service.ts:65\n                \n            \n\n\n            \n                \n                    Get sales of staff\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of staff\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStaffById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStaffById(staffId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff.service.ts:57\n                \n            \n\n\n            \n                \n                    Get staff by id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    staffId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of staff\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStaffByUsernameAndPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStaffByUsernameAndPassword(username: String, password: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStaffs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStaffs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff.service.ts:49\n                \n            \n\n\n            \n                \n                    Get all staff\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateStaff\n                        \n                        \n                    \n                \n            \n            \n                \nupdateStaff(staff: Staff)\n                \n            \n\n\n            \n                \n                    Defined in src/app/staff.service.ts:81\n                \n            \n\n\n            \n                \n                    Update an existing staff member\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    staff\n                                    \n                                                Staff\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            edit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/staff.service.ts:20\n                            \n                        \n\n                \n                    \n                        References if the manager accessed add staff dialog or edit staff dialog.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refresh$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/staff.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            restaurantWebApiUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8080/api/v1/staff'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/staff.service.ts:33\n                            \n                        \n\n                \n                    \n                        URL for staff in Api\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            staff$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.refresh$.pipe(\n    exhaustMap(() => this.getStaffs()),\n    share()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/staff.service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {BehaviorSubject, Observable, of, Subject} from 'rxjs';\nimport {Staff} from '../models/Staff';\nimport { selectedCategory } from '../models/selectedCategory';\nimport {exhaustMap, map, repeat, share, tap} from \"rxjs/operators\";\nimport { Order } from '../models/Order';\n\n/**\n * Service for create, read, update and delete staff in the Restaurant API\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StaffService {\n\n  /**\n   * References if the manager accessed add staff dialog or edit staff dialog.\n   */\n  edit: boolean;\n\n  /**\n   * The constructor of the class.\n   * \n   * @param httpClient the http client that is used to make requests\n   */\n  constructor(private httpClient: HttpClient) {\n  }\n\n  /**\n   * URL for staff in Api\n   */\n  restaurantWebApiUrl = 'http://localhost:8080/api/v1/staff';\n\n  refresh$ = new BehaviorSubject(null);\n\n  staff$ = this.refresh$.pipe(\n    exhaustMap(() => this.getStaffs()),\n    share()\n  );\n\n  public getStaffByUsernameAndPassword(username: String, password: String): Observable {\n    return this.httpClient.get(this.restaurantWebApiUrl + `/${username}/${password}`);\n  }\n\n  /**\n   * Get all staff\n   */\n  public getStaffs(): Observable {\n    return this.httpClient.get(this.restaurantWebApiUrl);\n  }\n\n  /**\n   * Get staff by id\n   * @param staffId id of staff\n   */\n  public getStaffById(staffId: number): Observable {\n     return this.httpClient.get(`${this.restaurantWebApiUrl}/${staffId}`);\n  }\n\n  /**\n   * Get sales of staff\n   * @param id of staff\n   */\n  public getSales(id: number): Observable {\n    return this.httpClient.get(this.restaurantWebApiUrl + '/getSales/'+id);\n  }\n\n  /**\n   * Create new staff by post request\n   * @param staff to create\n   */\n  createStaff(staff: Staff): Observable {\n    return this.httpClient.post(this.restaurantWebApiUrl, staff);\n  }\n\n  /**\n   * Update an existing staff member\n   * @param staff to update\n   */\n  updateStaff(staff: Staff): Observable {\n    return this.httpClient.put(this.restaurantWebApiUrl + '/'+staff.id, staff);\n  }\n\n  /**\n   * Get's random waiter from all waiter staff\n   */\n  public getRandomWaiter(): Observable {\n    return this.httpClient.get(this.restaurantWebApiUrl + '/randomwaiter')\n  }\n\n  public deleteStaff(staff: Staff): void{\n    this.httpClient.delete(`${this.restaurantWebApiUrl}/${staff.id}`).subscribe()\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/Table.ts\n        \n\n            \n                Description\n            \n            \n                Table object with information of customer and if customer needs help, is ready to order\nor if the table is occupied.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                customer\n                            \n                            \n                                isOccupied\n                            \n                            \n                                isReady\n                            \n                            \n                                needsHelp\n                            \n                            \n                                tableNumber\n                            \n                            \n                                waiterId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            customer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Customer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Table.ts:33\n                            \n                        \n\n                \n                    \n                        Customers at this table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOccupied\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Table.ts:18\n                            \n                        \n\n                \n                    \n                        Whether table is occupied by customer(s)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Table.ts:28\n                            \n                        \n\n                \n                    \n                        Whether table is ready to order\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            needsHelp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Table.ts:23\n                            \n                        \n\n                \n                    \n                        If anyone at the table needs help\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Table.ts:13\n                            \n                        \n\n                \n                    \n                        Table Id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            waiterId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/Table.ts:38\n                            \n                        \n\n                \n                    \n                        Id of waiter serving this table\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Customer} from './Customer';\nimport { Staff } from './Staff';\n\n/**\n * Table object with information of customer and if customer needs help, is ready to order\n * or if the table is occupied.\n */\nexport class Table {\n\n  /**\n   * Table Id\n   */\n  tableNumber: number;\n\n  /**\n   * Whether table is occupied by customer(s)\n   */\n  isOccupied: boolean;\n\n  /**\n   * If anyone at the table needs help\n   */\n  needsHelp: boolean;\n\n  /**\n   * Whether table is ready to order\n   */\n  isReady: boolean;\n\n  /**\n   * Customers at this table\n   */\n  customer: Customer[];\n\n  /**\n   * Id of waiter serving this table\n   */\n  waiterId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/table.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _refreshNeeded$\n                            \n                            \n                                    Public\n                                currentStaff\n                            \n                            \n                                refresh$\n                            \n                            \n                                    Private\n                                restaurantTablesURL\n                            \n                            \n                                tables$\n                            \n                            \n                                    Private\n                                    Readonly\n                                tableSubject$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                assignTable\n                            \n                            \n                                    Public\n                                createTable\n                            \n                            \n                                    Public\n                                deleteTable\n                            \n                            \n                                    Public\n                                getNeedHelpTables\n                            \n                            \n                                    Public\n                                getTableByNumber\n                            \n                            \n                                    Public\n                                getTables\n                            \n                            \n                                    Public\n                                getUnoccupiedTables\n                            \n                            \n                                    Public\n                                getUpdatedTables\n                            \n                            \n                                    Public\n                                managerAssignTable\n                            \n                            \n                                    Public\n                                updateTable\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    refreshNeeded\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/table.service.ts:57\n                            \n                        \n\n                \n                    \n                            The constructor of the class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                the http client that is used to make requests to the DB\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            assignTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    assignTable(table: Table)\n                \n            \n\n\n            \n                \n                    Defined in src/app/table.service.ts:182\n                \n            \n\n\n            \n                \n                    Assigns the table to a waiter by making a post request to the DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Table\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the table the waiter needs to be assigned to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable of type Table\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/table.service.ts:167\n                \n            \n\n\n            \n                \n                    Creates a new table by making a post request to the DB.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable of type Table\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deleteTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteTable(table: Table)\n                \n            \n\n\n            \n                \n                    Defined in src/app/table.service.ts:153\n                \n            \n\n\n            \n                \n                    Deletes a table from the DB by making a delete request to the DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Table\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the table that needs to be deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable of type Table\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNeedHelpTables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNeedHelpTables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/table.service.ts:139\n                \n            \n\n\n            \n                \n                    Gets all tables that need help by making a get request to the DB.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable of type Table[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTableByNumber\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTableByNumber(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/table.service.ts:94\n                \n            \n\n\n            \n                \n                    Gets a table by its number by making a get request to the DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the id of the queried table\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable of type Table\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/table.service.ts:71\n                \n            \n\n\n            \n                \n                    Gets all the tables by making a get request to the DB.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable of type Table[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUnoccupiedTables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnoccupiedTables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/table.service.ts:126\n                \n            \n\n\n            \n                \n                    Gets all unoccupied tables by making a get request to the DB.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable of type Table[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUpdatedTables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUpdatedTables()\n                \n            \n\n\n            \n                \n                    Defined in src/app/table.service.ts:81\n                \n            \n\n\n            \n                \n                    Gets all updated tables (by the subject).\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            managerAssignTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    managerAssignTable(table: Table, staffId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/table.service.ts:186\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Table\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    staffId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateTable\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTable(table: Table)\n                \n            \n\n\n            \n                \n                    Defined in src/app/table.service.ts:108\n                \n            \n\n\n            \n                \n                    Updates a table by making a put request to the DB.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Table\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the table that needs to be updated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _refreshNeeded$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/table.service.ts:37\n                            \n                        \n\n                \n                    \n                        A subject that is called when a new request is needed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            currentStaff\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/table.service.ts:27\n                            \n                        \n\n                \n                    \n                        The current staff assigned to a table.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refresh$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/table.service.ts:49\n                            \n                        \n\n                \n                    \n                        A subject that can be called if new observables need to be emitted.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            restaurantTablesURL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'http://localhost:8080/api/v1/tables'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/table.service.ts:22\n                            \n                        \n\n                \n                    \n                        The URL link that is used to make requests to the DB.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tables$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.refresh$.pipe(\n    exhaustMap(() => this.getTables()),\n    share()\n  )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/table.service.ts:54\n                            \n                        \n\n                \n                    \n                        A public observable that can be subscribed to by components.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            tableSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new BehaviorSubject(new Array())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/table.service.ts:32\n                            \n                        \n\n                \n                    \n                        Helper Subject to store orders for state management.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        refreshNeeded\n                    \n                \n\n                \n                    \n                        getrefreshNeeded()\n                    \n                \n                            \n                                \n                                    Defined in src/app/table.service.ts:42\n                                \n                            \n                    \n                        \n                                Gets the private class subject refresh needed\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { exhaustMap, map, share, tap } from 'rxjs/operators';\n\nimport { Table } from '../models/Table';\nimport { BehaviorSubject } from 'rxjs';\nimport { Staff } from '../models/Staff';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * The class that handles requests for the Table DB.\n */\nexport class TableService {\n\n  /**\n   * The URL link that is used to make requests to the DB.\n   */\n  private restaurantTablesURL = 'http://localhost:8080/api/v1/tables';\n\n  /**\n   * The current staff assigned to a table.\n   */\n  public currentStaff: number;\n\n  /**\n   * Helper Subject to store orders for state management.\n   */\n  private readonly tableSubject$ = new BehaviorSubject(new Array());\n\n  /**\n   * A subject that is called when a new request is needed.\n   */\n  private _refreshNeeded$ = new Subject();\n\n  /**\n   * Gets the private class subject refresh needed\n   */\n  get refreshNeeded() {\n    return this._refreshNeeded$;\n  }\n\n  /**\n   * A subject that can be called if new observables need to be emitted.\n   */\n  refresh$ = new BehaviorSubject(null);\n\n  /**\n   * A public observable that can be subscribed to by components.\n   */\n  tables$ = this.refresh$.pipe(\n    exhaustMap(() => this.getTables()),\n    share()\n  );\n\n  /**\n   * The constructor of the class.\n   * \n   * @param httpClient the http client that is used to make requests to the DB\n   */\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * Gets all the tables by making a get request to the DB.\n   * \n   * @returns an observable of type Table[]\n   */\n  public getTables(): Observable {\n    return this.httpClient.get(this.restaurantTablesURL)\n      .pipe(\n        map(response => response)\n      );\n  }\n\n  /**\n   * Gets all updated tables (by the subject).\n   */\n  public getUpdatedTables(): void {\n    this.httpClient.get(this.restaurantTablesURL)\n      .subscribe((tables) => {\n        this.tableSubject$.next(tables);\n      });\n  }\n\n  /**\n   * Gets a table by its number by making a get request to the DB.\n   * \n   * @param id the id of the queried table\n   * @returns an observable of type Table\n   */\n  public getTableByNumber(id: number): Observable {\n    return this.httpClient.get(`${this.restaurantTablesURL}/${id}`)\n      .pipe(\n        tap(() => {\n          this._refreshNeeded$.next();\n        })\n      )\n  }\n\n  /**\n   * Updates a table by making a put request to the DB.\n   * \n   * @param table the table that needs to be updated\n   */\n  public updateTable(table: Table): void {\n    this.httpClient.put(`${this.restaurantTablesURL}/${table.tableNumber}`, table)\n    .subscribe((table) => {\n      let _orders = this.tableSubject$.getValue();\n      _orders.forEach((whichTable) => {\n        if (whichTable.tableNumber == table.tableNumber) {\n          whichTable = table;\n        }\n      });\n      this.tableSubject$.next(_orders);\n    })\n  }\n\n  /**\n   * Gets all unoccupied tables by making a get request to the DB.\n   * \n   * @returns an observable of type Table[]\n   */\n  public getUnoccupiedTables(): Observable {\n    let restaurantTablesUnoccupiedURL: string = this.restaurantTablesURL + '/unoccupied'\n    return this.httpClient.get(restaurantTablesUnoccupiedURL)\n      .pipe(\n        map(response => response)\n      );\n  }\n\n  /**\n   * Gets all tables that need help by making a get request to the DB.\n   * \n   * @returns an observable of type Table[]\n   */\n  public getNeedHelpTables(): Observable {\n    let restaurantTablesNeedHelpURL: string = this.restaurantTablesURL + '/needHelp'\n    return this.httpClient.get(restaurantTablesNeedHelpURL)\n      .pipe(\n        map(response => response)\n      );\n  }\n\n  /**\n   * Deletes a table from the DB by making a delete request to the DB.\n   * \n   * @param table the table that needs to be deleted\n   * @returns an observable of type Table\n   */\n  public deleteTable(table: Table): Observable {\n    return this.httpClient.delete(`${this.restaurantTablesURL}/${table.tableNumber}`)\n      .pipe(\n        tap(() => {\n          this._refreshNeeded$.next();\n        })\n      );\n  }\n\n  /**\n   * Creates a new table by making a post request to the DB.\n   * \n   * @returns an observable of type Table\n   */\n  public createTable(): Observable {\n    const newTable = new Table;\n    newTable.isOccupied = false;\n    newTable.isReady = false;\n    newTable.needsHelp = false;\n    newTable.waiterId = this.currentStaff;\n    return this.httpClient.post(this.restaurantTablesURL, newTable);\n  }\n\n  /**\n   * Assigns the table to a waiter by making a post request to the DB.\n   * \n   * @param table the table the waiter needs to be assigned to\n   * @returns an observable of type Table\n   */\n  public assignTable(table: Table): Observable {\n    return this.httpClient.post(this.restaurantTablesURL + '/assignTable', table);\n  }\n\n  public managerAssignTable(table: Table, staffId: number): Observable {\n    return this.httpClient.put(this.restaurantTablesURL + `/manager/assignTable/${staffId}/${table.tableNumber}`, table);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TablesListDisplayComponent.html":{"url":"components/TablesListDisplayComponent.html","title":"component - TablesListDisplayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TablesListDisplayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/tables-list-display/tables-list-display.component.ts\n\n\n    \n        Description\n    \n    \n        A reusable component to display a list of Tables. isWaiter property is used to display only\ntables that are relevant to the waiter.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tables-list-display\n            \n\n            \n                styleUrls\n                ./tables-list-display.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./tables-list-display.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ORDER_BUTTON_WIDTH\n                            \n                            \n                                refreshTimer$\n                            \n                            \n                                resize$\n                            \n                            \n                                subscription\n                            \n                            \n                                tableList\n                            \n                            \n                                    Public\n                                tableService\n                            \n                            \n                                waiter\n                            \n                            \n                                windowWidth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markAsHelped\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                openSnackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isWaiter\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tableService: TableService, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/tables-list-display/tables-list-display.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tableService\n                                                  \n                                                        \n                                                                        TableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to perform crud operations for tables\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Snackbar that pops up to show messages\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isWaiter\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/tables-list-display/tables-list-display.component.ts:64\n                            \n                        \n                \n                    \n                        Property a parent component can use to display\nspecific tables (true) or all tables (false)\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            markAsHelped\n                        \n                        \n                    \n                \n            \n            \n                \nmarkAsHelped(table: Table)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tables-list-display/tables-list-display.component.ts:111\n                \n            \n\n\n            \n                \n                    Marks a table to helped if it is clicked on and displays snackbar message\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                Table\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to marked as helped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/tables-list-display/tables-list-display.component.ts:75\n                \n            \n\n\n            \n                \n                    Gets all tables depending on if the staff is a manager. Gets specific tables\nif the staff is a waiter. Also sets the\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            openSnackBar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openSnackBar(message: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/tables-list-display/tables-list-display.component.ts:129\n                \n            \n\n\n            \n                \n                    Opens the snackbar with a message as well as an action with a string title\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to display\n\n                                    \n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        that acts as a title to the action\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ORDER_BUTTON_WIDTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tables-list-display/tables-list-display.component.ts:47\n                            \n                        \n\n                \n                    \n                        Minimum size of each table button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshTimer$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : timer(0, 1000).pipe(tap())\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tables-list-display/tables-list-display.component.ts:42\n                            \n                        \n\n                \n                    \n                        A refresh timer that ticks every second\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resize$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : fromEvent(window, 'resize')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tables-list-display/tables-list-display.component.ts:53\n                            \n                        \n\n                \n                    \n                        An event listener that emits a new value every\ntime the window changes\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tables-list-display/tables-list-display.component.ts:37\n                            \n                        \n\n                \n                    \n                        A subscription that uses the timer to get new data from the API\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Table[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tables-list-display/tables-list-display.component.ts:32\n                            \n                        \n\n                \n                    \n                        List of tables displayed\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tableService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TableService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tables-list-display/tables-list-display.component.ts:26\n                            \n                        \n\n                \n                    \n                        to perform crud operations for tables\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            waiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Staff\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tables-list-display/tables-list-display.component.ts:69\n                            \n                        \n\n                \n                    \n                        The staff that logs in to the component\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            windowWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : Math.floor(window.innerWidth/this.ORDER_BUTTON_WIDTH)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/tables-list-display/tables-list-display.component.ts:58\n                            \n                        \n\n                \n                    \n                        Number of columns that the width should take up for each row\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport {TableService} from \"../table.service\";\nimport {Table} from \"../../models/Table\";\nimport {fromEvent, Subscription, timer} from \"rxjs\";\nimport {debounceTime, map, tap} from \"rxjs/operators\";\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Staff } from '../../models/Staff';\n\n/**\n * A reusable component to display a list of Tables. isWaiter property is used to display only\n * tables that are relevant to the waiter.\n */\n@Component({\n  selector: 'app-tables-list-display',\n  templateUrl: './tables-list-display.component.html',\n  styleUrls: ['./tables-list-display.component.sass']\n})\nexport class TablesListDisplayComponent implements OnInit {\n\n  /**\n   *\n   * @param tableService to perform crud operations for tables\n   * @param snackBar Snackbar that pops up to show messages\n   */\n  constructor(\n    public tableService: TableService,\n    private snackBar: MatSnackBar) { }\n\n  /**\n   * List of tables displayed\n   */\n  tableList: Table[] = [];\n\n  /**\n   * A subscription that uses the timer to get new data from the API\n   */\n  subscription: Subscription;\n\n  /**\n   * A refresh timer that ticks every second\n   */\n  refreshTimer$ = timer(0, 1000).pipe(tap());\n\n  /**\n   * Minimum size of each table button\n   */\n  ORDER_BUTTON_WIDTH = 300;\n\n  /**\n   * An event listener that emits a new value every\n   * time the window changes\n   */\n  resize$ = fromEvent(window, 'resize');\n\n  /**\n   * Number of columns that the width should take up for each row\n   */\n  windowWidth: number = Math.floor(window.innerWidth/this.ORDER_BUTTON_WIDTH);\n\n  /**\n   * Property a parent component can use to display\n   * specific tables (true) or all tables (false)\n   */\n  @Input() isWaiter: boolean;\n\n  /**\n   * The staff that logs in to the component\n   */\n  waiter: Staff;\n\n  /**\n   * Gets all tables depending on if the staff is a manager. Gets specific tables\n   * if the staff is a waiter. Also sets the\n   */\n  ngOnInit(): void {\n    this.tableService.getUpdatedTables()\n\n    if (!this.isWaiter) {\n      this.tableService.tables$.subscribe((tables) => {\n        this.tableList = tables;\n      })\n      this.subscription = this.refreshTimer$.subscribe(this.tableService.refresh$);\n      this.resize$\n        .pipe(debounceTime(250),\n          tap(),\n        )\n        .subscribe((w) => {\n          this.windowWidth = Math.floor(window.innerWidth / this.ORDER_BUTTON_WIDTH\n          )});\n    } else {\n      this.tableService.tables$.pipe(\n        map((tables) => tables.filter(table => table.waiterId == this.tableService.currentStaff))\n      ).subscribe((tables) => {\n        this.tableList = tables;\n      })\n      this.subscription = this.refreshTimer$.subscribe(this.tableService.refresh$);\n      this.resize$\n        .pipe(debounceTime(250),\n          tap(),\n        )\n        .subscribe((w) => {\n          this.windowWidth = Math.floor(window.innerWidth / this.ORDER_BUTTON_WIDTH\n          )});\n    }\n  }\n\n  /**\n   * Marks a table to helped if it is clicked on and displays snackbar message\n   * @param table to marked as helped\n   */\n  markAsHelped(table: Table): void {\n    if(table.needsHelp) {\n      this.tableService.getTableByNumber(table.tableNumber).subscribe((updatedTable) => {\n        updatedTable.needsHelp = false;\n        this.tableService.updateTable(updatedTable);\n      })\n      this.openSnackBar(\"Table was marked as helped!\",\"Close\");\n    } else {\n      this.openSnackBar(\"Table doesn't need help!\",\"Close\");\n    }\n  }\n\n  /**\n   * Opens the snackbar with a message as well as an action with a string title\n   * @param message to display\n   * @param action that acts as a title to the action\n   * @private\n   */\n  private openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, {\n      duration: 3000,\n      panelClass: ['orderSnackBar']\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    Tables\n    \n  \n\n\n\n  \n    \n      Table {{table.tableNumber}} \n      Needs Help and is Ready to Order!\n    \n\n    \n      \n        Table {{table.tableNumber}} \n        Needs Help!\n      \n    \n\n    \n        \n          Table {{table.tableNumber}} \n          is Ready to Order!\n        \n    \n\n    \n      \n        Table {{table.tableNumber}} \n      \n    \n  \n  \n    \n      add\n    \n   -->\n\n\n    \n\n    \n                \n                    ./tables-list-display.component.sass\n                \n                $btnSize: 75%\n$hasOrder: green\n$noOrder: red\n\n.tableTitle\n  display: block\n  margin-left: auto\n  margin-right: auto\n  width: 100px\n  height: 100px\n  background-color: #76cfb9\n  border-radius: 4em\n\n.readyToOrder\n  font-family: 'Raleway', sans-serif\n  border-color: $hasOrder\n  width: $btnSize\n  height: $btnSize\n\n.noIsReadyToOrder\n  font-family: 'Raleway', sans-serif\n  border-color: $noOrder\n  width: $btnSize\n  height: $btnSize\n\n.needsHelpReadyToOrder\n  font-family: 'Raleway', sans-serif\n  background-color: green\n  color: white\n  border-color: $noOrder\n  width: $btnSize\n  height: $btnSize\n\n.needsHelp\n  font-family: 'Raleway', sans-serif\n  border-color: $noOrder\n  width: $btnSize\n  height: $btnSize\n\n.tableNumber\n  font-family: 'Raleway', sans-serif\n  font-size: 30px\n\n.deliveryImg\n  height: 50px\n  width: 50px\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Tables                  Table {{table.tableNumber}}       Needs Help and is Ready to Order!                      Table {{table.tableNumber}}         Needs Help!                                Table {{table.tableNumber}}           is Ready to Order!                              Table {{table.tableNumber}}                         add       -->'\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TablesListDisplayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WaiterMenuComponent.html":{"url":"components/WaiterMenuComponent.html","title":"component - WaiterMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WaiterMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/waiter-menu/waiter-menu.component.ts\n\n\n    \n        Description\n    \n    \n        Component for all waiter staff specific features including their related permissions\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-waiter-menu\n            \n\n            \n                styleUrls\n                ./waiter-menu.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./waiter-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                paramsObject\n                            \n                            \n                                waiter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createNewOrder\n                            \n                            \n                                createNewTable\n                            \n                            \n                                deleteMenuItem\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openAddMenuDialog\n                            \n                            \n                                openSelectTableDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, menuService: MenuService, dialog: MatDialog, staffService: StaffService, tableService: TableService, customerService: CustomerService, orderService: OrderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/waiter-menu/waiter-menu.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to access params from parent component\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to perform crud on menus\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to open/close dialogs\n\n                                                        \n                                                \n                                                \n                                                        staffService\n                                                  \n                                                        \n                                                                        StaffService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to perform crud on staff objects\n\n                                                        \n                                                \n                                                \n                                                        tableService\n                                                  \n                                                        \n                                                                        TableService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to perform crud on tables\n\n                                                        \n                                                \n                                                \n                                                        customerService\n                                                  \n                                                        \n                                                                        CustomerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to perform crud on customers\n\n                                                        \n                                                \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                to perform crud on orders\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewOrder\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewOrder()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/waiter-menu.component.ts:101\n                \n            \n\n\n            \n                \n                    Creates a new order with a new customer\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createNewTable\n                        \n                        \n                    \n                \n            \n            \n                \ncreateNewTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/waiter-menu.component.ts:94\n                \n            \n\n\n            \n                \n                    Creates new table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteMenuItem\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteMenuItem(menu: Menu)\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/waiter-menu.component.ts:87\n                \n            \n\n\n            \n                \n                    Deletes a menu\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    menu\n                                    \n                                                Menu\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/waiter-menu.component.ts:62\n                \n            \n\n\n            \n                \n                    Initialises with given waiter ID through the activated route\nand initialises order and table services with this waiter Id.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openAddMenuDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenAddMenuDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/waiter-menu.component.ts:114\n                \n            \n\n\n            \n                \n                    Opens dialog to add menu item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openSelectTableDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenSelectTableDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/waiter-menu/waiter-menu.component.ts:77\n                \n            \n\n\n            \n                \n                    Opens dialog that helps user to select a table\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/waiter-menu.component.ts:40\n                            \n                        \n\n                \n                    \n                        to open/close dialogs\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            paramsObject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/waiter-menu.component.ts:56\n                            \n                        \n\n                \n                    \n                        Helper paramObject to route to this page with an ID\nafter logging in\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            waiter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Staff\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/waiter-menu/waiter-menu.component.ts:50\n                            \n                        \n\n                \n                    \n                        The staff that has logged in to the waiter component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Table } from '../../models/Table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MenuService } from \"../menu.service\";\nimport { Menu } from \"../../models/Menu\";\nimport { Observable } from \"rxjs\";\nimport { PickTableDialogComponent } from \"./pick-table-dialog/pick-table-dialog.component\";\nimport { TableService } from '../table.service';\nimport { switchMap } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\nimport { Staff } from '../../models/Staff';\nimport { StaffService } from '../staff.service';\nimport { CustomerService } from '../customer.service';\nimport { OrderService } from '../order.service';\nimport { AddMenuDialogComponent } from './add-menu-dialog/add-menu-dialog.component';\n\n/**\n * Component for all waiter staff specific features including their related permissions\n */\n@Component({\n  selector: 'app-waiter-menu',\n  templateUrl: './waiter-menu.component.html',\n  styleUrls: ['./waiter-menu.component.sass'],\n})\nexport class WaiterMenuComponent implements OnInit {\n\n  /**\n   *\n   * @param route to access params from parent component\n   * @param menuService to perform crud on menus\n   * @param dialog to open/close dialogs\n   * @param staffService to perform crud on staff objects\n   * @param tableService to perform crud on tables\n   * @param customerService to perform crud on customers\n   * @param orderService to perform crud on orders\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private menuService: MenuService,\n    public dialog: MatDialog,\n    private staffService: StaffService,\n    private tableService: TableService,\n    private customerService: CustomerService,\n    private orderService: OrderService\n  ) { }\n\n  /**\n   * The staff that has logged in to the waiter component\n   */\n  waiter: Staff;\n\n  /**\n   * Helper paramObject to route to this page with an ID\n   * after logging in\n   */\n  paramsObject: any;\n\n  /**\n   * Initialises with given waiter ID through the activated route\n   * and initialises order and table services with this waiter Id.\n   */\n  ngOnInit(): void {\n    this.route.queryParamMap.subscribe((params) => {\n      this.paramsObject = { ...params.keys, ...params };\n      this.staffService.getStaffById(this.paramsObject.params.staffId).subscribe((staff) => {\n        this.waiter = staff;\n        this.orderService.waiterId = this.waiter.id;\n        this.tableService.currentStaff = this.waiter.id;\n      })\n    });\n  }\n\n\n  /**\n   * Opens dialog that helps user to select a table\n   */\n  openSelectTableDialog(): Observable {\n    const dialogRef = this.dialog.open(PickTableDialogComponent);\n    return dialogRef.afterClosed();\n  }\n\n\n  /**\n   * Deletes a menu\n   * @param menu to delete\n   */\n  deleteMenuItem(menu: Menu) {\n    this.menuService.deleteMenu(menu);\n  }\n\n  /**\n   * Creates new table\n   */\n  createNewTable(): void {\n    this.tableService.createTable().subscribe();\n  }\n\n  /**\n   * Creates a new order with a new customer\n   */\n  createNewOrder(): void {\n    this.openSelectTableDialog()\n      .pipe(\n        switchMap((dialogResult) =>\n          this.customerService.createCustomerWithTable(dialogResult))\n      ).subscribe((a) =>\n        this.orderService.createNewOrderWithCustomer(a)\n      );\n  }\n\n  /**\n   * Opens dialog to add menu item\n   */\n  openAddMenuDialog() {\n    const title = \"Add New Dish\";\n    let menu: Menu = new Menu();\n    const hasMenuItem: boolean = false;\n    const dialogRef = this.dialog.open(AddMenuDialogComponent, {\n      data: { menu, title, hasMenuItem },\n      width: '50%',\n      autoFocus: false\n    });\n\n    dialogRef.afterClosed().subscribe(menu => {\n      if (menu) {\n        this.menuService.createMenuItem(menu);\n      }\n    })\n  }\n\n}\n\n\n    \n\n    \n        \n    \n      \n        \n        \n        \n        Waiter Menu\n        \n        \n        \n          \n        \n      \n    \n  \n  \n  \n  \n\n\n\n\n\n    \n\n    \n                \n                    ./waiter-menu.component.sass\n                \n                $noOrder: red\n$hasOrder: green\n$h1Col: teal\n$btnSize: 75%\n\n$tableButCol: brown\n\n.tableList\n  display: grid\n  grid-template-columns: repeat(auto-fit, minmax(240px,1fr))\n  gap: 1rem\n  width: border-box\n\n.quickAddButton\n  width: 35px\n  height: 35px\n\nli\n  display: flex\n  flex-direction: row\n  border: 5px\n  width: auto\n  height: 50px\n  list-style-type: none\n\n.confirmDeliverButton\n  border-color: $noOrder\n  width: $btnSize\n  height: $btnSize\n\n.readyToOrder\n  border-color: $hasOrder\n  width: $btnSize\n  height: $btnSize\n\n.noIsReadyToOrder\n  border-color: $noOrder\n  width: $btnSize\n  height: $btnSize\n\n.addOrder\n  border-color: yellow\n\n.tableBut\n  border-color: $tableButCol\n  width: $btnSize\n  height: $btnSize\n\n.toolBarTitle\n  font-family: 'Raleway', sans-serif\n  font-size: 50px\n  padding-left: 280px\n\n.toolBar\n  background-color: #76cfb9\n  z-index: 1\n  color: white\n  position: fixed\n\n.buttonRow\n  list-style: none\n  padding-left: 0\n\n.flex-item\n  width: 100%\n  -webkit-flex-direction: column\n  flex-direction: column\n  float: left\n\n.botButtonRow\n  width: 100%\n  position: absolute\n  bottom: 0\n\n.spacer\n  flex: 1 1 auto\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Waiter Menu                                                            '\n    var COMPONENTS = [{'name': 'AddIngredientComponent', 'selector': 'app-add-ingredient'},{'name': 'AddIngredientDialogComponent', 'selector': 'app-add-ingredient-dialog'},{'name': 'AddMenuDialogComponent', 'selector': 'app-add-order-dialog'},{'name': 'AddStaffComponent', 'selector': 'app-add-staff'},{'name': 'AddStaffDialogComponent', 'selector': 'app-add-staff-dialog'},{'name': 'AllergensChipsComponent', 'selector': 'allergens-chips'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BasketComponent', 'selector': 'app-basket'},{'name': 'CallWaiterComponent', 'selector': 'call-waiter'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CustomerInterfaceComponent', 'selector': 'app-customer-interface'},{'name': 'ExpansionPannelComponent', 'selector': 'expansion-pannel'},{'name': 'HomePageComponent', 'selector': 'app-home-page'},{'name': 'IngredientsDialogComponent', 'selector': 'app-ingredients-dialog'},{'name': 'KitchenMenuComponent', 'selector': 'app-kitchen-menu'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginInputComponent', 'selector': 'app-login-input'},{'name': 'ManagerMenuComponent', 'selector': 'app-manager-menu'},{'name': 'MenusListDisplayComponent', 'selector': 'app-menus-list-display'},{'name': 'NotificationsComponent', 'selector': 'notifications'},{'name': 'NotificationsDialogComponent', 'selector': 'notifications-dialog'},{'name': 'OrderComponent', 'selector': 'app-order'},{'name': 'OrdersListDisplayComponent', 'selector': 'app-orders-list-display'},{'name': 'OrderTrackerComponent', 'selector': 'app-order-tracker'},{'name': 'PaymentComponent', 'selector': 'payment-stepper'},{'name': 'PickTableDialogComponent', 'selector': 'app-pick-table-dialog'},{'name': 'ReadyToOrderComponent', 'selector': 'ready-to-order'},{'name': 'SalesDialogComponent', 'selector': 'app-sales-dialog'},{'name': 'SelectTableDialogComponent', 'selector': 'select-table-dialog'},{'name': 'TablesListDisplayComponent', 'selector': 'app-tables-list-display'},{'name': 'WaiterMenuComponent', 'selector': 'app-waiter-menu'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WaiterMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/category-dialog/category-dialog.component.ts\n            \n            component\n            CategoryDialogComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/customer-interface/allergens-chips/allergens-chips.component.ts\n            \n            component\n            AllergensChipsComponent\n            \n                86 %\n                (20/23)\n            \n        \n        \n            \n                \n                src/app/customer-interface/basket/basket.component.ts\n            \n            component\n            BasketComponent\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/customer-interface/call-waiter/call-waiter.component.ts\n            \n            component\n            CallWaiterComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/customer-interface/customer-interface.component.ts\n            \n            component\n            CustomerInterfaceComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                src/app/customer-interface/expansion-pannel/expansion-pannel.component.ts\n            \n            component\n            ExpansionPannelComponent\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/customer-interface/order-tracker/order-tracker.component.ts\n            \n            component\n            OrderTrackerComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/customer-interface/payment/payment.component.ts\n            \n            component\n            PaymentComponent\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                src/app/customer-interface/ready-to-order/ready-to-order.component.ts\n            \n            component\n            ReadyToOrderComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/customer.service.ts\n            \n            injectable\n            CustomerService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/home-page/home-page.component.ts\n            \n            component\n            HomePageComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/home-page/select-table-dialog/select-table-dialog.component.ts\n            \n            component\n            SelectTableDialogComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/ingredient.service.ts\n            \n            injectable\n            IngredientService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/kitchen-menu/kitchen-menu.component.ts\n            \n            component\n            KitchenMenuComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/login-input/login-input.component.ts\n            \n            component\n            LoginInputComponent\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                src/app/login-input/login-input.service.ts\n            \n            injectable\n            InputService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/manager-menu/add-ingredient-dialog/add-ingredient-dialog.component.ts\n            \n            component\n            AddIngredientDialogComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/manager-menu/add-ingredient/add-ingredient.component.ts\n            \n            component\n            AddIngredientComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/manager-menu/add-staff-dialog/add-staff-dialog.component.ts\n            \n            component\n            AddStaffDialogComponent\n            \n                76 %\n                (13/17)\n            \n        \n        \n            \n                \n                src/app/manager-menu/add-staff/add-staff.component.ts\n            \n            component\n            AddStaffComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/manager-menu/add-staff/sales-dialog/sales-dialog.component.ts\n            \n            component\n            SalesDialogComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/manager-menu/manager-menu.component.ts\n            \n            component\n            ManagerMenuComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/meal.service.ts\n            \n            injectable\n            MealService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/menu-category.service.ts\n            \n            injectable\n            MenuCategoryService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/menu-filter.service.ts\n            \n            injectable\n            MenuFilterService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/menu.service.ts\n            \n            injectable\n            MenuService\n            \n                72 %\n                (13/18)\n            \n        \n        \n            \n                \n                src/app/menus-list-display/ingredients-dialog/ingredients-dialog.component.ts\n            \n            component\n            IngredientsDialogComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/menus-list-display/menus-list-display.component.ts\n            \n            component\n            MenusListDisplayComponent\n            \n                88 %\n                (15/17)\n            \n        \n        \n            \n                \n                src/app/order.service.ts\n            \n            injectable\n            OrderService\n            \n                96 %\n                (24/25)\n            \n        \n        \n            \n                \n                src/app/orders-list-display/orders-list-display.component.ts\n            \n            component\n            OrdersListDisplayComponent\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                src/app/routeAnimations.ts\n            \n            variable\n            fader\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/staff.service.ts\n            \n            injectable\n            StaffService\n            \n                71 %\n                (10/14)\n            \n        \n        \n            \n                \n                src/app/table.service.ts\n            \n            injectable\n            TableService\n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                src/app/tables-list-display/tables-list-display.component.ts\n            \n            component\n            TablesListDisplayComponent\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/waiter-menu/add-menu-dialog/add-menu-dialog.component.ts\n            \n            component\n            AddMenuDialogComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/waiter-menu/notifications/notifications-dialog/notifications-dialog.component.ts\n            \n            component\n            NotificationsDialogComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/waiter-menu/notifications/notifications.component.ts\n            \n            component\n            NotificationsComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/waiter-menu/order/order.component.ts\n            \n            component\n            OrderComponent\n            \n                88 %\n                (23/26)\n            \n        \n        \n            \n                \n                src/app/waiter-menu/pick-table-dialog/pick-table-dialog.component.ts\n            \n            component\n            PickTableDialogComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/waiter-menu/waiter-menu.component.ts\n            \n            component\n            WaiterMenuComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/Customer.ts\n            \n            class\n            Customer\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/models/Ingredient.ts\n            \n            class\n            Ingredient\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/models/Login.ts\n            \n            class\n            Login\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/models/Meal.ts\n            \n            class\n            Meal\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/models/Menu.ts\n            \n            class\n            Menu\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                src/models/MenuCategory.ts\n            \n            class\n            MenuCategory\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/models/Order.ts\n            \n            class\n            Order\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/models/Staff.ts\n            \n            class\n            Staff\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/models/Table.ts\n            \n            class\n            Table\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/models/selectedCategory.ts\n            \n            class\n            selectedCategory\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.14\n        \n            @angular/cdk : ^11.1.0\n        \n            @angular/common : ~10.0.3\n        \n            @angular/compiler : ~10.0.3\n        \n            @angular/core : ~10.0.3\n        \n            @angular/forms : ~10.0.3\n        \n            @angular/material : ^11.2.1\n        \n            @angular/platform-browser : ~10.0.3\n        \n            @angular/platform-browser-dynamic : ~10.0.3\n        \n            @angular/router : ~10.0.3\n        \n            @popperjs/core : ^2.9.0\n        \n            animejs : ^3.2.1\n        \n            bootstrap : ^4.6.0\n        \n            jquery : ^3.6.0\n        \n            json : ^10.0.0\n        \n            json-server : ^0.16.3\n        \n            ng-otp-input : ^1.7.1\n        \n            rxjs : ~6.5.5\n        \n            server : ^1.0.31\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRestaurantWebApp\nThis project was generated with Angular CLI version 10.0.2.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nDevelopment Mock Database\nCd into the 'RestaurantWebApp' directory. Run npm i json-server. Next run json-server --watch src/assets/mockDb.json to run the mock database.\nFor Windoze users: if json-server --watch src/assets/mockDb.json does not work try npx json-server --watch src/assets/mockDb.json\nFor more info on the mock database look here (https://www.npmjs.com/package/json-server)\nRunning unit tests\nRun ng test to execute the unit tests via Karma\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAddIngredientComponent\n\nAddIngredientComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddIngredientComponent->AppModule\n\n\n\n\n\nAddIngredientDialogComponent\n\nAddIngredientDialogComponent\n\nAppModule -->\n\nAddIngredientDialogComponent->AppModule\n\n\n\n\n\nAddMenuDialogComponent\n\nAddMenuDialogComponent\n\nAppModule -->\n\nAddMenuDialogComponent->AppModule\n\n\n\n\n\nAddStaffComponent\n\nAddStaffComponent\n\nAppModule -->\n\nAddStaffComponent->AppModule\n\n\n\n\n\nAddStaffDialogComponent\n\nAddStaffDialogComponent\n\nAppModule -->\n\nAddStaffDialogComponent->AppModule\n\n\n\n\n\nAllergensChipsComponent\n\nAllergensChipsComponent\n\nAppModule -->\n\nAllergensChipsComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBasketComponent\n\nBasketComponent\n\nAppModule -->\n\nBasketComponent->AppModule\n\n\n\n\n\nCallWaiterComponent\n\nCallWaiterComponent\n\nAppModule -->\n\nCallWaiterComponent->AppModule\n\n\n\n\n\nCategoryDialogComponent\n\nCategoryDialogComponent\n\nAppModule -->\n\nCategoryDialogComponent->AppModule\n\n\n\n\n\nCustomerInterfaceComponent\n\nCustomerInterfaceComponent\n\nAppModule -->\n\nCustomerInterfaceComponent->AppModule\n\n\n\n\n\nExpansionPannelComponent\n\nExpansionPannelComponent\n\nAppModule -->\n\nExpansionPannelComponent->AppModule\n\n\n\n\n\nHomePageComponent\n\nHomePageComponent\n\nAppModule -->\n\nHomePageComponent->AppModule\n\n\n\n\n\nIngredientsDialogComponent\n\nIngredientsDialogComponent\n\nAppModule -->\n\nIngredientsDialogComponent->AppModule\n\n\n\n\n\nKitchenMenuComponent\n\nKitchenMenuComponent\n\nAppModule -->\n\nKitchenMenuComponent->AppModule\n\n\n\n\n\nLoginInputComponent\n\nLoginInputComponent\n\nAppModule -->\n\nLoginInputComponent->AppModule\n\n\n\n\n\nManagerMenuComponent\n\nManagerMenuComponent\n\nAppModule -->\n\nManagerMenuComponent->AppModule\n\n\n\n\n\nMenusListDisplayComponent\n\nMenusListDisplayComponent\n\nAppModule -->\n\nMenusListDisplayComponent->AppModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nAppModule -->\n\nNotificationsComponent->AppModule\n\n\n\n\n\nNotificationsDialogComponent\n\nNotificationsDialogComponent\n\nAppModule -->\n\nNotificationsDialogComponent->AppModule\n\n\n\n\n\nOrderComponent\n\nOrderComponent\n\nAppModule -->\n\nOrderComponent->AppModule\n\n\n\n\n\nOrderTrackerComponent\n\nOrderTrackerComponent\n\nAppModule -->\n\nOrderTrackerComponent->AppModule\n\n\n\n\n\nOrdersListDisplayComponent\n\nOrdersListDisplayComponent\n\nAppModule -->\n\nOrdersListDisplayComponent->AppModule\n\n\n\n\n\nPaymentComponent\n\nPaymentComponent\n\nAppModule -->\n\nPaymentComponent->AppModule\n\n\n\n\n\nPickTableDialogComponent\n\nPickTableDialogComponent\n\nAppModule -->\n\nPickTableDialogComponent->AppModule\n\n\n\n\n\nReadyToOrderComponent\n\nReadyToOrderComponent\n\nAppModule -->\n\nReadyToOrderComponent->AppModule\n\n\n\n\n\nSalesDialogComponent\n\nSalesDialogComponent\n\nAppModule -->\n\nSalesDialogComponent->AppModule\n\n\n\n\n\nSelectTableDialogComponent\n\nSelectTableDialogComponent\n\nAppModule -->\n\nSelectTableDialogComponent->AppModule\n\n\n\n\n\nTablesListDisplayComponent\n\nTablesListDisplayComponent\n\nAppModule -->\n\nTablesListDisplayComponent->AppModule\n\n\n\n\n\nWaiterMenuComponent\n\nWaiterMenuComponent\n\nAppModule -->\n\nWaiterMenuComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    31 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        11 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/selectedCategory.html":{"url":"classes/selectedCategory.html","title":"class - selectedCategory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  selectedCategory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/selectedCategory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                meal\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            meal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Menu[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/selectedCategory.ts:13\n                            \n                        \n\n                \n                    \n                        Menu items in the category\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/models/selectedCategory.ts:8\n                            \n                        \n\n                \n                    \n                        Name of Category\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Menu } from './Menu';\n\nexport class selectedCategory {\n\n  /**\n   * Name of Category\n   */\n  name: String;\n\n  /**\n   * Menu items in the category\n   */\n  meal: Menu[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            fader   (src/.../routeAnimations.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/routeAnimations.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            fader\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : trigger('routeAnimations',[\n    transition('**',[\n      query(':enter, :leave',[\n        style({\n          position: 'absolute',\n          left: 0,\n          width: '100%',\n          opacity: 0,\n          transform: 'scale(0) translateY(100%)',\n        }),\n      ]),\n      query(':enter', [\n        animate('600ms ease',\n          style({opacity:1, transform: 'scale(1) translateY(0)'})\n        )\n      ])\n    ])\n  ])\n                        \n                    \n\n                \n                    \n                        Animates page by changing opacity from 0 to 1 and pulling it up from the bottom\nof the screen\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
